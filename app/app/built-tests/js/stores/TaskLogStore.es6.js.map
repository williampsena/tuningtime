{"version":3,"names":[],"mappings":"","sources":["js/stores/TaskLogStore.es6.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskLogStore = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _q = require('q');\n\nvar _q2 = _interopRequireDefault(_q);\n\nvar _BaseStore2 = require('./BaseStore');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TaskLogStore = exports.TaskLogStore = function (_BaseStore) {\n  _inherits(TaskLogStore, _BaseStore);\n\n  function TaskLogStore(databases) {\n    _classCallCheck(this, TaskLogStore);\n\n    return _possibleConstructorReturn(this, (TaskLogStore.__proto__ || Object.getPrototypeOf(TaskLogStore)).call(this, databases, 'taskLog'));\n  }\n\n  _createClass(TaskLogStore, [{\n    key: 'filterByDate',\n    value: function filterByDate(start, end) {\n      return this.db.where('createAt').between(start, end).toArray();\n    }\n  }, {\n    key: 'updateTask',\n    value: function updateTask(model) {\n      return this.db.filter(function (x) {\n        return x.task.id === model.id;\n      }).modify({ task: model });\n    }\n  }]);\n\n  return TaskLogStore;\n}(_BaseStore2.BaseStore);"],"file":"js/stores/TaskLogStore.es6.js","sourceRoot":"/source/"}