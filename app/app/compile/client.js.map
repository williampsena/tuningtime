{"version":3,"names":[],"mappings":"","sources":["client.js"],"sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nvar _semantic = __webpack_require__(1);\\n\\nvar _semantic2 = _interopRequireDefault(_semantic);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(4);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _history = __webpack_require__(6);\\n\\nvar _routes = __webpack_require__(7);\\n\\nvar _routes2 = _interopRequireDefault(_routes);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar dbContext = __webpack_require__(12);\\n\\ndbContext.stores.setting.preload().then(function () {\\n  (0, _reactDom.render)(_react2.default.createElement(_reactRouter.Router, { history: _reactRouter.hashHistory, routes: _routes2.default }), document.getElementById('app'));\\n}).catch(function (err) {\\n  alert('Critical error: ' + err);\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/client.jsx\\n ** module id = 0\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/client.jsx?\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"/* WEBPACK VAR INJECTION */(function(jQuery) { /*\\n * # Semantic UI - 2.2.4\\n * https://github.com/Semantic-Org/Semantic-UI\\n * http://www.semantic-ui.com/\\n *\\n * Copyright 2014 Contributors\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n/*!\\n * # Semantic UI 2.2.4 - Site\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n$.site = $.fn.site = function(parameters) {\\n  var\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n\\n    settings        = ( $.isPlainObject(parameters) )\\n      ? $.extend(true, {}, $.site.settings, parameters)\\n      : $.extend({}, $.site.settings),\\n\\n    namespace       = settings.namespace,\\n    error           = settings.error,\\n\\n    eventNamespace  = '.' + namespace,\\n    moduleNamespace = 'module-' + namespace,\\n\\n    $document       = $(document),\\n    $module         = $document,\\n    element         = this,\\n    instance        = $module.data(moduleNamespace),\\n\\n    module,\\n    returnedValue\\n  ;\\n  module = {\\n\\n    initialize: function() {\\n      module.instantiate();\\n    },\\n\\n    instantiate: function() {\\n      module.verbose('Storing instance of site', module);\\n      instance = module;\\n      $module\\n        .data(moduleNamespace, module)\\n      ;\\n    },\\n\\n    normalize: function() {\\n      module.fix.console();\\n      module.fix.requestAnimationFrame();\\n    },\\n\\n    fix: {\\n      console: function() {\\n        module.debug('Normalizing window.console');\\n        if (console === undefined || console.log === undefined) {\\n          module.verbose('Console not available, normalizing events');\\n          module.disable.console();\\n        }\\n        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {\\n          module.verbose('Console group not available, normalizing events');\\n          window.console.group = function() {};\\n          window.console.groupEnd = function() {};\\n          window.console.groupCollapsed = function() {};\\n        }\\n        if (typeof console.markTimeline == 'undefined') {\\n          module.verbose('Mark timeline not available, normalizing events');\\n          window.console.markTimeline = function() {};\\n        }\\n      },\\n      consoleClear: function() {\\n        module.debug('Disabling programmatic console clearing');\\n        window.console.clear = function() {};\\n      },\\n      requestAnimationFrame: function() {\\n        module.debug('Normalizing requestAnimationFrame');\\n        if(window.requestAnimationFrame === undefined) {\\n          module.debug('RequestAnimationFrame not available, normalizing event');\\n          window.requestAnimationFrame = window.requestAnimationFrame\\n            || window.mozRequestAnimationFrame\\n            || window.webkitRequestAnimationFrame\\n            || window.msRequestAnimationFrame\\n            || function(callback) { setTimeout(callback, 0); }\\n          ;\\n        }\\n      }\\n    },\\n\\n    moduleExists: function(name) {\\n      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);\\n    },\\n\\n    enabled: {\\n      modules: function(modules) {\\n        var\\n          enabledModules = []\\n        ;\\n        modules = modules || settings.modules;\\n        $.each(modules, function(index, name) {\\n          if(module.moduleExists(name)) {\\n            enabledModules.push(name);\\n          }\\n        });\\n        return enabledModules;\\n      }\\n    },\\n\\n    disabled: {\\n      modules: function(modules) {\\n        var\\n          disabledModules = []\\n        ;\\n        modules = modules || settings.modules;\\n        $.each(modules, function(index, name) {\\n          if(!module.moduleExists(name)) {\\n            disabledModules.push(name);\\n          }\\n        });\\n        return disabledModules;\\n      }\\n    },\\n\\n    change: {\\n      setting: function(setting, value, modules, modifyExisting) {\\n        modules = (typeof modules === 'string')\\n          ? (modules === 'all')\\n            ? settings.modules\\n            : [modules]\\n          : modules || settings.modules\\n        ;\\n        modifyExisting = (modifyExisting !== undefined)\\n          ? modifyExisting\\n          : true\\n        ;\\n        $.each(modules, function(index, name) {\\n          var\\n            namespace = (module.moduleExists(name))\\n              ? $.fn[name].settings.namespace || false\\n              : true,\\n            $existingModules\\n          ;\\n          if(module.moduleExists(name)) {\\n            module.verbose('Changing default setting', setting, value, name);\\n            $.fn[name].settings[setting] = value;\\n            if(modifyExisting && namespace) {\\n              $existingModules = $(':data(module-' + namespace + ')');\\n              if($existingModules.length > 0) {\\n                module.verbose('Modifying existing settings', $existingModules);\\n                $existingModules[name]('setting', setting, value);\\n              }\\n            }\\n          }\\n        });\\n      },\\n      settings: function(newSettings, modules, modifyExisting) {\\n        modules = (typeof modules === 'string')\\n          ? [modules]\\n          : modules || settings.modules\\n        ;\\n        modifyExisting = (modifyExisting !== undefined)\\n          ? modifyExisting\\n          : true\\n        ;\\n        $.each(modules, function(index, name) {\\n          var\\n            $existingModules\\n          ;\\n          if(module.moduleExists(name)) {\\n            module.verbose('Changing default setting', newSettings, name);\\n            $.extend(true, $.fn[name].settings, newSettings);\\n            if(modifyExisting && namespace) {\\n              $existingModules = $(':data(module-' + namespace + ')');\\n              if($existingModules.length > 0) {\\n                module.verbose('Modifying existing settings', $existingModules);\\n                $existingModules[name]('setting', newSettings);\\n              }\\n            }\\n          }\\n        });\\n      }\\n    },\\n\\n    enable: {\\n      console: function() {\\n        module.console(true);\\n      },\\n      debug: function(modules, modifyExisting) {\\n        modules = modules || settings.modules;\\n        module.debug('Enabling debug for modules', modules);\\n        module.change.setting('debug', true, modules, modifyExisting);\\n      },\\n      verbose: function(modules, modifyExisting) {\\n        modules = modules || settings.modules;\\n        module.debug('Enabling verbose debug for modules', modules);\\n        module.change.setting('verbose', true, modules, modifyExisting);\\n      }\\n    },\\n    disable: {\\n      console: function() {\\n        module.console(false);\\n      },\\n      debug: function(modules, modifyExisting) {\\n        modules = modules || settings.modules;\\n        module.debug('Disabling debug for modules', modules);\\n        module.change.setting('debug', false, modules, modifyExisting);\\n      },\\n      verbose: function(modules, modifyExisting) {\\n        modules = modules || settings.modules;\\n        module.debug('Disabling verbose debug for modules', modules);\\n        module.change.setting('verbose', false, modules, modifyExisting);\\n      }\\n    },\\n\\n    console: function(enable) {\\n      if(enable) {\\n        if(instance.cache.console === undefined) {\\n          module.error(error.console);\\n          return;\\n        }\\n        module.debug('Restoring console function');\\n        window.console = instance.cache.console;\\n      }\\n      else {\\n        module.debug('Disabling console function');\\n        instance.cache.console = window.console;\\n        window.console = {\\n          clear          : function(){},\\n          error          : function(){},\\n          group          : function(){},\\n          groupCollapsed : function(){},\\n          groupEnd       : function(){},\\n          info           : function(){},\\n          log            : function(){},\\n          markTimeline   : function(){},\\n          warn           : function(){}\\n        };\\n      }\\n    },\\n\\n    destroy: function() {\\n      module.verbose('Destroying previous site for', $module);\\n      $module\\n        .removeData(moduleNamespace)\\n      ;\\n    },\\n\\n    cache: {},\\n\\n    setting: function(name, value) {\\n      if( $.isPlainObject(name) ) {\\n        $.extend(true, settings, name);\\n      }\\n      else if(value !== undefined) {\\n        settings[name] = value;\\n      }\\n      else {\\n        return settings[name];\\n      }\\n    },\\n    internal: function(name, value) {\\n      if( $.isPlainObject(name) ) {\\n        $.extend(true, module, name);\\n      }\\n      else if(value !== undefined) {\\n        module[name] = value;\\n      }\\n      else {\\n        return module[name];\\n      }\\n    },\\n    debug: function() {\\n      if(settings.debug) {\\n        if(settings.performance) {\\n          module.performance.log(arguments);\\n        }\\n        else {\\n          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n          module.debug.apply(console, arguments);\\n        }\\n      }\\n    },\\n    verbose: function() {\\n      if(settings.verbose && settings.debug) {\\n        if(settings.performance) {\\n          module.performance.log(arguments);\\n        }\\n        else {\\n          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n          module.verbose.apply(console, arguments);\\n        }\\n      }\\n    },\\n    error: function() {\\n      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n      module.error.apply(console, arguments);\\n    },\\n    performance: {\\n      log: function(message) {\\n        var\\n          currentTime,\\n          executionTime,\\n          previousTime\\n        ;\\n        if(settings.performance) {\\n          currentTime   = new Date().getTime();\\n          previousTime  = time || currentTime;\\n          executionTime = currentTime - previousTime;\\n          time          = currentTime;\\n          performance.push({\\n            'Element'        : element,\\n            'Name'           : message[0],\\n            'Arguments'      : [].slice.call(message, 1) || '',\\n            'Execution Time' : executionTime\\n          });\\n        }\\n        clearTimeout(module.performance.timer);\\n        module.performance.timer = setTimeout(module.performance.display, 500);\\n      },\\n      display: function() {\\n        var\\n          title = settings.name + ':',\\n          totalTime = 0\\n        ;\\n        time = false;\\n        clearTimeout(module.performance.timer);\\n        $.each(performance, function(index, data) {\\n          totalTime += data['Execution Time'];\\n        });\\n        title += ' ' + totalTime + 'ms';\\n        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n          console.groupCollapsed(title);\\n          if(console.table) {\\n            console.table(performance);\\n          }\\n          else {\\n            $.each(performance, function(index, data) {\\n              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n            });\\n          }\\n          console.groupEnd();\\n        }\\n        performance = [];\\n      }\\n    },\\n    invoke: function(query, passedArguments, context) {\\n      var\\n        object = instance,\\n        maxDepth,\\n        found,\\n        response\\n      ;\\n      passedArguments = passedArguments || queryArguments;\\n      context         = element         || context;\\n      if(typeof query == 'string' && object !== undefined) {\\n        query    = query.split(/[\\\\. ]/);\\n        maxDepth = query.length - 1;\\n        $.each(query, function(depth, value) {\\n          var camelCaseValue = (depth != maxDepth)\\n            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n            : query\\n          ;\\n          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n            object = object[camelCaseValue];\\n          }\\n          else if( object[camelCaseValue] !== undefined ) {\\n            found = object[camelCaseValue];\\n            return false;\\n          }\\n          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n            object = object[value];\\n          }\\n          else if( object[value] !== undefined ) {\\n            found = object[value];\\n            return false;\\n          }\\n          else {\\n            module.error(error.method, query);\\n            return false;\\n          }\\n        });\\n      }\\n      if ( $.isFunction( found ) ) {\\n        response = found.apply(context, passedArguments);\\n      }\\n      else if(found !== undefined) {\\n        response = found;\\n      }\\n      if($.isArray(returnedValue)) {\\n        returnedValue.push(response);\\n      }\\n      else if(returnedValue !== undefined) {\\n        returnedValue = [returnedValue, response];\\n      }\\n      else if(response !== undefined) {\\n        returnedValue = response;\\n      }\\n      return found;\\n    }\\n  };\\n\\n  if(methodInvoked) {\\n    if(instance === undefined) {\\n      module.initialize();\\n    }\\n    module.invoke(query);\\n  }\\n  else {\\n    if(instance !== undefined) {\\n      module.destroy();\\n    }\\n    module.initialize();\\n  }\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.site.settings = {\\n\\n  name        : 'Site',\\n  namespace   : 'site',\\n\\n  error : {\\n    console : 'Console cannot be restored, most likely it was overwritten outside of module',\\n    method : 'The method you called is not defined.'\\n  },\\n\\n  debug       : false,\\n  verbose     : false,\\n  performance : true,\\n\\n  modules: [\\n    'accordion',\\n    'api',\\n    'checkbox',\\n    'dimmer',\\n    'dropdown',\\n    'embed',\\n    'form',\\n    'modal',\\n    'nag',\\n    'popup',\\n    'rating',\\n    'shape',\\n    'sidebar',\\n    'state',\\n    'sticky',\\n    'tab',\\n    'transition',\\n    'visit',\\n    'visibility'\\n  ],\\n\\n  siteNamespace   : 'site',\\n  namespaceStub   : {\\n    cache     : {},\\n    config    : {},\\n    sections  : {},\\n    section   : {},\\n    utilities : {}\\n  }\\n\\n};\\n\\n// allows for selection of elements with data attributes\\n$.extend($.expr[ \\\":\\\" ], {\\n  data: ($.expr.createPseudo)\\n    ? $.expr.createPseudo(function(dataName) {\\n        return function(elem) {\\n          return !!$.data(elem, dataName);\\n        };\\n      })\\n    : function(elem, i, match) {\\n      // support: jQuery < 1.8\\n      return !!$.data(elem, match[ 3 ]);\\n    }\\n});\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Form Validation\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.form = function(parameters) {\\n  var\\n    $allModules      = $(this),\\n    moduleSelector   = $allModules.selector || '',\\n\\n    time             = new Date().getTime(),\\n    performance      = [],\\n\\n    query            = arguments[0],\\n    legacyParameters = arguments[1],\\n    methodInvoked    = (typeof query == 'string'),\\n    queryArguments   = [].slice.call(arguments, 1),\\n    returnedValue\\n  ;\\n  $allModules\\n    .each(function() {\\n      var\\n        $module     = $(this),\\n        element     = this,\\n\\n        formErrors  = [],\\n        keyHeldDown = false,\\n\\n        // set at run-time\\n        $field,\\n        $group,\\n        $message,\\n        $prompt,\\n        $submit,\\n        $clear,\\n        $reset,\\n\\n        settings,\\n        validation,\\n\\n        metadata,\\n        selector,\\n        className,\\n        error,\\n\\n        namespace,\\n        moduleNamespace,\\n        eventNamespace,\\n\\n        instance,\\n        module\\n      ;\\n\\n      module      = {\\n\\n        initialize: function() {\\n\\n          // settings grabbed at run time\\n          module.get.settings();\\n          if(methodInvoked) {\\n            if(instance === undefined) {\\n              module.instantiate();\\n            }\\n            module.invoke(query);\\n          }\\n          else {\\n            if(instance !== undefined) {\\n              instance.invoke('destroy');\\n            }\\n            module.verbose('Initializing form validation', $module, settings);\\n            module.bindEvents();\\n            module.set.defaults();\\n            module.instantiate();\\n          }\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module', instance);\\n          module.removeEvents();\\n          $module\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          module.verbose('Refreshing selector cache');\\n          $field      = $module.find(selector.field);\\n          $group      = $module.find(selector.group);\\n          $message    = $module.find(selector.message);\\n          $prompt     = $module.find(selector.prompt);\\n\\n          $submit     = $module.find(selector.submit);\\n          $clear      = $module.find(selector.clear);\\n          $reset      = $module.find(selector.reset);\\n        },\\n\\n        submit: function() {\\n          module.verbose('Submitting form', $module);\\n          $module\\n            .submit()\\n          ;\\n        },\\n\\n        attachEvents: function(selector, action) {\\n          action = action || 'submit';\\n          $(selector)\\n            .on('click' + eventNamespace, function(event) {\\n              module[action]();\\n              event.preventDefault();\\n            })\\n          ;\\n        },\\n\\n        bindEvents: function() {\\n          module.verbose('Attaching form events');\\n          $module\\n            .on('submit' + eventNamespace, module.validate.form)\\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\\n            .on('click'  + eventNamespace, selector.submit, module.submit)\\n            .on('click'  + eventNamespace, selector.reset, module.reset)\\n            .on('click'  + eventNamespace, selector.clear, module.clear)\\n          ;\\n          if(settings.keyboardShortcuts) {\\n            $module\\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\\n            ;\\n          }\\n          $field\\n            .each(function() {\\n              var\\n                $input     = $(this),\\n                type       = $input.prop('type'),\\n                inputEvent = module.get.changeEvent(type, $input)\\n              ;\\n              $(this)\\n                .on(inputEvent + eventNamespace, module.event.field.change)\\n              ;\\n            })\\n          ;\\n        },\\n\\n        clear: function() {\\n          $field\\n            .each(function () {\\n              var\\n                $field       = $(this),\\n                $element     = $field.parent(),\\n                $fieldGroup  = $field.closest($group),\\n                $prompt      = $fieldGroup.find(selector.prompt),\\n                defaultValue = $field.data(metadata.defaultValue) || '',\\n                isCheckbox   = $element.is(selector.uiCheckbox),\\n                isDropdown   = $element.is(selector.uiDropdown),\\n                isErrored    = $fieldGroup.hasClass(className.error)\\n              ;\\n              if(isErrored) {\\n                module.verbose('Resetting error on field', $fieldGroup);\\n                $fieldGroup.removeClass(className.error);\\n                $prompt.remove();\\n              }\\n              if(isDropdown) {\\n                module.verbose('Resetting dropdown value', $element, defaultValue);\\n                $element.dropdown('clear');\\n              }\\n              else if(isCheckbox) {\\n                $field.prop('checked', false);\\n              }\\n              else {\\n                module.verbose('Resetting field value', $field, defaultValue);\\n                $field.val('');\\n              }\\n            })\\n          ;\\n        },\\n\\n        reset: function() {\\n          $field\\n            .each(function () {\\n              var\\n                $field       = $(this),\\n                $element     = $field.parent(),\\n                $fieldGroup  = $field.closest($group),\\n                $prompt      = $fieldGroup.find(selector.prompt),\\n                defaultValue = $field.data(metadata.defaultValue),\\n                isCheckbox   = $element.is(selector.uiCheckbox),\\n                isDropdown   = $element.is(selector.uiDropdown),\\n                isErrored    = $fieldGroup.hasClass(className.error)\\n              ;\\n              if(defaultValue === undefined) {\\n                return;\\n              }\\n              if(isErrored) {\\n                module.verbose('Resetting error on field', $fieldGroup);\\n                $fieldGroup.removeClass(className.error);\\n                $prompt.remove();\\n              }\\n              if(isDropdown) {\\n                module.verbose('Resetting dropdown value', $element, defaultValue);\\n                $element.dropdown('restore defaults');\\n              }\\n              else if(isCheckbox) {\\n                module.verbose('Resetting checkbox value', $element, defaultValue);\\n                $field.prop('checked', defaultValue);\\n              }\\n              else {\\n                module.verbose('Resetting field value', $field, defaultValue);\\n                $field.val(defaultValue);\\n              }\\n            })\\n          ;\\n        },\\n\\n        is: {\\n          bracketedRule: function(rule) {\\n            return (rule.type && rule.type.match(settings.regExp.bracket));\\n          },\\n          empty: function($field) {\\n            if(!$field || $field.length === 0) {\\n              return true;\\n            }\\n            else if($field.is('input[type=\\\"checkbox\\\"]')) {\\n              return !$field.is(':checked');\\n            }\\n            else {\\n              return module.is.blank($field);\\n            }\\n          },\\n          blank: function($field) {\\n            return $.trim($field.val()) === '';\\n          },\\n          valid: function() {\\n            var\\n              allValid = true\\n            ;\\n            module.verbose('Checking if form is valid');\\n            $.each(validation, function(fieldName, field) {\\n              if( !( module.validate.field(field, fieldName) ) ) {\\n                allValid = false;\\n              }\\n            });\\n            return allValid;\\n          }\\n        },\\n\\n        removeEvents: function() {\\n          $module\\n            .off(eventNamespace)\\n          ;\\n          $field\\n            .off(eventNamespace)\\n          ;\\n          $submit\\n            .off(eventNamespace)\\n          ;\\n          $field\\n            .off(eventNamespace)\\n          ;\\n        },\\n\\n        event: {\\n          field: {\\n            keydown: function(event) {\\n              var\\n                $field       = $(this),\\n                key          = event.which,\\n                isInput      = $field.is(selector.input),\\n                isCheckbox   = $field.is(selector.checkbox),\\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\\n                keyCode      = {\\n                  enter  : 13,\\n                  escape : 27\\n                }\\n              ;\\n              if( key == keyCode.escape) {\\n                module.verbose('Escape key pressed blurring field');\\n                $field\\n                  .blur()\\n                ;\\n              }\\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\\n                if(!keyHeldDown) {\\n                  $field\\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\\n                  ;\\n                  module.submit();\\n                  module.debug('Enter pressed on input submitting form');\\n                }\\n                keyHeldDown = true;\\n              }\\n            },\\n            keyup: function() {\\n              keyHeldDown = false;\\n            },\\n            blur: function(event) {\\n              var\\n                $field          = $(this),\\n                $fieldGroup     = $field.closest($group),\\n                validationRules = module.get.validation($field)\\n              ;\\n              if( $fieldGroup.hasClass(className.error) ) {\\n                module.debug('Revalidating field', $field, validationRules);\\n                if(validationRules) {\\n                  module.validate.field( validationRules );\\n                }\\n              }\\n              else if(settings.on == 'blur' || settings.on == 'change') {\\n                if(validationRules) {\\n                  module.validate.field( validationRules );\\n                }\\n              }\\n            },\\n            change: function(event) {\\n              var\\n                $field      = $(this),\\n                $fieldGroup = $field.closest($group),\\n                validationRules = module.get.validation($field)\\n              ;\\n              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {\\n                clearTimeout(module.timer);\\n                module.timer = setTimeout(function() {\\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\\n                  module.validate.field( validationRules );\\n                }, settings.delay);\\n              }\\n            }\\n          }\\n\\n        },\\n\\n        get: {\\n          ancillaryValue: function(rule) {\\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\\n              return false;\\n            }\\n            return (rule.value !== undefined)\\n              ? rule.value\\n              : rule.type.match(settings.regExp.bracket)[1] + ''\\n            ;\\n          },\\n          ruleName: function(rule) {\\n            if( module.is.bracketedRule(rule) ) {\\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\\n            }\\n            return rule.type;\\n          },\\n          changeEvent: function(type, $input) {\\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\\n              return 'change';\\n            }\\n            else {\\n              return module.get.inputEvent();\\n            }\\n          },\\n          inputEvent: function() {\\n            return (document.createElement('input').oninput !== undefined)\\n              ? 'input'\\n              : (document.createElement('input').onpropertychange !== undefined)\\n                ? 'propertychange'\\n                : 'keyup'\\n            ;\\n          },\\n          prompt: function(rule, field) {\\n            var\\n              ruleName      = module.get.ruleName(rule),\\n              ancillary     = module.get.ancillaryValue(rule),\\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\\n              requiresValue = (prompt.search('{value}') !== -1),\\n              requiresName  = (prompt.search('{name}') !== -1),\\n              $label,\\n              $field,\\n              name\\n            ;\\n            if(requiresName || requiresValue) {\\n              $field = module.get.field(field.identifier);\\n            }\\n            if(requiresValue) {\\n              prompt = prompt.replace('{value}', $field.val());\\n            }\\n            if(requiresName) {\\n              $label = $field.closest(selector.group).find('label').eq(0);\\n              name = ($label.length == 1)\\n                ? $label.text()\\n                : $field.prop('placeholder') || settings.text.unspecifiedField\\n              ;\\n              prompt = prompt.replace('{name}', name);\\n            }\\n            prompt = prompt.replace('{identifier}', field.identifier);\\n            prompt = prompt.replace('{ruleValue}', ancillary);\\n            if(!rule.prompt) {\\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\\n            }\\n            return prompt;\\n          },\\n          settings: function() {\\n            if($.isPlainObject(parameters)) {\\n              var\\n                keys     = Object.keys(parameters),\\n                isLegacySettings = (keys.length > 0)\\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\\n                  : false,\\n                ruleKeys\\n              ;\\n              if(isLegacySettings) {\\n                // 1.x (ducktyped)\\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\\n                module.error(settings.error.oldSyntax, element);\\n                module.verbose('Extending settings from legacy parameters', validation, settings);\\n              }\\n              else {\\n                // 2.x\\n                if(parameters.fields) {\\n                  ruleKeys = Object.keys(parameters.fields);\\n                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {\\n                    $.each(parameters.fields, function(name, rules) {\\n                      if(typeof rules == 'string') {\\n                        rules = [rules];\\n                      }\\n                      parameters.fields[name] = {\\n                        rules: []\\n                      };\\n                      $.each(rules, function(index, rule) {\\n                        parameters.fields[name].rules.push({ type: rule });\\n                      });\\n                    });\\n                  }\\n                }\\n\\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\\n                module.verbose('Extending settings', validation, settings);\\n              }\\n            }\\n            else {\\n              settings   = $.fn.form.settings;\\n              validation = $.fn.form.settings.defaults;\\n              module.verbose('Using default form validation', validation, settings);\\n            }\\n\\n            // shorthand\\n            namespace       = settings.namespace;\\n            metadata        = settings.metadata;\\n            selector        = settings.selector;\\n            className       = settings.className;\\n            error           = settings.error;\\n            moduleNamespace = 'module-' + namespace;\\n            eventNamespace  = '.' + namespace;\\n\\n            // grab instance\\n            instance = $module.data(moduleNamespace);\\n\\n            // refresh selector cache\\n            module.refresh();\\n          },\\n          field: function(identifier) {\\n            module.verbose('Finding field with identifier', identifier);\\n            if( $field.filter('#' + identifier).length > 0 ) {\\n              return $field.filter('#' + identifier);\\n            }\\n            else if( $field.filter('[name=\\\"' + identifier +'\\\"]').length > 0 ) {\\n              return $field.filter('[name=\\\"' + identifier +'\\\"]');\\n            }\\n            else if( $field.filter('[name=\\\"' + identifier +'[]\\\"]').length > 0 ) {\\n              return $field.filter('[name=\\\"' + identifier +'[]\\\"]');\\n            }\\n            else if( $field.filter('[data-' + metadata.validate + '=\\\"'+ identifier +'\\\"]').length > 0 ) {\\n              return $field.filter('[data-' + metadata.validate + '=\\\"'+ identifier +'\\\"]');\\n            }\\n            return $('<input/>');\\n          },\\n          fields: function(fields) {\\n            var\\n              $fields = $()\\n            ;\\n            $.each(fields, function(index, name) {\\n              $fields = $fields.add( module.get.field(name) );\\n            });\\n            return $fields;\\n          },\\n          validation: function($field) {\\n            var\\n              fieldValidation,\\n              identifier\\n            ;\\n            if(!validation) {\\n              return false;\\n            }\\n            $.each(validation, function(fieldName, field) {\\n              identifier = field.identifier || fieldName;\\n              if( module.get.field(identifier)[0] == $field[0] ) {\\n                field.identifier = identifier;\\n                fieldValidation = field;\\n              }\\n            });\\n            return fieldValidation || false;\\n          },\\n          value: function (field) {\\n            var\\n              fields = [],\\n              results\\n            ;\\n            fields.push(field);\\n            results = module.get.values.call(element, fields);\\n            return results[field];\\n          },\\n          values: function (fields) {\\n            var\\n              $fields = $.isArray(fields)\\n                ? module.get.fields(fields)\\n                : $field,\\n              values = {}\\n            ;\\n            $fields.each(function(index, field) {\\n              var\\n                $field     = $(field),\\n                type       = $field.prop('type'),\\n                name       = $field.prop('name'),\\n                value      = $field.val(),\\n                isCheckbox = $field.is(selector.checkbox),\\n                isRadio    = $field.is(selector.radio),\\n                isMultiple = (name.indexOf('[]') !== -1),\\n                isChecked  = (isCheckbox)\\n                  ? $field.is(':checked')\\n                  : false\\n              ;\\n              if(name) {\\n                if(isMultiple) {\\n                  name = name.replace('[]', '');\\n                  if(!values[name]) {\\n                    values[name] = [];\\n                  }\\n                  if(isCheckbox) {\\n                    if(isChecked) {\\n                      values[name].push(value || true);\\n                    }\\n                    else {\\n                      values[name].push(false);\\n                    }\\n                  }\\n                  else {\\n                    values[name].push(value);\\n                  }\\n                }\\n                else {\\n                  if(isRadio) {\\n                    if(isChecked) {\\n                      values[name] = value;\\n                    }\\n                  }\\n                  else if(isCheckbox) {\\n                    if(isChecked) {\\n                      values[name] = value || true;\\n                    }\\n                    else {\\n                      values[name] = false;\\n                    }\\n                  }\\n                  else {\\n                    values[name] = value;\\n                  }\\n                }\\n              }\\n            });\\n            return values;\\n          }\\n        },\\n\\n        has: {\\n\\n          field: function(identifier) {\\n            module.verbose('Checking for existence of a field with identifier', identifier);\\n            if(typeof identifier !== 'string') {\\n              module.error(error.identifier, identifier);\\n            }\\n            if( $field.filter('#' + identifier).length > 0 ) {\\n              return true;\\n            }\\n            else if( $field.filter('[name=\\\"' + identifier +'\\\"]').length > 0 ) {\\n              return true;\\n            }\\n            else if( $field.filter('[data-' + metadata.validate + '=\\\"'+ identifier +'\\\"]').length > 0 ) {\\n              return true;\\n            }\\n            return false;\\n          }\\n\\n        },\\n\\n        add: {\\n          prompt: function(identifier, errors) {\\n            var\\n              $field       = module.get.field(identifier),\\n              $fieldGroup  = $field.closest($group),\\n              $prompt      = $fieldGroup.children(selector.prompt),\\n              promptExists = ($prompt.length !== 0)\\n            ;\\n            errors = (typeof errors == 'string')\\n              ? [errors]\\n              : errors\\n            ;\\n            module.verbose('Adding field error state', identifier);\\n            $fieldGroup\\n              .addClass(className.error)\\n            ;\\n            if(settings.inline) {\\n              if(!promptExists) {\\n                $prompt = settings.templates.prompt(errors);\\n                $prompt\\n                  .appendTo($fieldGroup)\\n                ;\\n              }\\n              $prompt\\n                .html(errors[0])\\n              ;\\n              if(!promptExists) {\\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\\n                  module.verbose('Displaying error with css transition', settings.transition);\\n                  $prompt.transition(settings.transition + ' in', settings.duration);\\n                }\\n                else {\\n                  module.verbose('Displaying error with fallback javascript animation');\\n                  $prompt\\n                    .fadeIn(settings.duration)\\n                  ;\\n                }\\n              }\\n              else {\\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\\n              }\\n            }\\n          },\\n          errors: function(errors) {\\n            module.debug('Adding form error messages', errors);\\n            module.set.error();\\n            $message\\n              .html( settings.templates.error(errors) )\\n            ;\\n          }\\n        },\\n\\n        remove: {\\n          prompt: function(identifier) {\\n            var\\n              $field      = module.get.field(identifier),\\n              $fieldGroup = $field.closest($group),\\n              $prompt     = $fieldGroup.children(selector.prompt)\\n            ;\\n            $fieldGroup\\n              .removeClass(className.error)\\n            ;\\n            if(settings.inline && $prompt.is(':visible')) {\\n              module.verbose('Removing prompt for field', identifier);\\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\\n                  $prompt.remove();\\n                });\\n              }\\n              else {\\n                $prompt\\n                  .fadeOut(settings.duration, function(){\\n                    $prompt.remove();\\n                  })\\n                ;\\n              }\\n            }\\n          }\\n        },\\n\\n        set: {\\n          success: function() {\\n            $module\\n              .removeClass(className.error)\\n              .addClass(className.success)\\n            ;\\n          },\\n          defaults: function () {\\n            $field\\n              .each(function () {\\n                var\\n                  $field     = $(this),\\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\\n                  value      = (isCheckbox)\\n                    ? $field.is(':checked')\\n                    : $field.val()\\n                ;\\n                $field.data(metadata.defaultValue, value);\\n              })\\n            ;\\n          },\\n          error: function() {\\n            $module\\n              .removeClass(className.success)\\n              .addClass(className.error)\\n            ;\\n          },\\n          value: function (field, value) {\\n            var\\n              fields = {}\\n            ;\\n            fields[field] = value;\\n            return module.set.values.call(element, fields);\\n          },\\n          values: function (fields) {\\n            if($.isEmptyObject(fields)) {\\n              return;\\n            }\\n            $.each(fields, function(key, value) {\\n              var\\n                $field      = module.get.field(key),\\n                $element    = $field.parent(),\\n                isMultiple  = $.isArray(value),\\n                isCheckbox  = $element.is(selector.uiCheckbox),\\n                isDropdown  = $element.is(selector.uiDropdown),\\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\\n                fieldExists = ($field.length > 0),\\n                $multipleField\\n              ;\\n              if(fieldExists) {\\n                if(isMultiple && isCheckbox) {\\n                  module.verbose('Selecting multiple', value, $field);\\n                  $element.checkbox('uncheck');\\n                  $.each(value, function(index, value) {\\n                    $multipleField = $field.filter('[value=\\\"' + value + '\\\"]');\\n                    $element       = $multipleField.parent();\\n                    if($multipleField.length > 0) {\\n                      $element.checkbox('check');\\n                    }\\n                  });\\n                }\\n                else if(isRadio) {\\n                  module.verbose('Selecting radio value', value, $field);\\n                  $field.filter('[value=\\\"' + value + '\\\"]')\\n                    .parent(selector.uiCheckbox)\\n                      .checkbox('check')\\n                  ;\\n                }\\n                else if(isCheckbox) {\\n                  module.verbose('Setting checkbox value', value, $element);\\n                  if(value === true) {\\n                    $element.checkbox('check');\\n                  }\\n                  else {\\n                    $element.checkbox('uncheck');\\n                  }\\n                }\\n                else if(isDropdown) {\\n                  module.verbose('Setting dropdown value', value, $element);\\n                  $element.dropdown('set selected', value);\\n                }\\n                else {\\n                  module.verbose('Setting field value', value, $field);\\n                  $field.val(value);\\n                }\\n              }\\n            });\\n          }\\n        },\\n\\n        validate: {\\n\\n          form: function(event, ignoreCallbacks) {\\n            var\\n              values = module.get.values(),\\n              apiRequest\\n            ;\\n\\n            // input keydown event will fire submit repeatedly by browser default\\n            if(keyHeldDown) {\\n              return false;\\n            }\\n\\n            // reset errors\\n            formErrors = [];\\n            if( module.is.valid() ) {\\n              module.debug('Form has no validation errors, submitting');\\n              module.set.success();\\n              if(ignoreCallbacks !== true) {\\n                return settings.onSuccess.call(element, event, values);\\n              }\\n            }\\n            else {\\n              module.debug('Form has errors');\\n              module.set.error();\\n              if(!settings.inline) {\\n                module.add.errors(formErrors);\\n              }\\n              // prevent ajax submit\\n              if($module.data('moduleApi') !== undefined) {\\n                event.stopImmediatePropagation();\\n              }\\n              if(ignoreCallbacks !== true) {\\n                return settings.onFailure.call(element, formErrors, values);\\n              }\\n            }\\n          },\\n\\n          // takes a validation object and returns whether field passes validation\\n          field: function(field, fieldName) {\\n            var\\n              identifier    = field.identifier || fieldName,\\n              $field        = module.get.field(identifier),\\n              $dependsField = (field.depends)\\n                ? module.get.field(field.depends)\\n                : false,\\n              fieldValid  = true,\\n              fieldErrors = []\\n            ;\\n            if(!field.identifier) {\\n              module.debug('Using field name as identifier', identifier);\\n              field.identifier = identifier;\\n            }\\n            if($field.prop('disabled')) {\\n              module.debug('Field is disabled. Skipping', identifier);\\n              fieldValid = true;\\n            }\\n            else if(field.optional && module.is.blank($field)){\\n              module.debug('Field is optional and blank. Skipping', identifier);\\n              fieldValid = true;\\n            }\\n            else if(field.depends && module.is.empty($dependsField)) {\\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\\n              fieldValid = true;\\n            }\\n            else if(field.rules !== undefined) {\\n              $.each(field.rules, function(index, rule) {\\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\\n                  module.debug('Field is invalid', identifier, rule.type);\\n                  fieldErrors.push(module.get.prompt(rule, field));\\n                  fieldValid = false;\\n                }\\n              });\\n            }\\n            if(fieldValid) {\\n              module.remove.prompt(identifier, fieldErrors);\\n              settings.onValid.call($field);\\n            }\\n            else {\\n              formErrors = formErrors.concat(fieldErrors);\\n              module.add.prompt(identifier, fieldErrors);\\n              settings.onInvalid.call($field, fieldErrors);\\n              return false;\\n            }\\n            return true;\\n          },\\n\\n          // takes validation rule and returns whether field passes rule\\n          rule: function(field, rule) {\\n            var\\n              $field       = module.get.field(field.identifier),\\n              type         = rule.type,\\n              value        = $field.val(),\\n              isValid      = true,\\n              ancillary    = module.get.ancillaryValue(rule),\\n              ruleName     = module.get.ruleName(rule),\\n              ruleFunction = settings.rules[ruleName]\\n            ;\\n            if( !$.isFunction(ruleFunction) ) {\\n              module.error(error.noRule, ruleName);\\n              return;\\n            }\\n            // cast to string avoiding encoding special values\\n            value = (value === undefined || value === '' || value === null)\\n              ? ''\\n              : $.trim(value + '')\\n            ;\\n            return ruleFunction.call($field, value, ancillary);\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            settings[name] = value;\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if($allModules.length > 1) {\\n              title += ' ' + '(' + $allModules.length + ')';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n      module.initialize();\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.form.settings = {\\n\\n  name              : 'Form',\\n  namespace         : 'form',\\n\\n  debug             : false,\\n  verbose           : false,\\n  performance       : true,\\n\\n  fields            : false,\\n\\n  keyboardShortcuts : true,\\n  on                : 'submit',\\n  inline            : false,\\n\\n  delay             : 200,\\n  revalidate        : true,\\n\\n  transition        : 'scale',\\n  duration          : 200,\\n\\n  onValid           : function() {},\\n  onInvalid         : function() {},\\n  onSuccess         : function() { return true; },\\n  onFailure         : function() { return false; },\\n\\n  metadata : {\\n    defaultValue : 'default',\\n    validate     : 'validate'\\n  },\\n\\n  regExp: {\\n    bracket : /\\\\[(.*)\\\\]/i,\\n    decimal : /^\\\\d*(\\\\.)\\\\d+/,\\n    email   : /^[a-z0-9!#$%&'*+\\\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\\n    escape  : /[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\\\^\\\\$\\\\|]/g,\\n    flags   : /^\\\\/(.*)\\\\/(.*)?/,\\n    integer : /^\\\\-?\\\\d+$/,\\n    number  : /^\\\\-?\\\\d*(\\\\.\\\\d+)?$/,\\n    url     : /(https?:\\\\/\\\\/(?:www\\\\.|(?!www))[^\\\\s\\\\.]+\\\\.[^\\\\s]{2,}|www\\\\.[^\\\\s]+\\\\.[^\\\\s]{2,})/i\\n  },\\n\\n  text: {\\n    unspecifiedRule  : 'Please enter a valid value',\\n    unspecifiedField : 'This field'\\n  },\\n\\n  prompt: {\\n    empty                : '{name} must have a value',\\n    checked              : '{name} must be checked',\\n    email                : '{name} must be a valid e-mail',\\n    url                  : '{name} must be a valid url',\\n    regExp               : '{name} is not formatted correctly',\\n    integer              : '{name} must be an integer',\\n    decimal              : '{name} must be a decimal number',\\n    number               : '{name} must be set to a number',\\n    is                   : '{name} must be \\\"{ruleValue}\\\"',\\n    isExactly            : '{name} must be exactly \\\"{ruleValue}\\\"',\\n    not                  : '{name} cannot be set to \\\"{ruleValue}\\\"',\\n    notExactly           : '{name} cannot be set to exactly \\\"{ruleValue}\\\"',\\n    contain              : '{name} cannot contain \\\"{ruleValue}\\\"',\\n    containExactly       : '{name} cannot contain exactly \\\"{ruleValue}\\\"',\\n    doesntContain        : '{name} must contain  \\\"{ruleValue}\\\"',\\n    doesntContainExactly : '{name} must contain exactly \\\"{ruleValue}\\\"',\\n    minLength            : '{name} must be at least {ruleValue} characters',\\n    length               : '{name} must be at least {ruleValue} characters',\\n    exactLength          : '{name} must be exactly {ruleValue} characters',\\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\\n    match                : '{name} must match {ruleValue} field',\\n    different            : '{name} must have a different value than {ruleValue} field',\\n    creditCard           : '{name} must be a valid credit card number',\\n    minCount             : '{name} must have at least {ruleValue} choices',\\n    exactCount           : '{name} must have exactly {ruleValue} choices',\\n    maxCount             : '{name} must have {ruleValue} or less choices'\\n  },\\n\\n  selector : {\\n    checkbox   : 'input[type=\\\"checkbox\\\"], input[type=\\\"radio\\\"]',\\n    clear      : '.clear',\\n    field      : 'input, textarea, select',\\n    group      : '.field',\\n    input      : 'input',\\n    message    : '.error.message',\\n    prompt     : '.prompt.label',\\n    radio      : 'input[type=\\\"radio\\\"]',\\n    reset      : '.reset:not([type=\\\"reset\\\"])',\\n    submit     : '.submit:not([type=\\\"submit\\\"])',\\n    uiCheckbox : '.ui.checkbox',\\n    uiDropdown : '.ui.dropdown'\\n  },\\n\\n  className : {\\n    error   : 'error',\\n    label   : 'ui prompt label',\\n    pressed : 'down',\\n    success : 'success'\\n  },\\n\\n  error: {\\n    identifier : 'You must specify a string identifier for each field',\\n    method     : 'The method you called is not defined.',\\n    noRule     : 'There is no rule matching the one you specified',\\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\\n  },\\n\\n  templates: {\\n\\n    // template that produces error message\\n    error: function(errors) {\\n      var\\n        html = '<ul class=\\\"list\\\">'\\n      ;\\n      $.each(errors, function(index, value) {\\n        html += '<li>' + value + '</li>';\\n      });\\n      html += '</ul>';\\n      return $(html);\\n    },\\n\\n    // template that produces label\\n    prompt: function(errors) {\\n      return $('<div/>')\\n        .addClass('ui basic red pointing prompt label')\\n        .html(errors[0])\\n      ;\\n    }\\n  },\\n\\n  rules: {\\n\\n    // is not empty or blank string\\n    empty: function(value) {\\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\\n    },\\n\\n    // checkbox checked\\n    checked: function() {\\n      return ($(this).filter(':checked').length > 0);\\n    },\\n\\n    // is most likely an email\\n    email: function(value){\\n      return $.fn.form.settings.regExp.email.test(value);\\n    },\\n\\n    // value is most likely url\\n    url: function(value) {\\n      return $.fn.form.settings.regExp.url.test(value);\\n    },\\n\\n    // matches specified regExp\\n    regExp: function(value, regExp) {\\n      if(regExp instanceof RegExp) {\\n        return value.match(regExp);\\n      }\\n      var\\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\\n        flags\\n      ;\\n      // regular expression specified as /baz/gi (flags)\\n      if(regExpParts) {\\n        regExp = (regExpParts.length >= 2)\\n          ? regExpParts[1]\\n          : regExp\\n        ;\\n        flags = (regExpParts.length >= 3)\\n          ? regExpParts[2]\\n          : ''\\n        ;\\n      }\\n      return value.match( new RegExp(regExp, flags) );\\n    },\\n\\n    // is valid integer or matches range\\n    integer: function(value, range) {\\n      var\\n        intRegExp = $.fn.form.settings.regExp.integer,\\n        min,\\n        max,\\n        parts\\n      ;\\n      if( !range || ['', '..'].indexOf(range) !== -1) {\\n        // do nothing\\n      }\\n      else if(range.indexOf('..') == -1) {\\n        if(intRegExp.test(range)) {\\n          min = max = range - 0;\\n        }\\n      }\\n      else {\\n        parts = range.split('..', 2);\\n        if(intRegExp.test(parts[0])) {\\n          min = parts[0] - 0;\\n        }\\n        if(intRegExp.test(parts[1])) {\\n          max = parts[1] - 0;\\n        }\\n      }\\n      return (\\n        intRegExp.test(value) &&\\n        (min === undefined || value >= min) &&\\n        (max === undefined || value <= max)\\n      );\\n    },\\n\\n    // is valid number (with decimal)\\n    decimal: function(value) {\\n      return $.fn.form.settings.regExp.decimal.test(value);\\n    },\\n\\n    // is valid number\\n    number: function(value) {\\n      return $.fn.form.settings.regExp.number.test(value);\\n    },\\n\\n    // is value (case insensitive)\\n    is: function(value, text) {\\n      text = (typeof text == 'string')\\n        ? text.toLowerCase()\\n        : text\\n      ;\\n      value = (typeof value == 'string')\\n        ? value.toLowerCase()\\n        : value\\n      ;\\n      return (value == text);\\n    },\\n\\n    // is value\\n    isExactly: function(value, text) {\\n      return (value == text);\\n    },\\n\\n    // value is not another value (case insensitive)\\n    not: function(value, notValue) {\\n      value = (typeof value == 'string')\\n        ? value.toLowerCase()\\n        : value\\n      ;\\n      notValue = (typeof notValue == 'string')\\n        ? notValue.toLowerCase()\\n        : notValue\\n      ;\\n      return (value != notValue);\\n    },\\n\\n    // value is not another value (case sensitive)\\n    notExactly: function(value, notValue) {\\n      return (value != notValue);\\n    },\\n\\n    // value contains text (insensitive)\\n    contains: function(value, text) {\\n      // escape regex characters\\n      text = text.replace($.fn.form.settings.regExp.escape, \\\"\\\\\\\\$&\\\");\\n      return (value.search( new RegExp(text, 'i') ) !== -1);\\n    },\\n\\n    // value contains text (case sensitive)\\n    containsExactly: function(value, text) {\\n      // escape regex characters\\n      text = text.replace($.fn.form.settings.regExp.escape, \\\"\\\\\\\\$&\\\");\\n      return (value.search( new RegExp(text) ) !== -1);\\n    },\\n\\n    // value contains text (insensitive)\\n    doesntContain: function(value, text) {\\n      // escape regex characters\\n      text = text.replace($.fn.form.settings.regExp.escape, \\\"\\\\\\\\$&\\\");\\n      return (value.search( new RegExp(text, 'i') ) === -1);\\n    },\\n\\n    // value contains text (case sensitive)\\n    doesntContainExactly: function(value, text) {\\n      // escape regex characters\\n      text = text.replace($.fn.form.settings.regExp.escape, \\\"\\\\\\\\$&\\\");\\n      return (value.search( new RegExp(text) ) === -1);\\n    },\\n\\n    // is at least string length\\n    minLength: function(value, requiredLength) {\\n      return (value !== undefined)\\n        ? (value.length >= requiredLength)\\n        : false\\n      ;\\n    },\\n\\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\\n    length: function(value, requiredLength) {\\n      return (value !== undefined)\\n        ? (value.length >= requiredLength)\\n        : false\\n      ;\\n    },\\n\\n    // is exactly length\\n    exactLength: function(value, requiredLength) {\\n      return (value !== undefined)\\n        ? (value.length == requiredLength)\\n        : false\\n      ;\\n    },\\n\\n    // is less than length\\n    maxLength: function(value, maxLength) {\\n      return (value !== undefined)\\n        ? (value.length <= maxLength)\\n        : false\\n      ;\\n    },\\n\\n    // matches another field\\n    match: function(value, identifier) {\\n      var\\n        $form = $(this),\\n        matchingValue\\n      ;\\n      if( $('[data-validate=\\\"'+ identifier +'\\\"]').length > 0 ) {\\n        matchingValue = $('[data-validate=\\\"'+ identifier +'\\\"]').val();\\n      }\\n      else if($('#' + identifier).length > 0) {\\n        matchingValue = $('#' + identifier).val();\\n      }\\n      else if($('[name=\\\"' + identifier +'\\\"]').length > 0) {\\n        matchingValue = $('[name=\\\"' + identifier + '\\\"]').val();\\n      }\\n      else if( $('[name=\\\"' + identifier +'[]\\\"]').length > 0 ) {\\n        matchingValue = $('[name=\\\"' + identifier +'[]\\\"]');\\n      }\\n      return (matchingValue !== undefined)\\n        ? ( value.toString() == matchingValue.toString() )\\n        : false\\n      ;\\n    },\\n\\n    // different than another field\\n    different: function(value, identifier) {\\n      // use either id or name of field\\n      var\\n        $form = $(this),\\n        matchingValue\\n      ;\\n      if( $('[data-validate=\\\"'+ identifier +'\\\"]').length > 0 ) {\\n        matchingValue = $('[data-validate=\\\"'+ identifier +'\\\"]').val();\\n      }\\n      else if($('#' + identifier).length > 0) {\\n        matchingValue = $('#' + identifier).val();\\n      }\\n      else if($('[name=\\\"' + identifier +'\\\"]').length > 0) {\\n        matchingValue = $('[name=\\\"' + identifier + '\\\"]').val();\\n      }\\n      else if( $('[name=\\\"' + identifier +'[]\\\"]').length > 0 ) {\\n        matchingValue = $('[name=\\\"' + identifier +'[]\\\"]');\\n      }\\n      return (matchingValue !== undefined)\\n        ? ( value.toString() !== matchingValue.toString() )\\n        : false\\n      ;\\n    },\\n\\n    creditCard: function(cardNumber, cardTypes) {\\n      var\\n        cards = {\\n          visa: {\\n            pattern : /^4/,\\n            length  : [16]\\n          },\\n          amex: {\\n            pattern : /^3[47]/,\\n            length  : [15]\\n          },\\n          mastercard: {\\n            pattern : /^5[1-5]/,\\n            length  : [16]\\n          },\\n          discover: {\\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\\n            length  : [16]\\n          },\\n          unionPay: {\\n            pattern : /^(62|88)/,\\n            length  : [16, 17, 18, 19]\\n          },\\n          jcb: {\\n            pattern : /^35(2[89]|[3-8][0-9])/,\\n            length  : [16]\\n          },\\n          maestro: {\\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\\n          },\\n          dinersClub: {\\n            pattern : /^(30[0-5]|^36)/,\\n            length  : [14]\\n          },\\n          laser: {\\n            pattern : /^(6304|670[69]|6771)/,\\n            length  : [16, 17, 18, 19]\\n          },\\n          visaElectron: {\\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\\n            length  : [16]\\n          }\\n        },\\n        valid         = {},\\n        validCard     = false,\\n        requiredTypes = (typeof cardTypes == 'string')\\n          ? cardTypes.split(',')\\n          : false,\\n        unionPay,\\n        validation\\n      ;\\n\\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\\n        return;\\n      }\\n\\n      // verify card types\\n      if(requiredTypes) {\\n        $.each(requiredTypes, function(index, type){\\n          // verify each card type\\n          validation = cards[type];\\n          if(validation) {\\n            valid = {\\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\\n              pattern : (cardNumber.search(validation.pattern) !== -1)\\n            };\\n            if(valid.length && valid.pattern) {\\n              validCard = true;\\n            }\\n          }\\n        });\\n\\n        if(!validCard) {\\n          return false;\\n        }\\n      }\\n\\n      // skip luhn for UnionPay\\n      unionPay = {\\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\\n      };\\n      if(unionPay.number && unionPay.pattern) {\\n        return true;\\n      }\\n\\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\\n      var\\n        length        = cardNumber.length,\\n        multiple      = 0,\\n        producedValue = [\\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\\n        ],\\n        sum           = 0\\n      ;\\n      while (length--) {\\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\\n        multiple ^= 1;\\n      }\\n      return (sum % 10 === 0 && sum > 0);\\n    },\\n\\n    minCount: function(value, minCount) {\\n      if(minCount == 0) {\\n        return true;\\n      }\\n      if(minCount == 1) {\\n        return (value !== '');\\n      }\\n      return (value.split(',').length >= minCount);\\n    },\\n\\n    exactCount: function(value, exactCount) {\\n      if(exactCount == 0) {\\n        return (value === '');\\n      }\\n      if(exactCount == 1) {\\n        return (value !== '' && value.search(',') === -1);\\n      }\\n      return (value.split(',').length == exactCount);\\n    },\\n\\n    maxCount: function(value, maxCount) {\\n      if(maxCount == 0) {\\n        return false;\\n      }\\n      if(maxCount == 1) {\\n        return (value.search(',') === -1);\\n      }\\n      return (value.split(',').length <= maxCount);\\n    }\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Accordion\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.accordion = function(parameters) {\\n  var\\n    $allModules     = $(this),\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n\\n    requestAnimationFrame = window.requestAnimationFrame\\n      || window.mozRequestAnimationFrame\\n      || window.webkitRequestAnimationFrame\\n      || window.msRequestAnimationFrame\\n      || function(callback) { setTimeout(callback, 0); },\\n\\n    returnedValue\\n  ;\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\\n          : $.extend({}, $.fn.accordion.settings),\\n\\n        className       = settings.className,\\n        namespace       = settings.namespace,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n        moduleSelector  = $allModules.selector || '',\\n\\n        $module  = $(this),\\n        $title   = $module.find(selector.title),\\n        $content = $module.find(selector.content),\\n\\n        element  = this,\\n        instance = $module.data(moduleNamespace),\\n        observer,\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.debug('Initializing', $module);\\n          module.bind.events();\\n          if(settings.observeChanges) {\\n            module.observeChanges();\\n          }\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.debug('Destroying previous instance', $module);\\n          $module\\n            .off(eventNamespace)\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          $title   = $module.find(selector.title);\\n          $content = $module.find(selector.content);\\n        },\\n\\n        observeChanges: function() {\\n          if('MutationObserver' in window) {\\n            observer = new MutationObserver(function(mutations) {\\n              module.debug('DOM tree modified, updating selector cache');\\n              module.refresh();\\n            });\\n            observer.observe(element, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            module.debug('Setting up mutation observer', observer);\\n          }\\n        },\\n\\n        bind: {\\n          events: function() {\\n            module.debug('Binding delegated events');\\n            $module\\n              .on(settings.on + eventNamespace, selector.trigger, module.event.click)\\n            ;\\n          }\\n        },\\n\\n        event: {\\n          click: function() {\\n            module.toggle.call(this);\\n          }\\n        },\\n\\n        toggle: function(query) {\\n          var\\n            $activeTitle = (query !== undefined)\\n              ? (typeof query === 'number')\\n                ? $title.eq(query)\\n                : $(query).closest(selector.title)\\n              : $(this).closest(selector.title),\\n            $activeContent = $activeTitle.next($content),\\n            isAnimating = $activeContent.hasClass(className.animating),\\n            isActive    = $activeContent.hasClass(className.active),\\n            isOpen      = (isActive && !isAnimating),\\n            isOpening   = (!isActive && isAnimating)\\n          ;\\n          module.debug('Toggling visibility of content', $activeTitle);\\n          if(isOpen || isOpening) {\\n            if(settings.collapsible) {\\n              module.close.call($activeTitle);\\n            }\\n            else {\\n              module.debug('Cannot close accordion content collapsing is disabled');\\n            }\\n          }\\n          else {\\n            module.open.call($activeTitle);\\n          }\\n        },\\n\\n        open: function(query) {\\n          var\\n            $activeTitle = (query !== undefined)\\n              ? (typeof query === 'number')\\n                ? $title.eq(query)\\n                : $(query).closest(selector.title)\\n              : $(this).closest(selector.title),\\n            $activeContent = $activeTitle.next($content),\\n            isAnimating = $activeContent.hasClass(className.animating),\\n            isActive    = $activeContent.hasClass(className.active),\\n            isOpen      = (isActive || isAnimating)\\n          ;\\n          if(isOpen) {\\n            module.debug('Accordion already open, skipping', $activeContent);\\n            return;\\n          }\\n          module.debug('Opening accordion content', $activeTitle);\\n          settings.onOpening.call($activeContent);\\n          if(settings.exclusive) {\\n            module.closeOthers.call($activeTitle);\\n          }\\n          $activeTitle\\n            .addClass(className.active)\\n          ;\\n          $activeContent\\n            .stop(true, true)\\n            .addClass(className.animating)\\n          ;\\n          if(settings.animateChildren) {\\n            if($.fn.transition !== undefined && $module.transition('is supported')) {\\n              $activeContent\\n                .children()\\n                  .transition({\\n                    animation   : 'fade in',\\n                    queue       : false,\\n                    useFailSafe : true,\\n                    debug       : settings.debug,\\n                    verbose     : settings.verbose,\\n                    duration    : settings.duration\\n                  })\\n              ;\\n            }\\n            else {\\n              $activeContent\\n                .children()\\n                  .stop(true, true)\\n                  .animate({\\n                    opacity: 1\\n                  }, settings.duration, module.resetOpacity)\\n              ;\\n            }\\n          }\\n          $activeContent\\n            .slideDown(settings.duration, settings.easing, function() {\\n              $activeContent\\n                .removeClass(className.animating)\\n                .addClass(className.active)\\n              ;\\n              module.reset.display.call(this);\\n              settings.onOpen.call(this);\\n              settings.onChange.call(this);\\n            })\\n          ;\\n        },\\n\\n        close: function(query) {\\n          var\\n            $activeTitle = (query !== undefined)\\n              ? (typeof query === 'number')\\n                ? $title.eq(query)\\n                : $(query).closest(selector.title)\\n              : $(this).closest(selector.title),\\n            $activeContent = $activeTitle.next($content),\\n            isAnimating    = $activeContent.hasClass(className.animating),\\n            isActive       = $activeContent.hasClass(className.active),\\n            isOpening      = (!isActive && isAnimating),\\n            isClosing      = (isActive && isAnimating)\\n          ;\\n          if((isActive || isOpening) && !isClosing) {\\n            module.debug('Closing accordion content', $activeContent);\\n            settings.onClosing.call($activeContent);\\n            $activeTitle\\n              .removeClass(className.active)\\n            ;\\n            $activeContent\\n              .stop(true, true)\\n              .addClass(className.animating)\\n            ;\\n            if(settings.animateChildren) {\\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\\n                $activeContent\\n                  .children()\\n                    .transition({\\n                      animation   : 'fade out',\\n                      queue       : false,\\n                      useFailSafe : true,\\n                      debug       : settings.debug,\\n                      verbose     : settings.verbose,\\n                      duration    : settings.duration\\n                    })\\n                ;\\n              }\\n              else {\\n                $activeContent\\n                  .children()\\n                    .stop(true, true)\\n                    .animate({\\n                      opacity: 0\\n                    }, settings.duration, module.resetOpacity)\\n                ;\\n              }\\n            }\\n            $activeContent\\n              .slideUp(settings.duration, settings.easing, function() {\\n                $activeContent\\n                  .removeClass(className.animating)\\n                  .removeClass(className.active)\\n                ;\\n                module.reset.display.call(this);\\n                settings.onClose.call(this);\\n                settings.onChange.call(this);\\n              })\\n            ;\\n          }\\n        },\\n\\n        closeOthers: function(index) {\\n          var\\n            $activeTitle = (index !== undefined)\\n              ? $title.eq(index)\\n              : $(this).closest(selector.title),\\n            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\\n            $activeAccordion = $activeTitle.closest(selector.accordion),\\n            activeSelector   = selector.title + '.' + className.active + ':visible',\\n            activeContent    = selector.content + '.' + className.active + ':visible',\\n            $openTitles,\\n            $nestedTitles,\\n            $openContents\\n          ;\\n          if(settings.closeNested) {\\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\\n            $openContents = $openTitles.next($content);\\n          }\\n          else {\\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\\n            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\\n            $openTitles   = $openTitles.not($nestedTitles);\\n            $openContents = $openTitles.next($content);\\n          }\\n          if( ($openTitles.length > 0) ) {\\n            module.debug('Exclusive enabled, closing other content', $openTitles);\\n            $openTitles\\n              .removeClass(className.active)\\n            ;\\n            $openContents\\n              .removeClass(className.animating)\\n              .stop(true, true)\\n            ;\\n            if(settings.animateChildren) {\\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\\n                $openContents\\n                  .children()\\n                    .transition({\\n                      animation   : 'fade out',\\n                      useFailSafe : true,\\n                      debug       : settings.debug,\\n                      verbose     : settings.verbose,\\n                      duration    : settings.duration\\n                    })\\n                ;\\n              }\\n              else {\\n                $openContents\\n                  .children()\\n                    .stop(true, true)\\n                    .animate({\\n                      opacity: 0\\n                    }, settings.duration, module.resetOpacity)\\n                ;\\n              }\\n            }\\n            $openContents\\n              .slideUp(settings.duration , settings.easing, function() {\\n                $(this).removeClass(className.active);\\n                module.reset.display.call(this);\\n              })\\n            ;\\n          }\\n        },\\n\\n        reset: {\\n\\n          display: function() {\\n            module.verbose('Removing inline display from element', this);\\n            $(this).css('display', '');\\n            if( $(this).attr('style') === '') {\\n              $(this)\\n                .attr('style', '')\\n                .removeAttr('style')\\n              ;\\n            }\\n          },\\n\\n          opacity: function() {\\n            module.verbose('Removing inline opacity from element', this);\\n            $(this).css('opacity', '');\\n            if( $(this).attr('style') === '') {\\n              $(this)\\n                .attr('style', '')\\n                .removeAttr('style')\\n              ;\\n            }\\n          },\\n\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          module.debug('Changing internal', name, value);\\n          if(value !== undefined) {\\n            if( $.isPlainObject(name) ) {\\n              $.extend(true, module, name);\\n            }\\n            else {\\n              module[name] = value;\\n            }\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.accordion.settings = {\\n\\n  name            : 'Accordion',\\n  namespace       : 'accordion',\\n\\n  silent          : false,\\n  debug           : false,\\n  verbose         : false,\\n  performance     : true,\\n\\n  on              : 'click', // event on title that opens accordion\\n\\n  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion\\n\\n  exclusive       : true,  // whether a single accordion content panel should be open at once\\n  collapsible     : true,  // whether accordion content can be closed\\n  closeNested     : false, // whether nested content should be closed when a panel is closed\\n  animateChildren : true,  // whether children opacity should be animated\\n\\n  duration        : 350, // duration of animation\\n  easing          : 'easeOutQuad', // easing equation for animation\\n\\n\\n  onOpening       : function(){}, // callback before open animation\\n  onOpen          : function(){}, // callback after open animation\\n  onClosing       : function(){}, // callback before closing animation\\n  onClose         : function(){}, // callback after closing animation\\n  onChange        : function(){}, // callback after closing or opening animation\\n\\n  error: {\\n    method : 'The method you called is not defined'\\n  },\\n\\n  className   : {\\n    active    : 'active',\\n    animating : 'animating'\\n  },\\n\\n  selector    : {\\n    accordion : '.accordion',\\n    title     : '.title',\\n    trigger   : '.title',\\n    content   : '.content'\\n  }\\n\\n};\\n\\n// Adds easing\\n$.extend( $.easing, {\\n  easeOutQuad: function (x, t, b, c, d) {\\n    return -c *(t/=d)*(t-2) + b;\\n  }\\n});\\n\\n})( jQuery, window, document );\\n\\n\\n/*!\\n * # Semantic UI 2.2.4 - Checkbox\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.checkbox = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n    moduleSelector = $allModules.selector || '',\\n\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\\n\\n        className       = settings.className,\\n        namespace       = settings.namespace,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        $module         = $(this),\\n        $label          = $(this).children(selector.label),\\n        $input          = $(this).children(selector.input),\\n        input           = $input[0],\\n\\n        initialLoad     = false,\\n        shortcutPressed = false,\\n        instance        = $module.data(moduleNamespace),\\n\\n        observer,\\n        element         = this,\\n        module\\n      ;\\n\\n      module      = {\\n\\n        initialize: function() {\\n          module.verbose('Initializing checkbox', settings);\\n\\n          module.create.label();\\n          module.bind.events();\\n\\n          module.set.tabbable();\\n          module.hide.input();\\n\\n          module.observeChanges();\\n          module.instantiate();\\n          module.setup();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying module');\\n          module.unbind.events();\\n          module.show.input();\\n          $module.removeData(moduleNamespace);\\n        },\\n\\n        fix: {\\n          reference: function() {\\n            if( $module.is(selector.input) ) {\\n              module.debug('Behavior called on <input> adjusting invoked element');\\n              $module = $module.closest(selector.checkbox);\\n              module.refresh();\\n            }\\n          }\\n        },\\n\\n        setup: function() {\\n          module.set.initialLoad();\\n          if( module.is.indeterminate() ) {\\n            module.debug('Initial value is indeterminate');\\n            module.indeterminate();\\n          }\\n          else if( module.is.checked() ) {\\n            module.debug('Initial value is checked');\\n            module.check();\\n          }\\n          else {\\n            module.debug('Initial value is unchecked');\\n            module.uncheck();\\n          }\\n          module.remove.initialLoad();\\n        },\\n\\n        refresh: function() {\\n          $label = $module.children(selector.label);\\n          $input = $module.children(selector.input);\\n          input  = $input[0];\\n        },\\n\\n        hide: {\\n          input: function() {\\n            module.verbose('Modifying <input> z-index to be unselectable');\\n            $input.addClass(className.hidden);\\n          }\\n        },\\n        show: {\\n          input: function() {\\n            module.verbose('Modifying <input> z-index to be selectable');\\n            $input.removeClass(className.hidden);\\n          }\\n        },\\n\\n        observeChanges: function() {\\n          if('MutationObserver' in window) {\\n            observer = new MutationObserver(function(mutations) {\\n              module.debug('DOM tree modified, updating selector cache');\\n              module.refresh();\\n            });\\n            observer.observe(element, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            module.debug('Setting up mutation observer', observer);\\n          }\\n        },\\n\\n        attachEvents: function(selector, event) {\\n          var\\n            $element = $(selector)\\n          ;\\n          event = $.isFunction(module[event])\\n            ? module[event]\\n            : module.toggle\\n          ;\\n          if($element.length > 0) {\\n            module.debug('Attaching checkbox events to element', selector, event);\\n            $element\\n              .on('click' + eventNamespace, event)\\n            ;\\n          }\\n          else {\\n            module.error(error.notFound);\\n          }\\n        },\\n\\n        event: {\\n          click: function(event) {\\n            var\\n              $target = $(event.target)\\n            ;\\n            if( $target.is(selector.input) ) {\\n              module.verbose('Using default check action on initialized checkbox');\\n              return;\\n            }\\n            if( $target.is(selector.link) ) {\\n              module.debug('Clicking link inside checkbox, skipping toggle');\\n              return;\\n            }\\n            module.toggle();\\n            $input.focus();\\n            event.preventDefault();\\n          },\\n          keydown: function(event) {\\n            var\\n              key     = event.which,\\n              keyCode = {\\n                enter  : 13,\\n                space  : 32,\\n                escape : 27\\n              }\\n            ;\\n            if(key == keyCode.escape) {\\n              module.verbose('Escape key pressed blurring field');\\n              $input.blur();\\n              shortcutPressed = true;\\n            }\\n            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {\\n              module.verbose('Enter/space key pressed, toggling checkbox');\\n              module.toggle();\\n              shortcutPressed = true;\\n            }\\n            else {\\n              shortcutPressed = false;\\n            }\\n          },\\n          keyup: function(event) {\\n            if(shortcutPressed) {\\n              event.preventDefault();\\n            }\\n          }\\n        },\\n\\n        check: function() {\\n          if( !module.should.allowCheck() ) {\\n            return;\\n          }\\n          module.debug('Checking checkbox', $input);\\n          module.set.checked();\\n          if( !module.should.ignoreCallbacks() ) {\\n            settings.onChecked.call(input);\\n            settings.onChange.call(input);\\n          }\\n        },\\n\\n        uncheck: function() {\\n          if( !module.should.allowUncheck() ) {\\n            return;\\n          }\\n          module.debug('Unchecking checkbox');\\n          module.set.unchecked();\\n          if( !module.should.ignoreCallbacks() ) {\\n            settings.onUnchecked.call(input);\\n            settings.onChange.call(input);\\n          }\\n        },\\n\\n        indeterminate: function() {\\n          if( module.should.allowIndeterminate() ) {\\n            module.debug('Checkbox is already indeterminate');\\n            return;\\n          }\\n          module.debug('Making checkbox indeterminate');\\n          module.set.indeterminate();\\n          if( !module.should.ignoreCallbacks() ) {\\n            settings.onIndeterminate.call(input);\\n            settings.onChange.call(input);\\n          }\\n        },\\n\\n        determinate: function() {\\n          if( module.should.allowDeterminate() ) {\\n            module.debug('Checkbox is already determinate');\\n            return;\\n          }\\n          module.debug('Making checkbox determinate');\\n          module.set.determinate();\\n          if( !module.should.ignoreCallbacks() ) {\\n            settings.onDeterminate.call(input);\\n            settings.onChange.call(input);\\n          }\\n        },\\n\\n        enable: function() {\\n          if( module.is.enabled() ) {\\n            module.debug('Checkbox is already enabled');\\n            return;\\n          }\\n          module.debug('Enabling checkbox');\\n          module.set.enabled();\\n          settings.onEnable.call(input);\\n          // preserve legacy callbacks\\n          settings.onEnabled.call(input);\\n        },\\n\\n        disable: function() {\\n          if( module.is.disabled() ) {\\n            module.debug('Checkbox is already disabled');\\n            return;\\n          }\\n          module.debug('Disabling checkbox');\\n          module.set.disabled();\\n          settings.onDisable.call(input);\\n          // preserve legacy callbacks\\n          settings.onDisabled.call(input);\\n        },\\n\\n        get: {\\n          radios: function() {\\n            var\\n              name = module.get.name()\\n            ;\\n            return $('input[name=\\\"' + name + '\\\"]').closest(selector.checkbox);\\n          },\\n          otherRadios: function() {\\n            return module.get.radios().not($module);\\n          },\\n          name: function() {\\n            return $input.attr('name');\\n          }\\n        },\\n\\n        is: {\\n          initialLoad: function() {\\n            return initialLoad;\\n          },\\n          radio: function() {\\n            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');\\n          },\\n          indeterminate: function() {\\n            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');\\n          },\\n          checked: function() {\\n            return $input.prop('checked') !== undefined && $input.prop('checked');\\n          },\\n          disabled: function() {\\n            return $input.prop('disabled') !== undefined && $input.prop('disabled');\\n          },\\n          enabled: function() {\\n            return !module.is.disabled();\\n          },\\n          determinate: function() {\\n            return !module.is.indeterminate();\\n          },\\n          unchecked: function() {\\n            return !module.is.checked();\\n          }\\n        },\\n\\n        should: {\\n          allowCheck: function() {\\n            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {\\n              module.debug('Should not allow check, checkbox is already checked');\\n              return false;\\n            }\\n            if(settings.beforeChecked.apply(input) === false) {\\n              module.debug('Should not allow check, beforeChecked cancelled');\\n              return false;\\n            }\\n            return true;\\n          },\\n          allowUncheck: function() {\\n            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {\\n              module.debug('Should not allow uncheck, checkbox is already unchecked');\\n              return false;\\n            }\\n            if(settings.beforeUnchecked.apply(input) === false) {\\n              module.debug('Should not allow uncheck, beforeUnchecked cancelled');\\n              return false;\\n            }\\n            return true;\\n          },\\n          allowIndeterminate: function() {\\n            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {\\n              module.debug('Should not allow indeterminate, checkbox is already indeterminate');\\n              return false;\\n            }\\n            if(settings.beforeIndeterminate.apply(input) === false) {\\n              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');\\n              return false;\\n            }\\n            return true;\\n          },\\n          allowDeterminate: function() {\\n            if(module.is.determinate() && !module.should.forceCallbacks() ) {\\n              module.debug('Should not allow determinate, checkbox is already determinate');\\n              return false;\\n            }\\n            if(settings.beforeDeterminate.apply(input) === false) {\\n              module.debug('Should not allow determinate, beforeDeterminate cancelled');\\n              return false;\\n            }\\n            return true;\\n          },\\n          forceCallbacks: function() {\\n            return (module.is.initialLoad() && settings.fireOnInit);\\n          },\\n          ignoreCallbacks: function() {\\n            return (initialLoad && !settings.fireOnInit);\\n          }\\n        },\\n\\n        can: {\\n          change: function() {\\n            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );\\n          },\\n          uncheck: function() {\\n            return (typeof settings.uncheckable === 'boolean')\\n              ? settings.uncheckable\\n              : !module.is.radio()\\n            ;\\n          }\\n        },\\n\\n        set: {\\n          initialLoad: function() {\\n            initialLoad = true;\\n          },\\n          checked: function() {\\n            module.verbose('Setting class to checked');\\n            $module\\n              .removeClass(className.indeterminate)\\n              .addClass(className.checked)\\n            ;\\n            if( module.is.radio() ) {\\n              module.uncheckOthers();\\n            }\\n            if(!module.is.indeterminate() && module.is.checked()) {\\n              module.debug('Input is already checked, skipping input property change');\\n              return;\\n            }\\n            module.verbose('Setting state to checked', input);\\n            $input\\n              .prop('indeterminate', false)\\n              .prop('checked', true)\\n            ;\\n            module.trigger.change();\\n          },\\n          unchecked: function() {\\n            module.verbose('Removing checked class');\\n            $module\\n              .removeClass(className.indeterminate)\\n              .removeClass(className.checked)\\n            ;\\n            if(!module.is.indeterminate() &&  module.is.unchecked() ) {\\n              module.debug('Input is already unchecked');\\n              return;\\n            }\\n            module.debug('Setting state to unchecked');\\n            $input\\n              .prop('indeterminate', false)\\n              .prop('checked', false)\\n            ;\\n            module.trigger.change();\\n          },\\n          indeterminate: function() {\\n            module.verbose('Setting class to indeterminate');\\n            $module\\n              .addClass(className.indeterminate)\\n            ;\\n            if( module.is.indeterminate() ) {\\n              module.debug('Input is already indeterminate, skipping input property change');\\n              return;\\n            }\\n            module.debug('Setting state to indeterminate');\\n            $input\\n              .prop('indeterminate', true)\\n            ;\\n            module.trigger.change();\\n          },\\n          determinate: function() {\\n            module.verbose('Removing indeterminate class');\\n            $module\\n              .removeClass(className.indeterminate)\\n            ;\\n            if( module.is.determinate() ) {\\n              module.debug('Input is already determinate, skipping input property change');\\n              return;\\n            }\\n            module.debug('Setting state to determinate');\\n            $input\\n              .prop('indeterminate', false)\\n            ;\\n          },\\n          disabled: function() {\\n            module.verbose('Setting class to disabled');\\n            $module\\n              .addClass(className.disabled)\\n            ;\\n            if( module.is.disabled() ) {\\n              module.debug('Input is already disabled, skipping input property change');\\n              return;\\n            }\\n            module.debug('Setting state to disabled');\\n            $input\\n              .prop('disabled', 'disabled')\\n            ;\\n            module.trigger.change();\\n          },\\n          enabled: function() {\\n            module.verbose('Removing disabled class');\\n            $module.removeClass(className.disabled);\\n            if( module.is.enabled() ) {\\n              module.debug('Input is already enabled, skipping input property change');\\n              return;\\n            }\\n            module.debug('Setting state to enabled');\\n            $input\\n              .prop('disabled', false)\\n            ;\\n            module.trigger.change();\\n          },\\n          tabbable: function() {\\n            module.verbose('Adding tabindex to checkbox');\\n            if( $input.attr('tabindex') === undefined) {\\n              $input.attr('tabindex', 0);\\n            }\\n          }\\n        },\\n\\n        remove: {\\n          initialLoad: function() {\\n            initialLoad = false;\\n          }\\n        },\\n\\n        trigger: {\\n          change: function() {\\n            var\\n              events       = document.createEvent('HTMLEvents'),\\n              inputElement = $input[0]\\n            ;\\n            if(inputElement) {\\n              module.verbose('Triggering native change event');\\n              events.initEvent('change', true, false);\\n              inputElement.dispatchEvent(events);\\n            }\\n          }\\n        },\\n\\n\\n        create: {\\n          label: function() {\\n            if($input.prevAll(selector.label).length > 0) {\\n              $input.prev(selector.label).detach().insertAfter($input);\\n              module.debug('Moving existing label', $label);\\n            }\\n            else if( !module.has.label() ) {\\n              $label = $('<label>').insertAfter($input);\\n              module.debug('Creating label', $label);\\n            }\\n          }\\n        },\\n\\n        has: {\\n          label: function() {\\n            return ($label.length > 0);\\n          }\\n        },\\n\\n        bind: {\\n          events: function() {\\n            module.verbose('Attaching checkbox events');\\n            $module\\n              .on('click'   + eventNamespace, module.event.click)\\n              .on('keydown' + eventNamespace, selector.input, module.event.keydown)\\n              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)\\n            ;\\n          }\\n        },\\n\\n        unbind: {\\n          events: function() {\\n            module.debug('Removing events');\\n            $module\\n              .off(eventNamespace)\\n            ;\\n          }\\n        },\\n\\n        uncheckOthers: function() {\\n          var\\n            $radios = module.get.otherRadios()\\n          ;\\n          module.debug('Unchecking other radios', $radios);\\n          $radios.removeClass(className.checked);\\n        },\\n\\n        toggle: function() {\\n          if( !module.can.change() ) {\\n            if(!module.is.radio()) {\\n              module.debug('Checkbox is read-only or disabled, ignoring toggle');\\n            }\\n            return;\\n          }\\n          if( module.is.indeterminate() || module.is.unchecked() ) {\\n            module.debug('Currently unchecked');\\n            module.check();\\n          }\\n          else if( module.is.checked() && module.can.uncheck() ) {\\n            module.debug('Currently checked');\\n            module.uncheck();\\n          }\\n        },\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.checkbox.settings = {\\n\\n  name                : 'Checkbox',\\n  namespace           : 'checkbox',\\n\\n  silent              : false,\\n  debug               : false,\\n  verbose             : true,\\n  performance         : true,\\n\\n  // delegated event context\\n  uncheckable         : 'auto',\\n  fireOnInit          : false,\\n\\n  onChange            : function(){},\\n\\n  beforeChecked       : function(){},\\n  beforeUnchecked     : function(){},\\n  beforeDeterminate   : function(){},\\n  beforeIndeterminate : function(){},\\n\\n  onChecked           : function(){},\\n  onUnchecked         : function(){},\\n\\n  onDeterminate       : function() {},\\n  onIndeterminate     : function() {},\\n\\n  onEnable            : function(){},\\n  onDisable           : function(){},\\n\\n  // preserve misspelled callbacks (will be removed in 3.0)\\n  onEnabled           : function(){},\\n  onDisabled          : function(){},\\n\\n  className       : {\\n    checked       : 'checked',\\n    indeterminate : 'indeterminate',\\n    disabled      : 'disabled',\\n    hidden        : 'hidden',\\n    radio         : 'radio',\\n    readOnly      : 'read-only'\\n  },\\n\\n  error     : {\\n    method       : 'The method you called is not defined'\\n  },\\n\\n  selector : {\\n    checkbox : '.ui.checkbox',\\n    label    : 'label, .box',\\n    input    : 'input[type=\\\"checkbox\\\"], input[type=\\\"radio\\\"]',\\n    link     : 'a[href]'\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Dimmer\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.dimmer = function(parameters) {\\n  var\\n    $allModules     = $(this),\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\\n          : $.extend({}, $.fn.dimmer.settings),\\n\\n        selector        = settings.selector,\\n        namespace       = settings.namespace,\\n        className       = settings.className,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n        moduleSelector  = $allModules.selector || '',\\n\\n        clickEvent      = ('ontouchstart' in document.documentElement)\\n          ? 'touchstart'\\n          : 'click',\\n\\n        $module = $(this),\\n        $dimmer,\\n        $dimmable,\\n\\n        element   = this,\\n        instance  = $module.data(moduleNamespace),\\n        module\\n      ;\\n\\n      module = {\\n\\n        preinitialize: function() {\\n          if( module.is.dimmer() ) {\\n\\n            $dimmable = $module.parent();\\n            $dimmer   = $module;\\n          }\\n          else {\\n            $dimmable = $module;\\n            if( module.has.dimmer() ) {\\n              if(settings.dimmerName) {\\n                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);\\n              }\\n              else {\\n                $dimmer = $dimmable.find(selector.dimmer);\\n              }\\n            }\\n            else {\\n              $dimmer = module.create();\\n            }\\n            module.set.variation();\\n          }\\n        },\\n\\n        initialize: function() {\\n          module.debug('Initializing dimmer', settings);\\n\\n          module.bind.events();\\n          module.set.dimmable();\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, instance)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module', $dimmer);\\n          module.unbind.events();\\n          module.remove.variation();\\n          $dimmable\\n            .off(eventNamespace)\\n          ;\\n        },\\n\\n        bind: {\\n          events: function() {\\n            if(settings.on == 'hover') {\\n              $dimmable\\n                .on('mouseenter' + eventNamespace, module.show)\\n                .on('mouseleave' + eventNamespace, module.hide)\\n              ;\\n            }\\n            else if(settings.on == 'click') {\\n              $dimmable\\n                .on(clickEvent + eventNamespace, module.toggle)\\n              ;\\n            }\\n            if( module.is.page() ) {\\n              module.debug('Setting as a page dimmer', $dimmable);\\n              module.set.pageDimmer();\\n            }\\n\\n            if( module.is.closable() ) {\\n              module.verbose('Adding dimmer close event', $dimmer);\\n              $dimmable\\n                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)\\n              ;\\n            }\\n          }\\n        },\\n\\n        unbind: {\\n          events: function() {\\n            $module\\n              .removeData(moduleNamespace)\\n            ;\\n            $dimmable\\n              .off(eventNamespace)\\n            ;\\n          }\\n        },\\n\\n        event: {\\n          click: function(event) {\\n            module.verbose('Determining if event occured on dimmer', event);\\n            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {\\n              module.hide();\\n              event.stopImmediatePropagation();\\n            }\\n          }\\n        },\\n\\n        addContent: function(element) {\\n          var\\n            $content = $(element)\\n          ;\\n          module.debug('Add content to dimmer', $content);\\n          if($content.parent()[0] !== $dimmer[0]) {\\n            $content.detach().appendTo($dimmer);\\n          }\\n        },\\n\\n        create: function() {\\n          var\\n            $element = $( settings.template.dimmer() )\\n          ;\\n          if(settings.dimmerName) {\\n            module.debug('Creating named dimmer', settings.dimmerName);\\n            $element.addClass(settings.dimmerName);\\n          }\\n          $element\\n            .appendTo($dimmable)\\n          ;\\n          return $element;\\n        },\\n\\n        show: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          module.debug('Showing dimmer', $dimmer, settings);\\n          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {\\n            module.animate.show(callback);\\n            settings.onShow.call(element);\\n            settings.onChange.call(element);\\n          }\\n          else {\\n            module.debug('Dimmer is already shown or disabled');\\n          }\\n        },\\n\\n        hide: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if( module.is.dimmed() || module.is.animating() ) {\\n            module.debug('Hiding dimmer', $dimmer);\\n            module.animate.hide(callback);\\n            settings.onHide.call(element);\\n            settings.onChange.call(element);\\n          }\\n          else {\\n            module.debug('Dimmer is not visible');\\n          }\\n        },\\n\\n        toggle: function() {\\n          module.verbose('Toggling dimmer visibility', $dimmer);\\n          if( !module.is.dimmed() ) {\\n            module.show();\\n          }\\n          else {\\n            module.hide();\\n          }\\n        },\\n\\n        animate: {\\n          show: function(callback) {\\n            callback = $.isFunction(callback)\\n              ? callback\\n              : function(){}\\n            ;\\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\\n              if(settings.opacity !== 'auto') {\\n                module.set.opacity();\\n              }\\n              $dimmer\\n                .transition({\\n                  animation   : settings.transition + ' in',\\n                  queue       : false,\\n                  duration    : module.get.duration(),\\n                  useFailSafe : true,\\n                  onStart     : function() {\\n                    module.set.dimmed();\\n                  },\\n                  onComplete  : function() {\\n                    module.set.active();\\n                    callback();\\n                  }\\n                })\\n              ;\\n            }\\n            else {\\n              module.verbose('Showing dimmer animation with javascript');\\n              module.set.dimmed();\\n              if(settings.opacity == 'auto') {\\n                settings.opacity = 0.8;\\n              }\\n              $dimmer\\n                .stop()\\n                .css({\\n                  opacity : 0,\\n                  width   : '100%',\\n                  height  : '100%'\\n                })\\n                .fadeTo(module.get.duration(), settings.opacity, function() {\\n                  $dimmer.removeAttr('style');\\n                  module.set.active();\\n                  callback();\\n                })\\n              ;\\n            }\\n          },\\n          hide: function(callback) {\\n            callback = $.isFunction(callback)\\n              ? callback\\n              : function(){}\\n            ;\\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\\n              module.verbose('Hiding dimmer with css');\\n              $dimmer\\n                .transition({\\n                  animation   : settings.transition + ' out',\\n                  queue       : false,\\n                  duration    : module.get.duration(),\\n                  useFailSafe : true,\\n                  onStart     : function() {\\n                    module.remove.dimmed();\\n                  },\\n                  onComplete  : function() {\\n                    module.remove.active();\\n                    callback();\\n                  }\\n                })\\n              ;\\n            }\\n            else {\\n              module.verbose('Hiding dimmer with javascript');\\n              module.remove.dimmed();\\n              $dimmer\\n                .stop()\\n                .fadeOut(module.get.duration(), function() {\\n                  module.remove.active();\\n                  $dimmer.removeAttr('style');\\n                  callback();\\n                })\\n              ;\\n            }\\n          }\\n        },\\n\\n        get: {\\n          dimmer: function() {\\n            return $dimmer;\\n          },\\n          duration: function() {\\n            if(typeof settings.duration == 'object') {\\n              if( module.is.active() ) {\\n                return settings.duration.hide;\\n              }\\n              else {\\n                return settings.duration.show;\\n              }\\n            }\\n            return settings.duration;\\n          }\\n        },\\n\\n        has: {\\n          dimmer: function() {\\n            if(settings.dimmerName) {\\n              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);\\n            }\\n            else {\\n              return ( $module.find(selector.dimmer).length > 0 );\\n            }\\n          }\\n        },\\n\\n        is: {\\n          active: function() {\\n            return $dimmer.hasClass(className.active);\\n          },\\n          animating: function() {\\n            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );\\n          },\\n          closable: function() {\\n            if(settings.closable == 'auto') {\\n              if(settings.on == 'hover') {\\n                return false;\\n              }\\n              return true;\\n            }\\n            return settings.closable;\\n          },\\n          dimmer: function() {\\n            return $module.hasClass(className.dimmer);\\n          },\\n          dimmable: function() {\\n            return $module.hasClass(className.dimmable);\\n          },\\n          dimmed: function() {\\n            return $dimmable.hasClass(className.dimmed);\\n          },\\n          disabled: function() {\\n            return $dimmable.hasClass(className.disabled);\\n          },\\n          enabled: function() {\\n            return !module.is.disabled();\\n          },\\n          page: function () {\\n            return $dimmable.is('body');\\n          },\\n          pageDimmer: function() {\\n            return $dimmer.hasClass(className.pageDimmer);\\n          }\\n        },\\n\\n        can: {\\n          show: function() {\\n            return !$dimmer.hasClass(className.disabled);\\n          }\\n        },\\n\\n        set: {\\n          opacity: function(opacity) {\\n            var\\n              color      = $dimmer.css('background-color'),\\n              colorArray = color.split(','),\\n              isRGB      = (colorArray && colorArray.length == 3),\\n              isRGBA     = (colorArray && colorArray.length == 4)\\n            ;\\n            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;\\n            if(isRGB || isRGBA) {\\n              colorArray[3] = opacity + ')';\\n              color         = colorArray.join(',');\\n            }\\n            else {\\n              color = 'rgba(0, 0, 0, ' + opacity + ')';\\n            }\\n            module.debug('Setting opacity to', opacity);\\n            $dimmer.css('background-color', color);\\n          },\\n          active: function() {\\n            $dimmer.addClass(className.active);\\n          },\\n          dimmable: function() {\\n            $dimmable.addClass(className.dimmable);\\n          },\\n          dimmed: function() {\\n            $dimmable.addClass(className.dimmed);\\n          },\\n          pageDimmer: function() {\\n            $dimmer.addClass(className.pageDimmer);\\n          },\\n          disabled: function() {\\n            $dimmer.addClass(className.disabled);\\n          },\\n          variation: function(variation) {\\n            variation = variation || settings.variation;\\n            if(variation) {\\n              $dimmer.addClass(variation);\\n            }\\n          }\\n        },\\n\\n        remove: {\\n          active: function() {\\n            $dimmer\\n              .removeClass(className.active)\\n            ;\\n          },\\n          dimmed: function() {\\n            $dimmable.removeClass(className.dimmed);\\n          },\\n          disabled: function() {\\n            $dimmer.removeClass(className.disabled);\\n          },\\n          variation: function(variation) {\\n            variation = variation || settings.variation;\\n            if(variation) {\\n              $dimmer.removeClass(variation);\\n            }\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if($allModules.length > 1) {\\n              title += ' ' + '(' + $allModules.length + ')';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      module.preinitialize();\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.dimmer.settings = {\\n\\n  name        : 'Dimmer',\\n  namespace   : 'dimmer',\\n\\n  silent      : false,\\n  debug       : false,\\n  verbose     : false,\\n  performance : true,\\n\\n  // name to distinguish between multiple dimmers in context\\n  dimmerName  : false,\\n\\n  // whether to add a variation type\\n  variation   : false,\\n\\n  // whether to bind close events\\n  closable    : 'auto',\\n\\n  // whether to use css animations\\n  useCSS      : true,\\n\\n  // css animation to use\\n  transition  : 'fade',\\n\\n  // event to bind to\\n  on          : false,\\n\\n  // overriding opacity value\\n  opacity     : 'auto',\\n\\n  // transition durations\\n  duration    : {\\n    show : 500,\\n    hide : 500\\n  },\\n\\n  onChange    : function(){},\\n  onShow      : function(){},\\n  onHide      : function(){},\\n\\n  error   : {\\n    method   : 'The method you called is not defined.'\\n  },\\n\\n  className : {\\n    active     : 'active',\\n    animating  : 'animating',\\n    dimmable   : 'dimmable',\\n    dimmed     : 'dimmed',\\n    dimmer     : 'dimmer',\\n    disabled   : 'disabled',\\n    hide       : 'hide',\\n    pageDimmer : 'page',\\n    show       : 'show'\\n  },\\n\\n  selector: {\\n    dimmer   : '> .ui.dimmer',\\n    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\\n  },\\n\\n  template: {\\n    dimmer: function() {\\n     return $('<div />').attr('class', 'ui dimmer');\\n    }\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Dropdown\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.dropdown = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n    $document      = $(document),\\n\\n    moduleSelector = $allModules.selector || '',\\n\\n    hasTouch       = ('ontouchstart' in document.documentElement),\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function(elementIndex) {\\n      var\\n        settings          = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\\n          : $.extend({}, $.fn.dropdown.settings),\\n\\n        className       = settings.className,\\n        message         = settings.message,\\n        fields          = settings.fields,\\n        keys            = settings.keys,\\n        metadata        = settings.metadata,\\n        namespace       = settings.namespace,\\n        regExp          = settings.regExp,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n        templates       = settings.templates,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        $module         = $(this),\\n        $context        = $(settings.context),\\n        $text           = $module.find(selector.text),\\n        $search         = $module.find(selector.search),\\n        $sizer          = $module.find(selector.sizer),\\n        $input          = $module.find(selector.input),\\n        $icon           = $module.find(selector.icon),\\n\\n        $combo = ($module.prev().find(selector.text).length > 0)\\n          ? $module.prev().find(selector.text)\\n          : $module.prev(),\\n\\n        $menu           = $module.children(selector.menu),\\n        $item           = $menu.find(selector.item),\\n\\n        activated       = false,\\n        itemActivated   = false,\\n        internalChange  = false,\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        initialLoad,\\n        pageLostFocus,\\n        willRefocus,\\n        elementNamespace,\\n        id,\\n        selectObserver,\\n        menuObserver,\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.debug('Initializing dropdown', settings);\\n\\n          if( module.is.alreadySetup() ) {\\n            module.setup.reference();\\n          }\\n          else {\\n            module.setup.layout();\\n            module.refreshData();\\n\\n            module.save.defaults();\\n            module.restore.selected();\\n\\n            module.create.id();\\n            module.bind.events();\\n\\n            module.observeChanges();\\n            module.instantiate();\\n          }\\n\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of dropdown', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous dropdown', $module);\\n          module.remove.tabbable();\\n          $module\\n            .off(eventNamespace)\\n            .removeData(moduleNamespace)\\n          ;\\n          $menu\\n            .off(eventNamespace)\\n          ;\\n          $document\\n            .off(elementNamespace)\\n          ;\\n          module.disconnect.menuObserver();\\n          module.disconnect.selectObserver();\\n        },\\n\\n        observeChanges: function() {\\n          if('MutationObserver' in window) {\\n            selectObserver = new MutationObserver(module.event.select.mutation);\\n            menuObserver   = new MutationObserver(module.event.menu.mutation);\\n            module.debug('Setting up mutation observer', selectObserver, menuObserver);\\n            module.observe.select();\\n            module.observe.menu();\\n          }\\n        },\\n\\n        disconnect: {\\n          menuObserver: function() {\\n            if(menuObserver) {\\n              menuObserver.disconnect();\\n            }\\n          },\\n          selectObserver: function() {\\n            if(selectObserver) {\\n              selectObserver.disconnect();\\n            }\\n          }\\n        },\\n        observe: {\\n          select: function() {\\n            if(module.has.input()) {\\n              selectObserver.observe($input[0], {\\n                childList : true,\\n                subtree   : true\\n              });\\n            }\\n          },\\n          menu: function() {\\n            if(module.has.menu()) {\\n              menuObserver.observe($menu[0], {\\n                childList : true,\\n                subtree   : true\\n              });\\n            }\\n          }\\n        },\\n\\n        create: {\\n          id: function() {\\n            id = (Math.random().toString(16) + '000000000').substr(2, 8);\\n            elementNamespace = '.' + id;\\n            module.verbose('Creating unique id for element', id);\\n          },\\n          userChoice: function(values) {\\n            var\\n              $userChoices,\\n              $userChoice,\\n              isUserValue,\\n              html\\n            ;\\n            values = values || module.get.userValues();\\n            if(!values) {\\n              return false;\\n            }\\n            values = $.isArray(values)\\n              ? values\\n              : [values]\\n            ;\\n            $.each(values, function(index, value) {\\n              if(module.get.item(value) === false) {\\n                html         = settings.templates.addition( module.add.variables(message.addResult, value) );\\n                $userChoice  = $('<div />')\\n                  .html(html)\\n                  .attr('data-' + metadata.value, value)\\n                  .attr('data-' + metadata.text, value)\\n                  .addClass(className.addition)\\n                  .addClass(className.item)\\n                ;\\n                if(settings.hideAdditions) {\\n                  $userChoice.addClass(className.hidden);\\n                }\\n                $userChoices = ($userChoices === undefined)\\n                  ? $userChoice\\n                  : $userChoices.add($userChoice)\\n                ;\\n                module.verbose('Creating user choices for value', value, $userChoice);\\n              }\\n            });\\n            return $userChoices;\\n          },\\n          userLabels: function(value) {\\n            var\\n              userValues = module.get.userValues()\\n            ;\\n            if(userValues) {\\n              module.debug('Adding user labels', userValues);\\n              $.each(userValues, function(index, value) {\\n                module.verbose('Adding custom user value');\\n                module.add.label(value, value);\\n              });\\n            }\\n          },\\n          menu: function() {\\n            $menu = $('<div />')\\n              .addClass(className.menu)\\n              .appendTo($module)\\n            ;\\n          },\\n          sizer: function() {\\n            $sizer = $('<span />')\\n              .addClass(className.sizer)\\n              .insertAfter($search)\\n            ;\\n          }\\n        },\\n\\n        search: function(query) {\\n          query = (query !== undefined)\\n            ? query\\n            : module.get.query()\\n          ;\\n          module.verbose('Searching for query', query);\\n          if(module.has.minCharacters(query)) {\\n            module.filter(query);\\n          }\\n          else {\\n            module.hide();\\n          }\\n        },\\n\\n        select: {\\n          firstUnfiltered: function() {\\n            module.verbose('Selecting first non-filtered element');\\n            module.remove.selectedItem();\\n            $item\\n              .not(selector.unselectable)\\n              .not(selector.addition + selector.hidden)\\n                .eq(0)\\n                .addClass(className.selected)\\n            ;\\n          },\\n          nextAvailable: function($selected) {\\n            $selected = $selected.eq(0);\\n            var\\n              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),\\n              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),\\n              hasNext        = ($nextAvailable.length > 0)\\n            ;\\n            if(hasNext) {\\n              module.verbose('Moving selection to', $nextAvailable);\\n              $nextAvailable.addClass(className.selected);\\n            }\\n            else {\\n              module.verbose('Moving selection to', $prevAvailable);\\n              $prevAvailable.addClass(className.selected);\\n            }\\n          }\\n        },\\n\\n        setup: {\\n          api: function() {\\n            var\\n              apiSettings = {\\n                debug   : settings.debug,\\n                urlData : {\\n                  value : module.get.value(),\\n                  query : module.get.query()\\n                },\\n                on    : false\\n              }\\n            ;\\n            module.verbose('First request, initializing API');\\n            $module\\n              .api(apiSettings)\\n            ;\\n          },\\n          layout: function() {\\n            if( $module.is('select') ) {\\n              module.setup.select();\\n              module.setup.returnedObject();\\n            }\\n            if( !module.has.menu() ) {\\n              module.create.menu();\\n            }\\n            if( module.is.search() && !module.has.search() ) {\\n              module.verbose('Adding search input');\\n              $search = $('<input />')\\n                .addClass(className.search)\\n                .prop('autocomplete', 'off')\\n                .insertBefore($text)\\n              ;\\n            }\\n            if( module.is.multiple() && module.is.searchSelection() && !module.has.sizer()) {\\n              module.create.sizer();\\n            }\\n            if(settings.allowTab) {\\n              module.set.tabbable();\\n            }\\n          },\\n          select: function() {\\n            var\\n              selectValues  = module.get.selectValues()\\n            ;\\n            module.debug('Dropdown initialized on a select', selectValues);\\n            if( $module.is('select') ) {\\n              $input = $module;\\n            }\\n            // see if select is placed correctly already\\n            if($input.parent(selector.dropdown).length > 0) {\\n              module.debug('UI dropdown already exists. Creating dropdown menu only');\\n              $module = $input.closest(selector.dropdown);\\n              if( !module.has.menu() ) {\\n                module.create.menu();\\n              }\\n              $menu = $module.children(selector.menu);\\n              module.setup.menu(selectValues);\\n            }\\n            else {\\n              module.debug('Creating entire dropdown from select');\\n              $module = $('<div />')\\n                .attr('class', $input.attr('class') )\\n                .addClass(className.selection)\\n                .addClass(className.dropdown)\\n                .html( templates.dropdown(selectValues) )\\n                .insertBefore($input)\\n              ;\\n              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {\\n                module.error(error.missingMultiple);\\n                $input.prop('multiple', true);\\n              }\\n              if($input.is('[multiple]')) {\\n                module.set.multiple();\\n              }\\n              if ($input.prop('disabled')) {\\n                module.debug('Disabling dropdown');\\n                $module.addClass(className.disabled);\\n              }\\n              $input\\n                .removeAttr('class')\\n                .detach()\\n                .prependTo($module)\\n              ;\\n            }\\n            module.refresh();\\n          },\\n          menu: function(values) {\\n            $menu.html( templates.menu(values, fields));\\n            $item = $menu.find(selector.item);\\n          },\\n          reference: function() {\\n            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');\\n            // replace module reference\\n            $module = $module.parent(selector.dropdown);\\n            module.refresh();\\n            module.setup.returnedObject();\\n            // invoke method in context of current instance\\n            if(methodInvoked) {\\n              instance = module;\\n              module.invoke(query);\\n            }\\n          },\\n          returnedObject: function() {\\n            var\\n              $firstModules = $allModules.slice(0, elementIndex),\\n              $lastModules = $allModules.slice(elementIndex + 1)\\n            ;\\n            // adjust all modules to use correct reference\\n            $allModules = $firstModules.add($module).add($lastModules);\\n          }\\n        },\\n\\n        refresh: function() {\\n          module.refreshSelectors();\\n          module.refreshData();\\n        },\\n\\n        refreshItems: function() {\\n          $item = $menu.find(selector.item);\\n        },\\n\\n        refreshSelectors: function() {\\n          module.verbose('Refreshing selector cache');\\n          $text   = $module.find(selector.text);\\n          $search = $module.find(selector.search);\\n          $input  = $module.find(selector.input);\\n          $icon   = $module.find(selector.icon);\\n          $combo  = ($module.prev().find(selector.text).length > 0)\\n            ? $module.prev().find(selector.text)\\n            : $module.prev()\\n          ;\\n          $menu    = $module.children(selector.menu);\\n          $item    = $menu.find(selector.item);\\n        },\\n\\n        refreshData: function() {\\n          module.verbose('Refreshing cached metadata');\\n          $item\\n            .removeData(metadata.text)\\n            .removeData(metadata.value)\\n          ;\\n        },\\n\\n        clearData: function() {\\n          module.verbose('Clearing metadata');\\n          $item\\n            .removeData(metadata.text)\\n            .removeData(metadata.value)\\n          ;\\n          $module\\n            .removeData(metadata.defaultText)\\n            .removeData(metadata.defaultValue)\\n            .removeData(metadata.placeholderText)\\n          ;\\n        },\\n\\n        toggle: function() {\\n          module.verbose('Toggling menu visibility');\\n          if( !module.is.active() ) {\\n            module.show();\\n          }\\n          else {\\n            module.hide();\\n          }\\n        },\\n\\n        show: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if( module.can.show() && !module.is.active() ) {\\n            module.debug('Showing dropdown');\\n            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {\\n              module.remove.message();\\n            }\\n            if(module.is.allFiltered()) {\\n              return true;\\n            }\\n            if(settings.onShow.call(element) !== false) {\\n              module.animate.show(function() {\\n                if( module.can.click() ) {\\n                  module.bind.intent();\\n                }\\n                if(module.has.menuSearch()) {\\n                  module.focusSearch();\\n                }\\n                module.set.visible();\\n                callback.call(element);\\n              });\\n            }\\n          }\\n        },\\n\\n        hide: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if( module.is.active() ) {\\n            module.debug('Hiding dropdown');\\n            if(settings.onHide.call(element) !== false) {\\n              module.animate.hide(function() {\\n                module.remove.visible();\\n                callback.call(element);\\n              });\\n            }\\n          }\\n        },\\n\\n        hideOthers: function() {\\n          module.verbose('Finding other dropdowns to hide');\\n          $allModules\\n            .not($module)\\n              .has(selector.menu + '.' + className.visible)\\n                .dropdown('hide')\\n          ;\\n        },\\n\\n        hideMenu: function() {\\n          module.verbose('Hiding menu  instantaneously');\\n          module.remove.active();\\n          module.remove.visible();\\n          $menu.transition('hide');\\n        },\\n\\n        hideSubMenus: function() {\\n          var\\n            $subMenus = $menu.children(selector.item).find(selector.menu)\\n          ;\\n          module.verbose('Hiding sub menus', $subMenus);\\n          $subMenus.transition('hide');\\n        },\\n\\n        bind: {\\n          events: function() {\\n            if(hasTouch) {\\n              module.bind.touchEvents();\\n            }\\n            module.bind.keyboardEvents();\\n            module.bind.inputEvents();\\n            module.bind.mouseEvents();\\n          },\\n          touchEvents: function() {\\n            module.debug('Touch device detected binding additional touch events');\\n            if( module.is.searchSelection() ) {\\n              // do nothing special yet\\n            }\\n            else if( module.is.single() ) {\\n              $module\\n                .on('touchstart' + eventNamespace, module.event.test.toggle)\\n              ;\\n            }\\n            $menu\\n              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)\\n            ;\\n          },\\n          keyboardEvents: function() {\\n            module.verbose('Binding keyboard events');\\n            $module\\n              .on('keydown' + eventNamespace, module.event.keydown)\\n            ;\\n            if( module.has.search() ) {\\n              $module\\n                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)\\n              ;\\n            }\\n            if( module.is.multiple() ) {\\n              $document\\n                .on('keydown' + elementNamespace, module.event.document.keydown)\\n              ;\\n            }\\n          },\\n          inputEvents: function() {\\n            module.verbose('Binding input change events');\\n            $module\\n              .on('change' + eventNamespace, selector.input, module.event.change)\\n            ;\\n          },\\n          mouseEvents: function() {\\n            module.verbose('Binding mouse events');\\n            if(module.is.multiple()) {\\n              $module\\n                .on('click'   + eventNamespace, selector.label,  module.event.label.click)\\n                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)\\n              ;\\n            }\\n            if( module.is.searchSelection() ) {\\n              $module\\n                .on('mousedown' + eventNamespace, module.event.mousedown)\\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\\n                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)\\n                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)\\n                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)\\n                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)\\n                .on('click'     + eventNamespace, selector.search, module.event.search.focus)\\n                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)\\n                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)\\n              ;\\n              if(module.is.multiple()) {\\n                $module\\n                  .on('click' + eventNamespace, module.event.click)\\n                ;\\n              }\\n            }\\n            else {\\n              if(settings.on == 'click') {\\n                $module\\n                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)\\n                  .on('click' + eventNamespace, module.event.test.toggle)\\n                ;\\n              }\\n              else if(settings.on == 'hover') {\\n                $module\\n                  .on('mouseenter' + eventNamespace, module.delay.show)\\n                  .on('mouseleave' + eventNamespace, module.delay.hide)\\n                ;\\n              }\\n              else {\\n                $module\\n                  .on(settings.on + eventNamespace, module.toggle)\\n                ;\\n              }\\n              $module\\n                .on('mousedown' + eventNamespace, module.event.mousedown)\\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\\n                .on('focus'     + eventNamespace, module.event.focus)\\n                .on('blur'      + eventNamespace, module.event.blur)\\n              ;\\n            }\\n            $menu\\n              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)\\n              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)\\n              .on('click'      + eventNamespace, selector.item, module.event.item.click)\\n            ;\\n          },\\n          intent: function() {\\n            module.verbose('Binding hide intent event to document');\\n            if(hasTouch) {\\n              $document\\n                .on('touchstart' + elementNamespace, module.event.test.touch)\\n                .on('touchmove'  + elementNamespace, module.event.test.touch)\\n              ;\\n            }\\n            $document\\n              .on('click' + elementNamespace, module.event.test.hide)\\n            ;\\n          }\\n        },\\n\\n        unbind: {\\n          intent: function() {\\n            module.verbose('Removing hide intent event from document');\\n            if(hasTouch) {\\n              $document\\n                .off('touchstart' + elementNamespace)\\n                .off('touchmove' + elementNamespace)\\n              ;\\n            }\\n            $document\\n              .off('click' + elementNamespace)\\n            ;\\n          }\\n        },\\n\\n        filter: function(query) {\\n          var\\n            searchTerm = (query !== undefined)\\n              ? query\\n              : module.get.query(),\\n            afterFiltered = function() {\\n              if(module.is.multiple()) {\\n                module.filterActive();\\n              }\\n              module.select.firstUnfiltered();\\n              if( module.has.allResultsFiltered() ) {\\n                if( settings.onNoResults.call(element, searchTerm) ) {\\n                  if(settings.allowAdditions) {\\n                    if(settings.hideAdditions) {\\n                      module.verbose('User addition with no menu, setting empty style');\\n                      module.set.empty();\\n                      module.hideMenu();\\n                    }\\n                  }\\n                  else {\\n                    module.verbose('All items filtered, showing message', searchTerm);\\n                    module.add.message(message.noResults);\\n                  }\\n                }\\n                else {\\n                  module.verbose('All items filtered, hiding dropdown', searchTerm);\\n                  module.hideMenu();\\n                }\\n              }\\n              else {\\n                module.remove.empty();\\n                module.remove.message();\\n              }\\n              if(settings.allowAdditions) {\\n                module.add.userSuggestion(query);\\n              }\\n              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {\\n                module.show();\\n              }\\n            }\\n          ;\\n          if(settings.useLabels && module.has.maxSelections()) {\\n            return;\\n          }\\n          if(settings.apiSettings) {\\n            if( module.can.useAPI() ) {\\n              module.queryRemote(searchTerm, function() {\\n                afterFiltered();\\n              });\\n            }\\n            else {\\n              module.error(error.noAPI);\\n            }\\n          }\\n          else {\\n            module.filterItems(searchTerm);\\n            afterFiltered();\\n          }\\n        },\\n\\n        queryRemote: function(query, callback) {\\n          var\\n            apiSettings = {\\n              errorDuration : false,\\n              cache         : 'local',\\n              throttle      : settings.throttle,\\n              urlData       : {\\n                query: query\\n              },\\n              onError: function() {\\n                module.add.message(message.serverError);\\n                callback();\\n              },\\n              onFailure: function() {\\n                module.add.message(message.serverError);\\n                callback();\\n              },\\n              onSuccess : function(response) {\\n                module.remove.message();\\n                module.setup.menu({\\n                  values: response[fields.remoteValues]\\n                });\\n                callback();\\n              }\\n            }\\n          ;\\n          if( !$module.api('get request') ) {\\n            module.setup.api();\\n          }\\n          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);\\n          $module\\n            .api('setting', apiSettings)\\n            .api('query')\\n          ;\\n        },\\n\\n        filterItems: function(query) {\\n          var\\n            searchTerm = (query !== undefined)\\n              ? query\\n              : module.get.query(),\\n            results          =  null,\\n            escapedTerm      = module.escape.regExp(searchTerm),\\n            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')\\n          ;\\n          // avoid loop if we're matching nothing\\n          if( module.has.query() ) {\\n            results = [];\\n\\n            module.verbose('Searching for matching values', searchTerm);\\n            $item\\n              .each(function(){\\n                var\\n                  $choice = $(this),\\n                  text,\\n                  value\\n                ;\\n                if(settings.match == 'both' || settings.match == 'text') {\\n                  text = String(module.get.choiceText($choice, false));\\n                  if(text.search(beginsWithRegExp) !== -1) {\\n                    results.push(this);\\n                    return true;\\n                  }\\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, text)) {\\n                    results.push(this);\\n                    return true;\\n                  }\\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, text)) {\\n                    results.push(this);\\n                    return true;\\n                  }\\n                }\\n                if(settings.match == 'both' || settings.match == 'value') {\\n                  value = String(module.get.choiceValue($choice, text));\\n\\n                  if(value.search(beginsWithRegExp) !== -1) {\\n                    results.push(this);\\n                    return true;\\n                  }\\n                  else if(settings.fullTextSearch && module.fuzzySearch(searchTerm, value)) {\\n                    results.push(this);\\n                    return true;\\n                  }\\n                }\\n              })\\n            ;\\n          }\\n          module.debug('Showing only matched items', searchTerm);\\n          module.remove.filteredItem();\\n          if(results) {\\n            $item\\n              .not(results)\\n              .addClass(className.filtered)\\n            ;\\n          }\\n        },\\n\\n        fuzzySearch: function(query, term) {\\n          var\\n            termLength  = term.length,\\n            queryLength = query.length\\n          ;\\n          query = query.toLowerCase();\\n          term  = term.toLowerCase();\\n          if(queryLength > termLength) {\\n            return false;\\n          }\\n          if(queryLength === termLength) {\\n            return (query === term);\\n          }\\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\\n            var\\n              queryCharacter = query.charCodeAt(characterIndex)\\n            ;\\n            while(nextCharacterIndex < termLength) {\\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\\n                continue search;\\n              }\\n            }\\n            return false;\\n          }\\n          return true;\\n        },\\n        exactSearch: function (query, term) {\\n          query = query.toLowerCase();\\n          term  = term.toLowerCase();\\n          if(term.indexOf(query) > -1) {\\n             return true;\\n          }\\n          return false;\\n        },\\n        filterActive: function() {\\n          if(settings.useLabels) {\\n            $item.filter('.' + className.active)\\n              .addClass(className.filtered)\\n            ;\\n          }\\n        },\\n\\n        focusSearch: function(skipHandler) {\\n          if( module.has.search() && !module.is.focusedOnSearch() ) {\\n            if(skipHandler) {\\n              $module.off('focus' + eventNamespace, selector.search);\\n              $search.focus();\\n              $module.on('focus'  + eventNamespace, selector.search, module.event.search.focus);\\n            }\\n            else {\\n              $search.focus();\\n            }\\n          }\\n        },\\n\\n        forceSelection: function() {\\n          var\\n            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),\\n            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),\\n            $selectedItem      = ($currentlySelected.length > 0)\\n              ? $currentlySelected\\n              : $activeItem,\\n            hasSelected = ($selectedItem.length > 0)\\n          ;\\n          if(hasSelected) {\\n            module.debug('Forcing partial selection to selected item', $selectedItem);\\n            module.event.item.click.call($selectedItem, {}, true);\\n            return;\\n          }\\n          else {\\n            if(settings.allowAdditions) {\\n              module.set.selected(module.get.query());\\n              module.remove.searchTerm();\\n            }\\n            else {\\n              module.remove.searchTerm();\\n            }\\n          }\\n        },\\n\\n        event: {\\n          change: function() {\\n            if(!internalChange) {\\n              module.debug('Input changed, updating selection');\\n              module.set.selected();\\n            }\\n          },\\n          focus: function() {\\n            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {\\n              module.show();\\n            }\\n          },\\n          blur: function(event) {\\n            pageLostFocus = (document.activeElement === this);\\n            if(!activated && !pageLostFocus) {\\n              module.remove.activeLabel();\\n              module.hide();\\n            }\\n          },\\n          mousedown: function() {\\n            if(module.is.searchSelection()) {\\n              // prevent menu hiding on immediate re-focus\\n              willRefocus = true;\\n            }\\n            else {\\n              // prevents focus callback from occurring on mousedown\\n              activated = true;\\n            }\\n          },\\n          mouseup: function() {\\n            if(module.is.searchSelection()) {\\n              // prevent menu hiding on immediate re-focus\\n              willRefocus = false;\\n            }\\n            else {\\n              activated = false;\\n            }\\n          },\\n          click: function(event) {\\n            var\\n              $target = $(event.target)\\n            ;\\n            // focus search\\n            if($target.is($module)) {\\n              if(!module.is.focusedOnSearch()) {\\n                module.focusSearch();\\n              }\\n              else {\\n                module.show();\\n              }\\n            }\\n          },\\n          search: {\\n            focus: function() {\\n              activated = true;\\n              if(module.is.multiple()) {\\n                module.remove.activeLabel();\\n              }\\n              if(settings.showOnFocus) {\\n                module.search();\\n              }\\n            },\\n            blur: function(event) {\\n              pageLostFocus = (document.activeElement === this);\\n              if(!willRefocus) {\\n                if(!itemActivated && !pageLostFocus) {\\n                  if(settings.forceSelection) {\\n                    module.forceSelection();\\n                  }\\n                  module.hide();\\n                }\\n              }\\n              willRefocus = false;\\n            }\\n          },\\n          icon: {\\n            click: function(event) {\\n              module.toggle();\\n            }\\n          },\\n          text: {\\n            focus: function(event) {\\n              activated = true;\\n              module.focusSearch();\\n            }\\n          },\\n          input: function(event) {\\n            if(module.is.multiple() || module.is.searchSelection()) {\\n              module.set.filtered();\\n            }\\n            clearTimeout(module.timer);\\n            module.timer = setTimeout(module.search, settings.delay.search);\\n          },\\n          label: {\\n            click: function(event) {\\n              var\\n                $label        = $(this),\\n                $labels       = $module.find(selector.label),\\n                $activeLabels = $labels.filter('.' + className.active),\\n                $nextActive   = $label.nextAll('.' + className.active),\\n                $prevActive   = $label.prevAll('.' + className.active),\\n                $range = ($nextActive.length > 0)\\n                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)\\n                  : $label.prevUntil($prevActive).add($activeLabels).add($label)\\n              ;\\n              if(event.shiftKey) {\\n                $activeLabels.removeClass(className.active);\\n                $range.addClass(className.active);\\n              }\\n              else if(event.ctrlKey) {\\n                $label.toggleClass(className.active);\\n              }\\n              else {\\n                $activeLabels.removeClass(className.active);\\n                $label.addClass(className.active);\\n              }\\n              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));\\n            }\\n          },\\n          remove: {\\n            click: function() {\\n              var\\n                $label = $(this).parent()\\n              ;\\n              if( $label.hasClass(className.active) ) {\\n                // remove all selected labels\\n                module.remove.activeLabels();\\n              }\\n              else {\\n                // remove this label only\\n                module.remove.activeLabels( $label );\\n              }\\n            }\\n          },\\n          test: {\\n            toggle: function(event) {\\n              var\\n                toggleBehavior = (module.is.multiple())\\n                  ? module.show\\n                  : module.toggle\\n              ;\\n              if(module.is.bubbledLabelClick(event) || module.is.bubbledIconClick(event)) {\\n                return;\\n              }\\n              if( module.determine.eventOnElement(event, toggleBehavior) ) {\\n                event.preventDefault();\\n              }\\n            },\\n            touch: function(event) {\\n              module.determine.eventOnElement(event, function() {\\n                if(event.type == 'touchstart') {\\n                  module.timer = setTimeout(function() {\\n                    module.hide();\\n                  }, settings.delay.touch);\\n                }\\n                else if(event.type == 'touchmove') {\\n                  clearTimeout(module.timer);\\n                }\\n              });\\n              event.stopPropagation();\\n            },\\n            hide: function(event) {\\n              module.determine.eventInModule(event, module.hide);\\n            }\\n          },\\n          select: {\\n            mutation: function(mutations) {\\n              module.debug('<select> modified, recreating menu');\\n              module.setup.select();\\n            }\\n          },\\n          menu: {\\n            mutation: function(mutations) {\\n              var\\n                mutation   = mutations[0],\\n                $addedNode = mutation.addedNodes\\n                  ? $(mutation.addedNodes[0])\\n                  : $(false),\\n                $removedNode = mutation.removedNodes\\n                  ? $(mutation.removedNodes[0])\\n                  : $(false),\\n                $changedNodes  = $addedNode.add($removedNode),\\n                isUserAddition = $changedNodes.is(selector.addition) || $changedNodes.closest(selector.addition).length > 0,\\n                isMessage      = $changedNodes.is(selector.message)  || $changedNodes.closest(selector.message).length > 0\\n              ;\\n              if(isUserAddition || isMessage) {\\n                module.debug('Updating item selector cache');\\n                module.refreshItems();\\n              }\\n              else {\\n                module.debug('Menu modified, updating selector cache');\\n                module.refresh();\\n              }\\n            },\\n            mousedown: function() {\\n              itemActivated = true;\\n            },\\n            mouseup: function() {\\n              itemActivated = false;\\n            }\\n          },\\n          item: {\\n            mouseenter: function(event) {\\n              var\\n                $target        = $(event.target),\\n                $item          = $(this),\\n                $subMenu       = $item.children(selector.menu),\\n                $otherMenus    = $item.siblings(selector.item).children(selector.menu),\\n                hasSubMenu     = ($subMenu.length > 0),\\n                isBubbledEvent = ($subMenu.find($target).length > 0)\\n              ;\\n              if( !isBubbledEvent && hasSubMenu ) {\\n                clearTimeout(module.itemTimer);\\n                module.itemTimer = setTimeout(function() {\\n                  module.verbose('Showing sub-menu', $subMenu);\\n                  $.each($otherMenus, function() {\\n                    module.animate.hide(false, $(this));\\n                  });\\n                  module.animate.show(false, $subMenu);\\n                }, settings.delay.show);\\n                event.preventDefault();\\n              }\\n            },\\n            mouseleave: function(event) {\\n              var\\n                $subMenu = $(this).children(selector.menu)\\n              ;\\n              if($subMenu.length > 0) {\\n                clearTimeout(module.itemTimer);\\n                module.itemTimer = setTimeout(function() {\\n                  module.verbose('Hiding sub-menu', $subMenu);\\n                  module.animate.hide(false, $subMenu);\\n                }, settings.delay.hide);\\n              }\\n            },\\n            click: function (event, skipRefocus) {\\n              var\\n                $choice        = $(this),\\n                $target        = (event)\\n                  ? $(event.target)\\n                  : $(''),\\n                $subMenu       = $choice.find(selector.menu),\\n                text           = module.get.choiceText($choice),\\n                value          = module.get.choiceValue($choice, text),\\n                hasSubMenu     = ($subMenu.length > 0),\\n                isBubbledEvent = ($subMenu.find($target).length > 0)\\n              ;\\n              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {\\n                if(module.is.searchSelection()) {\\n                  if(settings.allowAdditions) {\\n                    module.remove.userAddition();\\n                  }\\n                  module.remove.searchTerm();\\n                  if(!module.is.focusedOnSearch() && !(skipRefocus == true)) {\\n                    module.focusSearch(true);\\n                  }\\n                }\\n                if(!settings.useLabels) {\\n                  module.remove.filteredItem();\\n                  module.set.scrollPosition($choice);\\n                }\\n                module.determine.selectAction.call(this, text, value);\\n              }\\n            }\\n          },\\n\\n          document: {\\n            // label selection should occur even when element has no focus\\n            keydown: function(event) {\\n              var\\n                pressedKey    = event.which,\\n                isShortcutKey = module.is.inObject(pressedKey, keys)\\n              ;\\n              if(isShortcutKey) {\\n                var\\n                  $label            = $module.find(selector.label),\\n                  $activeLabel      = $label.filter('.' + className.active),\\n                  activeValue       = $activeLabel.data(metadata.value),\\n                  labelIndex        = $label.index($activeLabel),\\n                  labelCount        = $label.length,\\n                  hasActiveLabel    = ($activeLabel.length > 0),\\n                  hasMultipleActive = ($activeLabel.length > 1),\\n                  isFirstLabel      = (labelIndex === 0),\\n                  isLastLabel       = (labelIndex + 1 == labelCount),\\n                  isSearch          = module.is.searchSelection(),\\n                  isFocusedOnSearch = module.is.focusedOnSearch(),\\n                  isFocused         = module.is.focused(),\\n                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),\\n                  $nextLabel\\n                ;\\n                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {\\n                  return;\\n                }\\n\\n                if(pressedKey == keys.leftArrow) {\\n                  // activate previous label\\n                  if((isFocused || caretAtStart) && !hasActiveLabel) {\\n                    module.verbose('Selecting previous label');\\n                    $label.last().addClass(className.active);\\n                  }\\n                  else if(hasActiveLabel) {\\n                    if(!event.shiftKey) {\\n                      module.verbose('Selecting previous label');\\n                      $label.removeClass(className.active);\\n                    }\\n                    else {\\n                      module.verbose('Adding previous label to selection');\\n                    }\\n                    if(isFirstLabel && !hasMultipleActive) {\\n                      $activeLabel.addClass(className.active);\\n                    }\\n                    else {\\n                      $activeLabel.prev(selector.siblingLabel)\\n                        .addClass(className.active)\\n                        .end()\\n                      ;\\n                    }\\n                    event.preventDefault();\\n                  }\\n                }\\n                else if(pressedKey == keys.rightArrow) {\\n                  // activate first label\\n                  if(isFocused && !hasActiveLabel) {\\n                    $label.first().addClass(className.active);\\n                  }\\n                  // activate next label\\n                  if(hasActiveLabel) {\\n                    if(!event.shiftKey) {\\n                      module.verbose('Selecting next label');\\n                      $label.removeClass(className.active);\\n                    }\\n                    else {\\n                      module.verbose('Adding next label to selection');\\n                    }\\n                    if(isLastLabel) {\\n                      if(isSearch) {\\n                        if(!isFocusedOnSearch) {\\n                          module.focusSearch();\\n                        }\\n                        else {\\n                          $label.removeClass(className.active);\\n                        }\\n                      }\\n                      else if(hasMultipleActive) {\\n                        $activeLabel.next(selector.siblingLabel).addClass(className.active);\\n                      }\\n                      else {\\n                        $activeLabel.addClass(className.active);\\n                      }\\n                    }\\n                    else {\\n                      $activeLabel.next(selector.siblingLabel).addClass(className.active);\\n                    }\\n                    event.preventDefault();\\n                  }\\n                }\\n                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {\\n                  if(hasActiveLabel) {\\n                    module.verbose('Removing active labels');\\n                    if(isLastLabel) {\\n                      if(isSearch && !isFocusedOnSearch) {\\n                        module.focusSearch();\\n                      }\\n                    }\\n                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);\\n                    module.remove.activeLabels($activeLabel);\\n                    event.preventDefault();\\n                  }\\n                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {\\n                    module.verbose('Removing last label on input backspace');\\n                    $activeLabel = $label.last().addClass(className.active);\\n                    module.remove.activeLabels($activeLabel);\\n                  }\\n                }\\n                else {\\n                  $activeLabel.removeClass(className.active);\\n                }\\n              }\\n            }\\n          },\\n\\n          keydown: function(event) {\\n            var\\n              pressedKey    = event.which,\\n              isShortcutKey = module.is.inObject(pressedKey, keys)\\n            ;\\n            if(isShortcutKey) {\\n              var\\n                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),\\n                $activeItem        = $menu.children('.' + className.active).eq(0),\\n                $selectedItem      = ($currentlySelected.length > 0)\\n                  ? $currentlySelected\\n                  : $activeItem,\\n                $visibleItems = ($selectedItem.length > 0)\\n                  ? $selectedItem.siblings(':not(.' + className.filtered +')').addBack()\\n                  : $menu.children(':not(.' + className.filtered +')'),\\n                $subMenu              = $selectedItem.children(selector.menu),\\n                $parentMenu           = $selectedItem.closest(selector.menu),\\n                inVisibleMenu         = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),\\n                hasSubMenu            = ($subMenu.length> 0),\\n                hasSelectedItem       = ($selectedItem.length > 0),\\n                selectedIsSelectable  = ($selectedItem.not(selector.unselectable).length > 0),\\n                delimiterPressed      = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),\\n                isAdditionWithoutMenu = (settings.allowAdditions && settings.hideAdditions && (pressedKey == keys.enter || delimiterPressed) && selectedIsSelectable),\\n                $nextItem,\\n                isSubMenuItem,\\n                newIndex\\n              ;\\n              // allow selection with menu closed\\n              if(isAdditionWithoutMenu) {\\n                module.verbose('Selecting item from keyboard shortcut', $selectedItem);\\n                module.event.item.click.call($selectedItem, event);\\n                if(module.is.searchSelection()) {\\n                  module.remove.searchTerm();\\n                }\\n              }\\n\\n              // visible menu keyboard shortcuts\\n              if( module.is.visible() ) {\\n\\n                // enter (select or open sub-menu)\\n                if(pressedKey == keys.enter || delimiterPressed) {\\n                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {\\n                    module.verbose('Pressed enter on unselectable category, opening sub menu');\\n                    pressedKey = keys.rightArrow;\\n                  }\\n                  else if(selectedIsSelectable) {\\n                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);\\n                    module.event.item.click.call($selectedItem, event);\\n                    if(module.is.searchSelection()) {\\n                      module.remove.searchTerm();\\n                    }\\n                  }\\n                  event.preventDefault();\\n                }\\n\\n                // sub-menu actions\\n                if(hasSelectedItem) {\\n\\n                  if(pressedKey == keys.leftArrow) {\\n\\n                    isSubMenuItem = ($parentMenu[0] !== $menu[0]);\\n\\n                    if(isSubMenuItem) {\\n                      module.verbose('Left key pressed, closing sub-menu');\\n                      module.animate.hide(false, $parentMenu);\\n                      $selectedItem\\n                        .removeClass(className.selected)\\n                      ;\\n                      $parentMenu\\n                        .closest(selector.item)\\n                          .addClass(className.selected)\\n                      ;\\n                      event.preventDefault();\\n                    }\\n                  }\\n\\n                  // right arrow (show sub-menu)\\n                  if(pressedKey == keys.rightArrow) {\\n                    if(hasSubMenu) {\\n                      module.verbose('Right key pressed, opening sub-menu');\\n                      module.animate.show(false, $subMenu);\\n                      $selectedItem\\n                        .removeClass(className.selected)\\n                      ;\\n                      $subMenu\\n                        .find(selector.item).eq(0)\\n                          .addClass(className.selected)\\n                      ;\\n                      event.preventDefault();\\n                    }\\n                  }\\n                }\\n\\n                // up arrow (traverse menu up)\\n                if(pressedKey == keys.upArrow) {\\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\\n                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\\n                    : $item.eq(0)\\n                  ;\\n                  if($visibleItems.index( $nextItem ) < 0) {\\n                    module.verbose('Up key pressed but reached top of current menu');\\n                    event.preventDefault();\\n                    return;\\n                  }\\n                  else {\\n                    module.verbose('Up key pressed, changing active item');\\n                    $selectedItem\\n                      .removeClass(className.selected)\\n                    ;\\n                    $nextItem\\n                      .addClass(className.selected)\\n                    ;\\n                    module.set.scrollPosition($nextItem);\\n                    if(settings.selectOnKeydown && module.is.single()) {\\n                      module.set.selectedItem($nextItem);\\n                    }\\n                  }\\n                  event.preventDefault();\\n                }\\n\\n                // down arrow (traverse menu down)\\n                if(pressedKey == keys.downArrow) {\\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\\n                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\\n                    : $item.eq(0)\\n                  ;\\n                  if($nextItem.length === 0) {\\n                    module.verbose('Down key pressed but reached bottom of current menu');\\n                    event.preventDefault();\\n                    return;\\n                  }\\n                  else {\\n                    module.verbose('Down key pressed, changing active item');\\n                    $item\\n                      .removeClass(className.selected)\\n                    ;\\n                    $nextItem\\n                      .addClass(className.selected)\\n                    ;\\n                    module.set.scrollPosition($nextItem);\\n                    if(settings.selectOnKeydown && module.is.single()) {\\n                      module.set.selectedItem($nextItem);\\n                    }\\n                  }\\n                  event.preventDefault();\\n                }\\n\\n                // page down (show next page)\\n                if(pressedKey == keys.pageUp) {\\n                  module.scrollPage('up');\\n                  event.preventDefault();\\n                }\\n                if(pressedKey == keys.pageDown) {\\n                  module.scrollPage('down');\\n                  event.preventDefault();\\n                }\\n\\n                // escape (close menu)\\n                if(pressedKey == keys.escape) {\\n                  module.verbose('Escape key pressed, closing dropdown');\\n                  module.hide();\\n                }\\n\\n              }\\n              else {\\n                // delimiter key\\n                if(delimiterPressed) {\\n                  event.preventDefault();\\n                }\\n                // down arrow (open menu)\\n                if(pressedKey == keys.downArrow && !module.is.visible()) {\\n                  module.verbose('Down key pressed, showing dropdown');\\n                  module.select.firstUnfiltered();\\n                  module.show();\\n                  event.preventDefault();\\n                }\\n              }\\n            }\\n            else {\\n              if( !module.has.search() ) {\\n                module.set.selectedLetter( String.fromCharCode(pressedKey) );\\n              }\\n            }\\n          }\\n        },\\n\\n        trigger: {\\n          change: function() {\\n            var\\n              events       = document.createEvent('HTMLEvents'),\\n              inputElement = $input[0]\\n            ;\\n            if(inputElement) {\\n              module.verbose('Triggering native change event');\\n              events.initEvent('change', true, false);\\n              inputElement.dispatchEvent(events);\\n            }\\n          }\\n        },\\n\\n        determine: {\\n          selectAction: function(text, value) {\\n            module.verbose('Determining action', settings.action);\\n            if( $.isFunction( module.action[settings.action] ) ) {\\n              module.verbose('Triggering preset action', settings.action, text, value);\\n              module.action[ settings.action ].call(element, text, value, this);\\n            }\\n            else if( $.isFunction(settings.action) ) {\\n              module.verbose('Triggering user action', settings.action, text, value);\\n              settings.action.call(element, text, value, this);\\n            }\\n            else {\\n              module.error(error.action, settings.action);\\n            }\\n          },\\n          eventInModule: function(event, callback) {\\n            var\\n              $target    = $(event.target),\\n              inDocument = ($target.closest(document.documentElement).length > 0),\\n              inModule   = ($target.closest($module).length > 0)\\n            ;\\n            callback = $.isFunction(callback)\\n              ? callback\\n              : function(){}\\n            ;\\n            if(inDocument && !inModule) {\\n              module.verbose('Triggering event', callback);\\n              callback();\\n              return true;\\n            }\\n            else {\\n              module.verbose('Event occurred in dropdown, canceling callback');\\n              return false;\\n            }\\n          },\\n          eventOnElement: function(event, callback) {\\n            var\\n              $target      = $(event.target),\\n              $label       = $target.closest(selector.siblingLabel),\\n              inVisibleDOM = document.body.contains(event.target),\\n              notOnLabel   = ($module.find($label).length === 0),\\n              notInMenu    = ($target.closest($menu).length === 0)\\n            ;\\n            callback = $.isFunction(callback)\\n              ? callback\\n              : function(){}\\n            ;\\n            if(inVisibleDOM && notOnLabel && notInMenu) {\\n              module.verbose('Triggering event', callback);\\n              callback();\\n              return true;\\n            }\\n            else {\\n              module.verbose('Event occurred in dropdown menu, canceling callback');\\n              return false;\\n            }\\n          }\\n        },\\n\\n        action: {\\n\\n          nothing: function() {},\\n\\n          activate: function(text, value, element) {\\n            value = (value !== undefined)\\n              ? value\\n              : text\\n            ;\\n            if( module.can.activate( $(element) ) ) {\\n              module.set.selected(value, $(element));\\n              if(module.is.multiple() && !module.is.allFiltered()) {\\n                return;\\n              }\\n              else {\\n                module.hideAndClear();\\n              }\\n            }\\n          },\\n\\n          select: function(text, value, element) {\\n            value = (value !== undefined)\\n              ? value\\n              : text\\n            ;\\n            if( module.can.activate( $(element) ) ) {\\n              module.set.value(value, $(element));\\n              if(module.is.multiple() && !module.is.allFiltered()) {\\n                return;\\n              }\\n              else {\\n                module.hideAndClear();\\n              }\\n            }\\n          },\\n\\n          combo: function(text, value, element) {\\n            value = (value !== undefined)\\n              ? value\\n              : text\\n            ;\\n            module.set.selected(value, $(element));\\n            module.hideAndClear();\\n          },\\n\\n          hide: function(text, value, element) {\\n            module.set.value(value, text);\\n            module.hideAndClear();\\n          }\\n\\n        },\\n\\n        get: {\\n          id: function() {\\n            return id;\\n          },\\n          defaultText: function() {\\n            return $module.data(metadata.defaultText);\\n          },\\n          defaultValue: function() {\\n            return $module.data(metadata.defaultValue);\\n          },\\n          placeholderText: function() {\\n            return $module.data(metadata.placeholderText) || '';\\n          },\\n          text: function() {\\n            return $text.text();\\n          },\\n          query: function() {\\n            return $.trim($search.val());\\n          },\\n          searchWidth: function(value) {\\n            value = (value !== undefined)\\n              ? value\\n              : $search.val()\\n            ;\\n            $sizer.text(value);\\n            // prevent rounding issues\\n            return Math.ceil( $sizer.width() + 1);\\n          },\\n          selectionCount: function() {\\n            var\\n              values = module.get.values(),\\n              count\\n            ;\\n            count = ( module.is.multiple() )\\n              ? $.isArray(values)\\n                ? values.length\\n                : 0\\n              : (module.get.value() !== '')\\n                ? 1\\n                : 0\\n            ;\\n            return count;\\n          },\\n          transition: function($subMenu) {\\n            return (settings.transition == 'auto')\\n              ? module.is.upward($subMenu)\\n                ? 'slide up'\\n                : 'slide down'\\n              : settings.transition\\n            ;\\n          },\\n          userValues: function() {\\n            var\\n              values = module.get.values()\\n            ;\\n            if(!values) {\\n              return false;\\n            }\\n            values = $.isArray(values)\\n              ? values\\n              : [values]\\n            ;\\n            return $.grep(values, function(value) {\\n              return (module.get.item(value) === false);\\n            });\\n          },\\n          uniqueArray: function(array) {\\n            return $.grep(array, function (value, index) {\\n                return $.inArray(value, array) === index;\\n            });\\n          },\\n          caretPosition: function() {\\n            var\\n              input = $search.get(0),\\n              range,\\n              rangeLength\\n            ;\\n            if('selectionStart' in input) {\\n              return input.selectionStart;\\n            }\\n            else if (document.selection) {\\n              input.focus();\\n              range       = document.selection.createRange();\\n              rangeLength = range.text.length;\\n              range.moveStart('character', -input.value.length);\\n              return range.text.length - rangeLength;\\n            }\\n          },\\n          value: function() {\\n            var\\n              value = ($input.length > 0)\\n                ? $input.val()\\n                : $module.data(metadata.value),\\n              isEmptyMultiselect = ($.isArray(value) && value.length === 1 && value[0] === '')\\n            ;\\n            // prevents placeholder element from being selected when multiple\\n            return (value === undefined || isEmptyMultiselect)\\n              ? ''\\n              : value\\n            ;\\n          },\\n          values: function() {\\n            var\\n              value = module.get.value()\\n            ;\\n            if(value === '') {\\n              return '';\\n            }\\n            return ( !module.has.selectInput() && module.is.multiple() )\\n              ? (typeof value == 'string') // delimited string\\n                ? value.split(settings.delimiter)\\n                : ''\\n              : value\\n            ;\\n          },\\n          remoteValues: function() {\\n            var\\n              values = module.get.values(),\\n              remoteValues = false\\n            ;\\n            if(values) {\\n              if(typeof values == 'string') {\\n                values = [values];\\n              }\\n              $.each(values, function(index, value) {\\n                var\\n                  name = module.read.remoteData(value)\\n                ;\\n                module.verbose('Restoring value from session data', name, value);\\n                if(name) {\\n                  if(!remoteValues) {\\n                    remoteValues = {};\\n                  }\\n                  remoteValues[value] = name;\\n                }\\n              });\\n            }\\n            return remoteValues;\\n          },\\n          choiceText: function($choice, preserveHTML) {\\n            preserveHTML = (preserveHTML !== undefined)\\n              ? preserveHTML\\n              : settings.preserveHTML\\n            ;\\n            if($choice) {\\n              if($choice.find(selector.menu).length > 0) {\\n                module.verbose('Retrieving text of element with sub-menu');\\n                $choice = $choice.clone();\\n                $choice.find(selector.menu).remove();\\n                $choice.find(selector.menuIcon).remove();\\n              }\\n              return ($choice.data(metadata.text) !== undefined)\\n                ? $choice.data(metadata.text)\\n                : (preserveHTML)\\n                  ? $.trim($choice.html())\\n                  : $.trim($choice.text())\\n              ;\\n            }\\n          },\\n          choiceValue: function($choice, choiceText) {\\n            choiceText = choiceText || module.get.choiceText($choice);\\n            if(!$choice) {\\n              return false;\\n            }\\n            return ($choice.data(metadata.value) !== undefined)\\n              ? String( $choice.data(metadata.value) )\\n              : (typeof choiceText === 'string')\\n                ? $.trim(choiceText.toLowerCase())\\n                : String(choiceText)\\n            ;\\n          },\\n          inputEvent: function() {\\n            var\\n              input = $search[0]\\n            ;\\n            if(input) {\\n              return (input.oninput !== undefined)\\n                ? 'input'\\n                : (input.onpropertychange !== undefined)\\n                  ? 'propertychange'\\n                  : 'keyup'\\n              ;\\n            }\\n            return false;\\n          },\\n          selectValues: function() {\\n            var\\n              select = {}\\n            ;\\n            select.values = [];\\n            $module\\n              .find('option')\\n                .each(function() {\\n                  var\\n                    $option  = $(this),\\n                    name     = $option.html(),\\n                    disabled = $option.attr('disabled'),\\n                    value    = ( $option.attr('value') !== undefined )\\n                      ? $option.attr('value')\\n                      : name\\n                  ;\\n                  if(settings.placeholder === 'auto' && value === '') {\\n                    select.placeholder = name;\\n                  }\\n                  else {\\n                    select.values.push({\\n                      name     : name,\\n                      value    : value,\\n                      disabled : disabled\\n                    });\\n                  }\\n                })\\n            ;\\n            if(settings.placeholder && settings.placeholder !== 'auto') {\\n              module.debug('Setting placeholder value to', settings.placeholder);\\n              select.placeholder = settings.placeholder;\\n            }\\n            if(settings.sortSelect) {\\n              select.values.sort(function(a, b) {\\n                return (a.name > b.name)\\n                  ? 1\\n                  : -1\\n                ;\\n              });\\n              module.debug('Retrieved and sorted values from select', select);\\n            }\\n            else {\\n              module.debug('Retrieved values from select', select);\\n            }\\n            return select;\\n          },\\n          activeItem: function() {\\n            return $item.filter('.'  + className.active);\\n          },\\n          selectedItem: function() {\\n            var\\n              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)\\n            ;\\n            return ($selectedItem.length > 0)\\n              ? $selectedItem\\n              : $item.eq(0)\\n            ;\\n          },\\n          itemWithAdditions: function(value) {\\n            var\\n              $items       = module.get.item(value),\\n              $userItems   = module.create.userChoice(value),\\n              hasUserItems = ($userItems && $userItems.length > 0)\\n            ;\\n            if(hasUserItems) {\\n              $items = ($items.length > 0)\\n                ? $items.add($userItems)\\n                : $userItems\\n              ;\\n            }\\n            return $items;\\n          },\\n          item: function(value, strict) {\\n            var\\n              $selectedItem = false,\\n              shouldSearch,\\n              isMultiple\\n            ;\\n            value = (value !== undefined)\\n              ? value\\n              : ( module.get.values() !== undefined)\\n                ? module.get.values()\\n                : module.get.text()\\n            ;\\n            shouldSearch = (isMultiple)\\n              ? (value.length > 0)\\n              : (value !== undefined && value !== null)\\n            ;\\n            isMultiple = (module.is.multiple() && $.isArray(value));\\n            strict     = (value === '' || value === 0)\\n              ? true\\n              : strict || false\\n            ;\\n            if(shouldSearch) {\\n              $item\\n                .each(function() {\\n                  var\\n                    $choice       = $(this),\\n                    optionText    = module.get.choiceText($choice),\\n                    optionValue   = module.get.choiceValue($choice, optionText)\\n                  ;\\n                  // safe early exit\\n                  if(optionValue === null || optionValue === undefined) {\\n                    return;\\n                  }\\n                  if(isMultiple) {\\n                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {\\n                      $selectedItem = ($selectedItem)\\n                        ? $selectedItem.add($choice)\\n                        : $choice\\n                      ;\\n                    }\\n                  }\\n                  else if(strict) {\\n                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);\\n                    if( optionValue === value || optionText === value) {\\n                      $selectedItem = $choice;\\n                      return true;\\n                    }\\n                  }\\n                  else {\\n                    if( String(optionValue) == String(value) || optionText == value) {\\n                      module.verbose('Found select item by value', optionValue, value);\\n                      $selectedItem = $choice;\\n                      return true;\\n                    }\\n                  }\\n                })\\n              ;\\n            }\\n            return $selectedItem;\\n          }\\n        },\\n\\n        check: {\\n          maxSelections: function(selectionCount) {\\n            if(settings.maxSelections) {\\n              selectionCount = (selectionCount !== undefined)\\n                ? selectionCount\\n                : module.get.selectionCount()\\n              ;\\n              if(selectionCount >= settings.maxSelections) {\\n                module.debug('Maximum selection count reached');\\n                if(settings.useLabels) {\\n                  $item.addClass(className.filtered);\\n                  module.add.message(message.maxSelections);\\n                }\\n                return true;\\n              }\\n              else {\\n                module.verbose('No longer at maximum selection count');\\n                module.remove.message();\\n                module.remove.filteredItem();\\n                if(module.is.searchSelection()) {\\n                  module.filterItems();\\n                }\\n                return false;\\n              }\\n            }\\n            return true;\\n          }\\n        },\\n\\n        restore: {\\n          defaults: function() {\\n            module.clear();\\n            module.restore.defaultText();\\n            module.restore.defaultValue();\\n          },\\n          defaultText: function() {\\n            var\\n              defaultText     = module.get.defaultText(),\\n              placeholderText = module.get.placeholderText\\n            ;\\n            if(defaultText === placeholderText) {\\n              module.debug('Restoring default placeholder text', defaultText);\\n              module.set.placeholderText(defaultText);\\n            }\\n            else {\\n              module.debug('Restoring default text', defaultText);\\n              module.set.text(defaultText);\\n            }\\n          },\\n          placeholderText: function() {\\n            module.set.placeholderText();\\n          },\\n          defaultValue: function() {\\n            var\\n              defaultValue = module.get.defaultValue()\\n            ;\\n            if(defaultValue !== undefined) {\\n              module.debug('Restoring default value', defaultValue);\\n              if(defaultValue !== '') {\\n                module.set.value(defaultValue);\\n                module.set.selected();\\n              }\\n              else {\\n                module.remove.activeItem();\\n                module.remove.selectedItem();\\n              }\\n            }\\n          },\\n          labels: function() {\\n            if(settings.allowAdditions) {\\n              if(!settings.useLabels) {\\n                module.error(error.labels);\\n                settings.useLabels = true;\\n              }\\n              module.debug('Restoring selected values');\\n              module.create.userLabels();\\n            }\\n            module.check.maxSelections();\\n          },\\n          selected: function() {\\n            module.restore.values();\\n            if(module.is.multiple()) {\\n              module.debug('Restoring previously selected values and labels');\\n              module.restore.labels();\\n            }\\n            else {\\n              module.debug('Restoring previously selected values');\\n            }\\n          },\\n          values: function() {\\n            // prevents callbacks from occurring on initial load\\n            module.set.initialLoad();\\n            if(settings.apiSettings && settings.saveRemoteData && module.get.remoteValues()) {\\n              module.restore.remoteValues();\\n            }\\n            else {\\n              module.set.selected();\\n            }\\n            module.remove.initialLoad();\\n          },\\n          remoteValues: function() {\\n            var\\n              values = module.get.remoteValues()\\n            ;\\n            module.debug('Recreating selected from session data', values);\\n            if(values) {\\n              if( module.is.single() ) {\\n                $.each(values, function(value, name) {\\n                  module.set.text(name);\\n                });\\n              }\\n              else {\\n                $.each(values, function(value, name) {\\n                  module.add.label(value, name);\\n                });\\n              }\\n            }\\n          }\\n        },\\n\\n        read: {\\n          remoteData: function(value) {\\n            var\\n              name\\n            ;\\n            if(window.Storage === undefined) {\\n              module.error(error.noStorage);\\n              return;\\n            }\\n            name = sessionStorage.getItem(value);\\n            return (name !== undefined)\\n              ? name\\n              : false\\n            ;\\n          }\\n        },\\n\\n        save: {\\n          defaults: function() {\\n            module.save.defaultText();\\n            module.save.placeholderText();\\n            module.save.defaultValue();\\n          },\\n          defaultValue: function() {\\n            var\\n              value = module.get.value()\\n            ;\\n            module.verbose('Saving default value as', value);\\n            $module.data(metadata.defaultValue, value);\\n          },\\n          defaultText: function() {\\n            var\\n              text = module.get.text()\\n            ;\\n            module.verbose('Saving default text as', text);\\n            $module.data(metadata.defaultText, text);\\n          },\\n          placeholderText: function() {\\n            var\\n              text\\n            ;\\n            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {\\n              text = module.get.text();\\n              module.verbose('Saving placeholder text as', text);\\n              $module.data(metadata.placeholderText, text);\\n            }\\n          },\\n          remoteData: function(name, value) {\\n            if(window.Storage === undefined) {\\n              module.error(error.noStorage);\\n              return;\\n            }\\n            module.verbose('Saving remote data to session storage', value, name);\\n            sessionStorage.setItem(value, name);\\n          }\\n        },\\n\\n        clear: function() {\\n          if(module.is.multiple() && settings.useLabels) {\\n            module.remove.labels();\\n          }\\n          else {\\n            module.remove.activeItem();\\n            module.remove.selectedItem();\\n          }\\n          module.set.placeholderText();\\n          module.clearValue();\\n        },\\n\\n        clearValue: function() {\\n          module.set.value('');\\n        },\\n\\n        scrollPage: function(direction, $selectedItem) {\\n          var\\n            $currentItem  = $selectedItem || module.get.selectedItem(),\\n            $menu         = $currentItem.closest(selector.menu),\\n            menuHeight    = $menu.outerHeight(),\\n            currentScroll = $menu.scrollTop(),\\n            itemHeight    = $item.eq(0).outerHeight(),\\n            itemsPerPage  = Math.floor(menuHeight / itemHeight),\\n            maxScroll     = $menu.prop('scrollHeight'),\\n            newScroll     = (direction == 'up')\\n              ? currentScroll - (itemHeight * itemsPerPage)\\n              : currentScroll + (itemHeight * itemsPerPage),\\n            $selectableItem = $item.not(selector.unselectable),\\n            isWithinRange,\\n            $nextSelectedItem,\\n            elementIndex\\n          ;\\n          elementIndex      = (direction == 'up')\\n            ? $selectableItem.index($currentItem) - itemsPerPage\\n            : $selectableItem.index($currentItem) + itemsPerPage\\n          ;\\n          isWithinRange = (direction == 'up')\\n            ? (elementIndex >= 0)\\n            : (elementIndex < $selectableItem.length)\\n          ;\\n          $nextSelectedItem = (isWithinRange)\\n            ? $selectableItem.eq(elementIndex)\\n            : (direction == 'up')\\n              ? $selectableItem.first()\\n              : $selectableItem.last()\\n          ;\\n          if($nextSelectedItem.length > 0) {\\n            module.debug('Scrolling page', direction, $nextSelectedItem);\\n            $currentItem\\n              .removeClass(className.selected)\\n            ;\\n            $nextSelectedItem\\n              .addClass(className.selected)\\n            ;\\n            if(settings.selectOnKeydown && module.is.single()) {\\n              module.set.selectedItem($nextSelectedItem);\\n            }\\n            $menu\\n              .scrollTop(newScroll)\\n            ;\\n          }\\n        },\\n\\n        set: {\\n          filtered: function() {\\n            var\\n              isMultiple       = module.is.multiple(),\\n              isSearch         = module.is.searchSelection(),\\n              isSearchMultiple = (isMultiple && isSearch),\\n              searchValue      = (isSearch)\\n                ? module.get.query()\\n                : '',\\n              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),\\n              searchWidth      = module.get.searchWidth(),\\n              valueIsSet       = searchValue !== ''\\n            ;\\n            if(isMultiple && hasSearchValue) {\\n              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);\\n              $search.css('width', searchWidth);\\n            }\\n            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {\\n              module.verbose('Hiding placeholder text');\\n              $text.addClass(className.filtered);\\n            }\\n            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {\\n              module.verbose('Showing placeholder text');\\n              $text.removeClass(className.filtered);\\n            }\\n          },\\n          empty: function() {\\n            $module.addClass(className.empty);\\n          },\\n          loading: function() {\\n            $module.addClass(className.loading);\\n          },\\n          placeholderText: function(text) {\\n            text = text || module.get.placeholderText();\\n            module.debug('Setting placeholder text', text);\\n            module.set.text(text);\\n            $text.addClass(className.placeholder);\\n          },\\n          tabbable: function() {\\n            if( module.has.search() ) {\\n              module.debug('Added tabindex to searchable dropdown');\\n              $search\\n                .val('')\\n                .attr('tabindex', 0)\\n              ;\\n              $menu\\n                .attr('tabindex', -1)\\n              ;\\n            }\\n            else {\\n              module.debug('Added tabindex to dropdown');\\n              if( $module.attr('tabindex') === undefined) {\\n                $module\\n                  .attr('tabindex', 0)\\n                ;\\n                $menu\\n                  .attr('tabindex', -1)\\n                ;\\n              }\\n            }\\n          },\\n          initialLoad: function() {\\n            module.verbose('Setting initial load');\\n            initialLoad = true;\\n          },\\n          activeItem: function($item) {\\n            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {\\n              $item.addClass(className.filtered);\\n            }\\n            else {\\n              $item.addClass(className.active);\\n            }\\n          },\\n          partialSearch: function(text) {\\n            var\\n              length = module.get.query().length\\n            ;\\n            $search.val( text.substr(0 , length));\\n          },\\n          scrollPosition: function($item, forceScroll) {\\n            var\\n              edgeTolerance = 5,\\n              $menu,\\n              hasActive,\\n              offset,\\n              itemHeight,\\n              itemOffset,\\n              menuOffset,\\n              menuScroll,\\n              menuHeight,\\n              abovePage,\\n              belowPage\\n            ;\\n\\n            $item       = $item || module.get.selectedItem();\\n            $menu       = $item.closest(selector.menu);\\n            hasActive   = ($item && $item.length > 0);\\n            forceScroll = (forceScroll !== undefined)\\n              ? forceScroll\\n              : false\\n            ;\\n            if($item && $menu.length > 0 && hasActive) {\\n              itemOffset = $item.position().top;\\n\\n              $menu.addClass(className.loading);\\n              menuScroll = $menu.scrollTop();\\n              menuOffset = $menu.offset().top;\\n              itemOffset = $item.offset().top;\\n              offset     = menuScroll - menuOffset + itemOffset;\\n              if(!forceScroll) {\\n                menuHeight = $menu.height();\\n                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);\\n                abovePage  = ((offset - edgeTolerance) < menuScroll);\\n              }\\n              module.debug('Scrolling to active item', offset);\\n              if(forceScroll || abovePage || belowPage) {\\n                $menu.scrollTop(offset);\\n              }\\n              $menu.removeClass(className.loading);\\n            }\\n          },\\n          text: function(text) {\\n            if(settings.action !== 'select') {\\n              if(settings.action == 'combo') {\\n                module.debug('Changing combo button text', text, $combo);\\n                if(settings.preserveHTML) {\\n                  $combo.html(text);\\n                }\\n                else {\\n                  $combo.text(text);\\n                }\\n              }\\n              else {\\n                if(text !== module.get.placeholderText()) {\\n                  $text.removeClass(className.placeholder);\\n                }\\n                module.debug('Changing text', text, $text);\\n                $text\\n                  .removeClass(className.filtered)\\n                ;\\n                if(settings.preserveHTML) {\\n                  $text.html(text);\\n                }\\n                else {\\n                  $text.text(text);\\n                }\\n              }\\n            }\\n          },\\n          selectedItem: function($item) {\\n            var\\n              value = module.get.choiceValue($item),\\n              text  = module.get.choiceText($item, false)\\n            ;\\n            module.debug('Setting user selection to item', $item);\\n            module.remove.activeItem();\\n            module.set.partialSearch(text);\\n            module.set.activeItem($item);\\n            module.set.selected(value, $item);\\n            module.set.text(text);\\n          },\\n          selectedLetter: function(letter) {\\n            var\\n              $selectedItem         = $item.filter('.' + className.selected),\\n              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),\\n              $nextValue            = false,\\n              $nextItem\\n            ;\\n            // check next of same letter\\n            if(alreadySelectedLetter) {\\n              $nextItem = $selectedItem.nextAll($item).eq(0);\\n              if( module.has.firstLetter($nextItem, letter) ) {\\n                $nextValue  = $nextItem;\\n              }\\n            }\\n            // check all values\\n            if(!$nextValue) {\\n              $item\\n                .each(function(){\\n                  if(module.has.firstLetter($(this), letter)) {\\n                    $nextValue = $(this);\\n                    return false;\\n                  }\\n                })\\n              ;\\n            }\\n            // set next value\\n            if($nextValue) {\\n              module.verbose('Scrolling to next value with letter', letter);\\n              module.set.scrollPosition($nextValue);\\n              $selectedItem.removeClass(className.selected);\\n              $nextValue.addClass(className.selected);\\n              if(settings.selectOnKeydown && module.is.single()) {\\n                module.set.selectedItem($nextValue);\\n              }\\n            }\\n          },\\n          direction: function($menu) {\\n            if(settings.direction == 'auto') {\\n              if(module.is.onScreen($menu)) {\\n                module.remove.upward($menu);\\n              }\\n              else {\\n                module.set.upward($menu);\\n              }\\n            }\\n            else if(settings.direction == 'upward') {\\n              module.set.upward($menu);\\n            }\\n          },\\n          upward: function($menu) {\\n            var $element = $menu || $module;\\n            $element.addClass(className.upward);\\n          },\\n          value: function(value, text, $selected) {\\n            var\\n              escapedValue = module.escape.value(value),\\n              hasInput     = ($input.length > 0),\\n              isAddition   = !module.has.value(value),\\n              currentValue = module.get.values(),\\n              stringValue  = (value !== undefined)\\n                ? String(value)\\n                : value,\\n              newValue\\n            ;\\n            if(hasInput) {\\n              if(!settings.allowReselection && stringValue == currentValue) {\\n                module.verbose('Skipping value update already same value', value, currentValue);\\n                if(!module.is.initialLoad()) {\\n                  return;\\n                }\\n              }\\n\\n              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {\\n                module.debug('Adding user option', value);\\n                module.add.optionValue(value);\\n              }\\n              module.debug('Updating input value', escapedValue, currentValue);\\n              internalChange = true;\\n              $input\\n                .val(escapedValue)\\n              ;\\n              if(settings.fireOnInit === false && module.is.initialLoad()) {\\n                module.debug('Input native change event ignored on initial load');\\n              }\\n              else {\\n                module.trigger.change();\\n              }\\n              internalChange = false;\\n            }\\n            else {\\n              module.verbose('Storing value in metadata', escapedValue, $input);\\n              if(escapedValue !== currentValue) {\\n                $module.data(metadata.value, stringValue);\\n              }\\n            }\\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\\n              module.verbose('No callback on initial load', settings.onChange);\\n            }\\n            else {\\n              settings.onChange.call(element, value, text, $selected);\\n            }\\n          },\\n          active: function() {\\n            $module\\n              .addClass(className.active)\\n            ;\\n          },\\n          multiple: function() {\\n            $module.addClass(className.multiple);\\n          },\\n          visible: function() {\\n            $module.addClass(className.visible);\\n          },\\n          exactly: function(value, $selectedItem) {\\n            module.debug('Setting selected to exact values');\\n            module.clear();\\n            module.set.selected(value, $selectedItem);\\n          },\\n          selected: function(value, $selectedItem) {\\n            var\\n              isMultiple = module.is.multiple(),\\n              $userSelectedItem\\n            ;\\n            $selectedItem = (settings.allowAdditions)\\n              ? $selectedItem || module.get.itemWithAdditions(value)\\n              : $selectedItem || module.get.item(value)\\n            ;\\n            if(!$selectedItem) {\\n              return;\\n            }\\n            module.debug('Setting selected menu item to', $selectedItem);\\n            if(module.is.multiple()) {\\n              module.remove.searchWidth();\\n            }\\n            if(module.is.single()) {\\n              module.remove.activeItem();\\n              module.remove.selectedItem();\\n            }\\n            else if(settings.useLabels) {\\n              module.remove.selectedItem();\\n            }\\n            // select each item\\n            $selectedItem\\n              .each(function() {\\n                var\\n                  $selected      = $(this),\\n                  selectedText   = module.get.choiceText($selected),\\n                  selectedValue  = module.get.choiceValue($selected, selectedText),\\n\\n                  isFiltered     = $selected.hasClass(className.filtered),\\n                  isActive       = $selected.hasClass(className.active),\\n                  isUserValue    = $selected.hasClass(className.addition),\\n                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)\\n                ;\\n                if(isMultiple) {\\n                  if(!isActive || isUserValue) {\\n                    if(settings.apiSettings && settings.saveRemoteData) {\\n                      module.save.remoteData(selectedText, selectedValue);\\n                    }\\n                    if(settings.useLabels) {\\n                      module.add.value(selectedValue, selectedText, $selected);\\n                      module.add.label(selectedValue, selectedText, shouldAnimate);\\n                      module.set.activeItem($selected);\\n                      module.filterActive();\\n                      module.select.nextAvailable($selectedItem);\\n                    }\\n                    else {\\n                      module.add.value(selectedValue, selectedText, $selected);\\n                      module.set.text(module.add.variables(message.count));\\n                      module.set.activeItem($selected);\\n                    }\\n                  }\\n                  else if(!isFiltered) {\\n                    module.debug('Selected active value, removing label');\\n                    module.remove.selected(selectedValue);\\n                  }\\n                }\\n                else {\\n                  if(settings.apiSettings && settings.saveRemoteData) {\\n                    module.save.remoteData(selectedText, selectedValue);\\n                  }\\n                  module.set.text(selectedText);\\n                  module.set.value(selectedValue, selectedText, $selected);\\n                  $selected\\n                    .addClass(className.active)\\n                    .addClass(className.selected)\\n                  ;\\n                }\\n              })\\n            ;\\n          }\\n        },\\n\\n        add: {\\n          label: function(value, text, shouldAnimate) {\\n            var\\n              $next  = module.is.searchSelection()\\n                ? $search\\n                : $text,\\n              escapedValue = module.escape.value(value),\\n              $label\\n            ;\\n            $label =  $('<a />')\\n              .addClass(className.label)\\n              .attr('data-value', escapedValue)\\n              .html(templates.label(escapedValue, text))\\n            ;\\n            $label = settings.onLabelCreate.call($label, escapedValue, text);\\n\\n            if(module.has.label(value)) {\\n              module.debug('Label already exists, skipping', escapedValue);\\n              return;\\n            }\\n            if(settings.label.variation) {\\n              $label.addClass(settings.label.variation);\\n            }\\n            if(shouldAnimate === true) {\\n              module.debug('Animating in label', $label);\\n              $label\\n                .addClass(className.hidden)\\n                .insertBefore($next)\\n                .transition(settings.label.transition, settings.label.duration)\\n              ;\\n            }\\n            else {\\n              module.debug('Adding selection label', $label);\\n              $label\\n                .insertBefore($next)\\n              ;\\n            }\\n          },\\n          message: function(message) {\\n            var\\n              $message = $menu.children(selector.message),\\n              html     = settings.templates.message(module.add.variables(message))\\n            ;\\n            if($message.length > 0) {\\n              $message\\n                .html(html)\\n              ;\\n            }\\n            else {\\n              $message = $('<div/>')\\n                .html(html)\\n                .addClass(className.message)\\n                .appendTo($menu)\\n              ;\\n            }\\n          },\\n          optionValue: function(value) {\\n            var\\n              escapedValue = module.escape.value(value),\\n              $option      = $input.find('option[value=\\\"' + escapedValue + '\\\"]'),\\n              hasOption    = ($option.length > 0)\\n            ;\\n            if(hasOption) {\\n              return;\\n            }\\n            // temporarily disconnect observer\\n            module.disconnect.selectObserver();\\n            if( module.is.single() ) {\\n              module.verbose('Removing previous user addition');\\n              $input.find('option.' + className.addition).remove();\\n            }\\n            $('<option/>')\\n              .prop('value', escapedValue)\\n              .addClass(className.addition)\\n              .html(value)\\n              .appendTo($input)\\n            ;\\n            module.verbose('Adding user addition as an <option>', value);\\n            module.observe.select();\\n          },\\n          userSuggestion: function(value) {\\n            var\\n              $addition         = $menu.children(selector.addition),\\n              $existingItem     = module.get.item(value),\\n              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,\\n              hasUserSuggestion = $addition.length > 0,\\n              html\\n            ;\\n            if(settings.useLabels && module.has.maxSelections()) {\\n              return;\\n            }\\n            if(value === '' || alreadyHasValue) {\\n              $addition.remove();\\n              return;\\n            }\\n            if(hasUserSuggestion) {\\n              $addition\\n                .data(metadata.value, value)\\n                .data(metadata.text, value)\\n                .attr('data-' + metadata.value, value)\\n                .attr('data-' + metadata.text, value)\\n                .removeClass(className.filtered)\\n              ;\\n              if(!settings.hideAdditions) {\\n                html = settings.templates.addition( module.add.variables(message.addResult, value) );\\n                $addition\\n                  .html(html)\\n                ;\\n              }\\n              module.verbose('Replacing user suggestion with new value', $addition);\\n            }\\n            else {\\n              $addition = module.create.userChoice(value);\\n              $addition\\n                .prependTo($menu)\\n              ;\\n              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);\\n            }\\n            if(!settings.hideAdditions || module.is.allFiltered()) {\\n              $addition\\n                .addClass(className.selected)\\n                .siblings()\\n                .removeClass(className.selected)\\n              ;\\n            }\\n            module.refreshItems();\\n          },\\n          variables: function(message, term) {\\n            var\\n              hasCount    = (message.search('{count}') !== -1),\\n              hasMaxCount = (message.search('{maxCount}') !== -1),\\n              hasTerm     = (message.search('{term}') !== -1),\\n              values,\\n              count,\\n              query\\n            ;\\n            module.verbose('Adding templated variables to message', message);\\n            if(hasCount) {\\n              count  = module.get.selectionCount();\\n              message = message.replace('{count}', count);\\n            }\\n            if(hasMaxCount) {\\n              count  = module.get.selectionCount();\\n              message = message.replace('{maxCount}', settings.maxSelections);\\n            }\\n            if(hasTerm) {\\n              query   = term || module.get.query();\\n              message = message.replace('{term}', query);\\n            }\\n            return message;\\n          },\\n          value: function(addedValue, addedText, $selectedItem) {\\n            var\\n              currentValue = module.get.values(),\\n              newValue\\n            ;\\n            if(addedValue === '') {\\n              module.debug('Cannot select blank values from multiselect');\\n              return;\\n            }\\n            // extend current array\\n            if($.isArray(currentValue)) {\\n              newValue = currentValue.concat([addedValue]);\\n              newValue = module.get.uniqueArray(newValue);\\n            }\\n            else {\\n              newValue = [addedValue];\\n            }\\n            // add values\\n            if( module.has.selectInput() ) {\\n              if(module.can.extendSelect()) {\\n                module.debug('Adding value to select', addedValue, newValue, $input);\\n                module.add.optionValue(addedValue);\\n              }\\n            }\\n            else {\\n              newValue = newValue.join(settings.delimiter);\\n              module.debug('Setting hidden input to delimited value', newValue, $input);\\n            }\\n\\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\\n              module.verbose('Skipping onadd callback on initial load', settings.onAdd);\\n            }\\n            else {\\n              settings.onAdd.call(element, addedValue, addedText, $selectedItem);\\n            }\\n            module.set.value(newValue, addedValue, addedText, $selectedItem);\\n            module.check.maxSelections();\\n          }\\n        },\\n\\n        remove: {\\n          active: function() {\\n            $module.removeClass(className.active);\\n          },\\n          activeLabel: function() {\\n            $module.find(selector.label).removeClass(className.active);\\n          },\\n          empty: function() {\\n            $module.removeClass(className.empty);\\n          },\\n          loading: function() {\\n            $module.removeClass(className.loading);\\n          },\\n          initialLoad: function() {\\n            initialLoad = false;\\n          },\\n          upward: function($menu) {\\n            var $element = $menu || $module;\\n            $element.removeClass(className.upward);\\n          },\\n          visible: function() {\\n            $module.removeClass(className.visible);\\n          },\\n          activeItem: function() {\\n            $item.removeClass(className.active);\\n          },\\n          filteredItem: function() {\\n            if(settings.useLabels && module.has.maxSelections() ) {\\n              return;\\n            }\\n            if(settings.useLabels && module.is.multiple()) {\\n              $item.not('.' + className.active).removeClass(className.filtered);\\n            }\\n            else {\\n              $item.removeClass(className.filtered);\\n            }\\n            module.remove.empty();\\n          },\\n          optionValue: function(value) {\\n            var\\n              escapedValue = module.escape.value(value),\\n              $option      = $input.find('option[value=\\\"' + escapedValue + '\\\"]'),\\n              hasOption    = ($option.length > 0)\\n            ;\\n            if(!hasOption || !$option.hasClass(className.addition)) {\\n              return;\\n            }\\n            // temporarily disconnect observer\\n            if(selectObserver) {\\n              selectObserver.disconnect();\\n              module.verbose('Temporarily disconnecting mutation observer');\\n            }\\n            $option.remove();\\n            module.verbose('Removing user addition as an <option>', escapedValue);\\n            if(selectObserver) {\\n              selectObserver.observe($input[0], {\\n                childList : true,\\n                subtree   : true\\n              });\\n            }\\n          },\\n          message: function() {\\n            $menu.children(selector.message).remove();\\n          },\\n          searchWidth: function() {\\n            $search.css('width', '');\\n          },\\n          searchTerm: function() {\\n            module.verbose('Cleared search term');\\n            $search.val('');\\n            module.set.filtered();\\n          },\\n          userAddition: function() {\\n            $item.filter(selector.addition).remove();\\n          },\\n          selected: function(value, $selectedItem) {\\n            $selectedItem = (settings.allowAdditions)\\n              ? $selectedItem || module.get.itemWithAdditions(value)\\n              : $selectedItem || module.get.item(value)\\n            ;\\n\\n            if(!$selectedItem) {\\n              return false;\\n            }\\n\\n            $selectedItem\\n              .each(function() {\\n                var\\n                  $selected     = $(this),\\n                  selectedText  = module.get.choiceText($selected),\\n                  selectedValue = module.get.choiceValue($selected, selectedText)\\n                ;\\n                if(module.is.multiple()) {\\n                  if(settings.useLabels) {\\n                    module.remove.value(selectedValue, selectedText, $selected);\\n                    module.remove.label(selectedValue);\\n                  }\\n                  else {\\n                    module.remove.value(selectedValue, selectedText, $selected);\\n                    if(module.get.selectionCount() === 0) {\\n                      module.set.placeholderText();\\n                    }\\n                    else {\\n                      module.set.text(module.add.variables(message.count));\\n                    }\\n                  }\\n                }\\n                else {\\n                  module.remove.value(selectedValue, selectedText, $selected);\\n                }\\n                $selected\\n                  .removeClass(className.filtered)\\n                  .removeClass(className.active)\\n                ;\\n                if(settings.useLabels) {\\n                  $selected.removeClass(className.selected);\\n                }\\n              })\\n            ;\\n          },\\n          selectedItem: function() {\\n            $item.removeClass(className.selected);\\n          },\\n          value: function(removedValue, removedText, $removedItem) {\\n            var\\n              values = module.get.values(),\\n              newValue\\n            ;\\n            if( module.has.selectInput() ) {\\n              module.verbose('Input is <select> removing selected option', removedValue);\\n              newValue = module.remove.arrayValue(removedValue, values);\\n              module.remove.optionValue(removedValue);\\n            }\\n            else {\\n              module.verbose('Removing from delimited values', removedValue);\\n              newValue = module.remove.arrayValue(removedValue, values);\\n              newValue = newValue.join(settings.delimiter);\\n            }\\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\\n              module.verbose('No callback on initial load', settings.onRemove);\\n            }\\n            else {\\n              settings.onRemove.call(element, removedValue, removedText, $removedItem);\\n            }\\n            module.set.value(newValue, removedText, $removedItem);\\n            module.check.maxSelections();\\n          },\\n          arrayValue: function(removedValue, values) {\\n            if( !$.isArray(values) ) {\\n              values = [values];\\n            }\\n            values = $.grep(values, function(value){\\n              return (removedValue != value);\\n            });\\n            module.verbose('Removed value from delimited string', removedValue, values);\\n            return values;\\n          },\\n          label: function(value, shouldAnimate) {\\n            var\\n              $labels       = $module.find(selector.label),\\n              $removedLabel = $labels.filter('[data-value=\\\"' + value +'\\\"]')\\n            ;\\n            module.verbose('Removing label', $removedLabel);\\n            $removedLabel.remove();\\n          },\\n          activeLabels: function($activeLabels) {\\n            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);\\n            module.verbose('Removing active label selections', $activeLabels);\\n            module.remove.labels($activeLabels);\\n          },\\n          labels: function($labels) {\\n            $labels = $labels || $module.find(selector.label);\\n            module.verbose('Removing labels', $labels);\\n            $labels\\n              .each(function(){\\n                var\\n                  $label      = $(this),\\n                  value       = $label.data(metadata.value),\\n                  stringValue = (value !== undefined)\\n                    ? String(value)\\n                    : value,\\n                  isUserValue = module.is.userValue(stringValue)\\n                ;\\n                if(settings.onLabelRemove.call($label, value) === false) {\\n                  module.debug('Label remove callback cancelled removal');\\n                  return;\\n                }\\n                module.remove.message();\\n                if(isUserValue) {\\n                  module.remove.value(stringValue);\\n                  module.remove.label(stringValue);\\n                }\\n                else {\\n                  // selected will also remove label\\n                  module.remove.selected(stringValue);\\n                }\\n              })\\n            ;\\n          },\\n          tabbable: function() {\\n            if( module.has.search() ) {\\n              module.debug('Searchable dropdown initialized');\\n              $search\\n                .removeAttr('tabindex')\\n              ;\\n              $menu\\n                .removeAttr('tabindex')\\n              ;\\n            }\\n            else {\\n              module.debug('Simple selection dropdown initialized');\\n              $module\\n                .removeAttr('tabindex')\\n              ;\\n              $menu\\n                .removeAttr('tabindex')\\n              ;\\n            }\\n          }\\n        },\\n\\n        has: {\\n          menuSearch: function() {\\n            return (module.has.search() && $search.closest($menu).length > 0);\\n          },\\n          search: function() {\\n            return ($search.length > 0);\\n          },\\n          sizer: function() {\\n            return ($sizer.length > 0);\\n          },\\n          selectInput: function() {\\n            return ( $input.is('select') );\\n          },\\n          minCharacters: function(searchTerm) {\\n            if(settings.minCharacters) {\\n              searchTerm = (searchTerm !== undefined)\\n                ? String(searchTerm)\\n                : String(module.get.query())\\n              ;\\n              return (searchTerm.length >= settings.minCharacters);\\n            }\\n            return true;\\n          },\\n          firstLetter: function($item, letter) {\\n            var\\n              text,\\n              firstLetter\\n            ;\\n            if(!$item || $item.length === 0 || typeof letter !== 'string') {\\n              return false;\\n            }\\n            text        = module.get.choiceText($item, false);\\n            letter      = letter.toLowerCase();\\n            firstLetter = String(text).charAt(0).toLowerCase();\\n            return (letter == firstLetter);\\n          },\\n          input: function() {\\n            return ($input.length > 0);\\n          },\\n          items: function() {\\n            return ($item.length > 0);\\n          },\\n          menu: function() {\\n            return ($menu.length > 0);\\n          },\\n          message: function() {\\n            return ($menu.children(selector.message).length !== 0);\\n          },\\n          label: function(value) {\\n            var\\n              escapedValue = module.escape.value(value),\\n              $labels      = $module.find(selector.label)\\n            ;\\n            return ($labels.filter('[data-value=\\\"' + escapedValue +'\\\"]').length > 0);\\n          },\\n          maxSelections: function() {\\n            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);\\n          },\\n          allResultsFiltered: function() {\\n            var\\n              $normalResults = $item.not(selector.addition)\\n            ;\\n            return ($normalResults.filter(selector.unselectable).length === $normalResults.length);\\n          },\\n          userSuggestion: function() {\\n            return ($menu.children(selector.addition).length > 0);\\n          },\\n          query: function() {\\n            return (module.get.query() !== '');\\n          },\\n          value: function(value) {\\n            var\\n              values   = module.get.values(),\\n              hasValue = $.isArray(values)\\n               ? values && ($.inArray(value, values) !== -1)\\n               : (values == value)\\n            ;\\n            return (hasValue)\\n              ? true\\n              : false\\n            ;\\n          }\\n        },\\n\\n        is: {\\n          active: function() {\\n            return $module.hasClass(className.active);\\n          },\\n          bubbledLabelClick: function(event) {\\n            return $(event.target).is('select, input') && $module.closest('label').length > 0;\\n          },\\n          bubbledIconClick: function(event) {\\n            return $(event.target).closest($icon).length > 0;\\n          },\\n          alreadySetup: function() {\\n            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);\\n          },\\n          animating: function($subMenu) {\\n            return ($subMenu)\\n              ? $subMenu.transition && $subMenu.transition('is animating')\\n              : $menu.transition    && $menu.transition('is animating')\\n            ;\\n          },\\n          disabled: function() {\\n            return $module.hasClass(className.disabled);\\n          },\\n          focused: function() {\\n            return (document.activeElement === $module[0]);\\n          },\\n          focusedOnSearch: function() {\\n            return (document.activeElement === $search[0]);\\n          },\\n          allFiltered: function() {\\n            return( (module.is.multiple() || module.has.search()) && !(settings.hideAdditions == false && module.has.userSuggestion()) && !module.has.message() && module.has.allResultsFiltered() );\\n          },\\n          hidden: function($subMenu) {\\n            return !module.is.visible($subMenu);\\n          },\\n          initialLoad: function() {\\n            return initialLoad;\\n          },\\n          onScreen: function($subMenu) {\\n            var\\n              $currentMenu   = $subMenu || $menu,\\n              canOpenDownward = true,\\n              onScreen = {},\\n              calculations\\n            ;\\n            $currentMenu.addClass(className.loading);\\n            calculations = {\\n              context: {\\n                scrollTop : $context.scrollTop(),\\n                height    : $context.outerHeight()\\n              },\\n              menu : {\\n                offset: $currentMenu.offset(),\\n                height: $currentMenu.outerHeight()\\n              }\\n            };\\n            onScreen = {\\n              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,\\n              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height\\n            };\\n            if(onScreen.below) {\\n              module.verbose('Dropdown can fit in context downward', onScreen);\\n              canOpenDownward = true;\\n            }\\n            else if(!onScreen.below && !onScreen.above) {\\n              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);\\n              canOpenDownward = true;\\n            }\\n            else {\\n              module.verbose('Dropdown cannot fit below, opening upward', onScreen);\\n              canOpenDownward = false;\\n            }\\n            $currentMenu.removeClass(className.loading);\\n            return canOpenDownward;\\n          },\\n          inObject: function(needle, object) {\\n            var\\n              found = false\\n            ;\\n            $.each(object, function(index, property) {\\n              if(property == needle) {\\n                found = true;\\n                return true;\\n              }\\n            });\\n            return found;\\n          },\\n          multiple: function() {\\n            return $module.hasClass(className.multiple);\\n          },\\n          single: function() {\\n            return !module.is.multiple();\\n          },\\n          selectMutation: function(mutations) {\\n            var\\n              selectChanged = false\\n            ;\\n            $.each(mutations, function(index, mutation) {\\n              if(mutation.target && $(mutation.target).is('select')) {\\n                selectChanged = true;\\n                return true;\\n              }\\n            });\\n            return selectChanged;\\n          },\\n          search: function() {\\n            return $module.hasClass(className.search);\\n          },\\n          searchSelection: function() {\\n            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );\\n          },\\n          selection: function() {\\n            return $module.hasClass(className.selection);\\n          },\\n          userValue: function(value) {\\n            return ($.inArray(value, module.get.userValues()) !== -1);\\n          },\\n          upward: function($menu) {\\n            var $element = $menu || $module;\\n            return $element.hasClass(className.upward);\\n          },\\n          visible: function($subMenu) {\\n            return ($subMenu)\\n              ? $subMenu.hasClass(className.visible)\\n              : $menu.hasClass(className.visible)\\n            ;\\n          }\\n        },\\n\\n        can: {\\n          activate: function($item) {\\n            if(settings.useLabels) {\\n              return true;\\n            }\\n            if(!module.has.maxSelections()) {\\n              return true;\\n            }\\n            if(module.has.maxSelections() && $item.hasClass(className.active)) {\\n              return true;\\n            }\\n            return false;\\n          },\\n          click: function() {\\n            return (hasTouch || settings.on == 'click');\\n          },\\n          extendSelect: function() {\\n            return settings.allowAdditions || settings.apiSettings;\\n          },\\n          show: function() {\\n            return !module.is.disabled() && (module.has.items() || module.has.message());\\n          },\\n          useAPI: function() {\\n            return $.fn.api !== undefined;\\n          }\\n        },\\n\\n        animate: {\\n          show: function(callback, $subMenu) {\\n            var\\n              $currentMenu = $subMenu || $menu,\\n              start = ($subMenu)\\n                ? function() {}\\n                : function() {\\n                  module.hideSubMenus();\\n                  module.hideOthers();\\n                  module.set.active();\\n                },\\n              transition\\n            ;\\n            callback = $.isFunction(callback)\\n              ? callback\\n              : function(){}\\n            ;\\n            module.verbose('Doing menu show animation', $currentMenu);\\n            module.set.direction($subMenu);\\n            transition = module.get.transition($subMenu);\\n            if( module.is.selection() ) {\\n              module.set.scrollPosition(module.get.selectedItem(), true);\\n            }\\n            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {\\n              if(transition == 'none') {\\n                start();\\n                $currentMenu.transition('show');\\n                callback.call(element);\\n              }\\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\\n                $currentMenu\\n                  .transition({\\n                    animation  : transition + ' in',\\n                    debug      : settings.debug,\\n                    verbose    : settings.verbose,\\n                    duration   : settings.duration,\\n                    queue      : true,\\n                    onStart    : start,\\n                    onComplete : function() {\\n                      callback.call(element);\\n                    }\\n                  })\\n                ;\\n              }\\n              else {\\n                module.error(error.noTransition, transition);\\n              }\\n            }\\n          },\\n          hide: function(callback, $subMenu) {\\n            var\\n              $currentMenu = $subMenu || $menu,\\n              duration = ($subMenu)\\n                ? (settings.duration * 0.9)\\n                : settings.duration,\\n              start = ($subMenu)\\n                ? function() {}\\n                : function() {\\n                  if( module.can.click() ) {\\n                    module.unbind.intent();\\n                  }\\n                  module.remove.active();\\n                },\\n              transition = module.get.transition($subMenu)\\n            ;\\n            callback = $.isFunction(callback)\\n              ? callback\\n              : function(){}\\n            ;\\n            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {\\n              module.verbose('Doing menu hide animation', $currentMenu);\\n\\n              if(transition == 'none') {\\n                start();\\n                $currentMenu.transition('hide');\\n                callback.call(element);\\n              }\\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\\n                $currentMenu\\n                  .transition({\\n                    animation  : transition + ' out',\\n                    duration   : settings.duration,\\n                    debug      : settings.debug,\\n                    verbose    : settings.verbose,\\n                    queue      : true,\\n                    onStart    : start,\\n                    onComplete : function() {\\n                      if(settings.direction == 'auto') {\\n                        module.remove.upward($subMenu);\\n                      }\\n                      callback.call(element);\\n                    }\\n                  })\\n                ;\\n              }\\n              else {\\n                module.error(error.transition);\\n              }\\n            }\\n          }\\n        },\\n\\n        hideAndClear: function() {\\n          module.remove.searchTerm();\\n          if( module.has.maxSelections() ) {\\n            return;\\n          }\\n          if(module.has.search()) {\\n            module.hide(function() {\\n              module.remove.filteredItem();\\n            });\\n          }\\n          else {\\n            module.hide();\\n          }\\n        },\\n\\n        delay: {\\n          show: function() {\\n            module.verbose('Delaying show event to ensure user intent');\\n            clearTimeout(module.timer);\\n            module.timer = setTimeout(module.show, settings.delay.show);\\n          },\\n          hide: function() {\\n            module.verbose('Delaying hide event to ensure user intent');\\n            clearTimeout(module.timer);\\n            module.timer = setTimeout(module.hide, settings.delay.hide);\\n          }\\n        },\\n\\n        escape: {\\n          value: function(value) {\\n            var\\n              multipleValues = $.isArray(value),\\n              stringValue    = (typeof value === 'string'),\\n              isUnparsable   = (!stringValue && !multipleValues),\\n              hasQuotes      = (stringValue && value.search(regExp.quote) !== -1),\\n              values         = []\\n            ;\\n            if(!module.has.selectInput() || isUnparsable || !hasQuotes) {\\n              return value;\\n            }\\n            module.debug('Encoding quote values for use in select', value);\\n            if(multipleValues) {\\n              $.each(value, function(index, value){\\n                values.push(value.replace(regExp.quote, '&quot;'));\\n              });\\n              return values;\\n            }\\n            return value.replace(regExp.quote, '&quot;');\\n          },\\n          regExp: function(text) {\\n            text =  String(text);\\n            return text.replace(regExp.escape, '\\\\\\\\$&');\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : $allModules\\n  ;\\n};\\n\\n$.fn.dropdown.settings = {\\n\\n  silent                 : false,\\n  debug                  : false,\\n  verbose                : false,\\n  performance            : true,\\n\\n  on                     : 'click',    // what event should show menu action on item selection\\n  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})\\n\\n\\n  apiSettings            : false,\\n  selectOnKeydown        : true,       // Whether selection should occur automatically when keyboard shortcuts used\\n  minCharacters          : 0,          // Minimum characters required to trigger API call\\n  saveRemoteData         : true,       // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh\\n  throttle               : 200,        // How long to wait after last user input to search remotely\\n\\n  context                : window,     // Context to use when determining if on screen\\n  direction              : 'auto',     // Whether dropdown should always open in one direction\\n  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing\\n\\n  match                  : 'both',     // what to match against with search selection (both, text, or label)\\n  fullTextSearch         : false,      // search anywhere in value (set to 'exact' to require exact matches)\\n\\n  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text\\n  preserveHTML           : true,       // preserve html when selecting value\\n  sortSelect             : false,      // sort selection on init\\n\\n  forceSelection         : true,       // force a choice on blur with search selection\\n\\n  allowAdditions         : false,      // whether multiple select should allow user added values\\n  hideAdditions          : true,      // whether or not to hide special message prompting a user they can enter a value\\n\\n  maxSelections          : false,      // When set to a number limits the number of selections to this count\\n  useLabels              : true,       // whether multiple select should filter currently active selections from choices\\n  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character\\n\\n  showOnFocus            : true,       // show menu on focus\\n  allowReselection       : false,      // whether current value should trigger callbacks when reselected\\n  allowTab               : true,       // add tabindex to element\\n  allowCategorySelection : false,      // allow elements with sub-menus to be selected\\n\\n  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values\\n\\n  transition             : 'auto',     // auto transition will slide down or up based on direction\\n  duration               : 200,        // duration of transition\\n\\n  glyphWidth             : 1.037,      // widest glyph width in em (W is 1.037 em) used to calculate multiselect input width\\n\\n  // label settings on multi-select\\n  label: {\\n    transition : 'scale',\\n    duration   : 200,\\n    variation  : false\\n  },\\n\\n  // delay before event\\n  delay : {\\n    hide   : 300,\\n    show   : 200,\\n    search : 20,\\n    touch  : 50\\n  },\\n\\n  /* Callbacks */\\n  onChange      : function(value, text, $selected){},\\n  onAdd         : function(value, text, $selected){},\\n  onRemove      : function(value, text, $selected){},\\n\\n  onLabelSelect : function($selectedLabels){},\\n  onLabelCreate : function(value, text) { return $(this); },\\n  onLabelRemove : function(value) { return true; },\\n  onNoResults   : function(searchTerm) { return true; },\\n  onShow        : function(){},\\n  onHide        : function(){},\\n\\n  /* Component */\\n  name           : 'Dropdown',\\n  namespace      : 'dropdown',\\n\\n  message: {\\n    addResult     : 'Add <b>{term}</b>',\\n    count         : '{count} selected',\\n    maxSelections : 'Max {maxCount} selections',\\n    noResults     : 'No results found.',\\n    serverError   : 'There was an error contacting the server'\\n  },\\n\\n  error : {\\n    action          : 'You called a dropdown action that was not defined',\\n    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',\\n    labels          : 'Allowing user additions currently requires the use of labels.',\\n    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',\\n    method          : 'The method you called is not defined.',\\n    noAPI           : 'The API module is required to load resources remotely',\\n    noStorage       : 'Saving remote data requires session storage',\\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'\\n  },\\n\\n  regExp : {\\n    escape   : /[-[\\\\]{}()*+?.,\\\\\\\\^$|#\\\\s]/g,\\n    quote    : /\\\"/g\\n  },\\n\\n  metadata : {\\n    defaultText     : 'defaultText',\\n    defaultValue    : 'defaultValue',\\n    placeholderText : 'placeholder',\\n    text            : 'text',\\n    value           : 'value'\\n  },\\n\\n  // property names for remote query\\n  fields: {\\n    remoteValues : 'results',  // grouping for api results\\n    values       : 'values',   // grouping for all dropdown values\\n    disabled     : 'disabled', // whether value should be disabled\\n    name         : 'name',     // displayed dropdown text\\n    value        : 'value',    // actual dropdown value\\n    text         : 'text'      // displayed text when selected\\n  },\\n\\n  keys : {\\n    backspace  : 8,\\n    delimiter  : 188, // comma\\n    deleteKey  : 46,\\n    enter      : 13,\\n    escape     : 27,\\n    pageUp     : 33,\\n    pageDown   : 34,\\n    leftArrow  : 37,\\n    upArrow    : 38,\\n    rightArrow : 39,\\n    downArrow  : 40\\n  },\\n\\n  selector : {\\n    addition     : '.addition',\\n    dropdown     : '.ui.dropdown',\\n    hidden       : '.hidden',\\n    icon         : '> .dropdown.icon',\\n    input        : '> input[type=\\\"hidden\\\"], > select',\\n    item         : '.item',\\n    label        : '> .label',\\n    remove       : '> .label > .delete.icon',\\n    siblingLabel : '.label',\\n    menu         : '.menu',\\n    message      : '.message',\\n    menuIcon     : '.dropdown.icon',\\n    search       : 'input.search, .menu > .search > input, .menu input.search',\\n    sizer        : '> input.sizer',\\n    text         : '> .text:not(.icon)',\\n    unselectable : '.disabled, .filtered'\\n  },\\n\\n  className : {\\n    active      : 'active',\\n    addition    : 'addition',\\n    animating   : 'animating',\\n    disabled    : 'disabled',\\n    empty       : 'empty',\\n    dropdown    : 'ui dropdown',\\n    filtered    : 'filtered',\\n    hidden      : 'hidden transition',\\n    item        : 'item',\\n    label       : 'ui label',\\n    loading     : 'loading',\\n    menu        : 'menu',\\n    message     : 'message',\\n    multiple    : 'multiple',\\n    placeholder : 'default',\\n    sizer       : 'sizer',\\n    search      : 'search',\\n    selected    : 'selected',\\n    selection   : 'selection',\\n    upward      : 'upward',\\n    visible     : 'visible'\\n  }\\n\\n};\\n\\n/* Templates */\\n$.fn.dropdown.settings.templates = {\\n\\n  // generates dropdown from select values\\n  dropdown: function(select) {\\n    var\\n      placeholder = select.placeholder || false,\\n      values      = select.values || {},\\n      html        = ''\\n    ;\\n    html +=  '<i class=\\\"dropdown icon\\\"></i>';\\n    if(select.placeholder) {\\n      html += '<div class=\\\"default text\\\">' + placeholder + '</div>';\\n    }\\n    else {\\n      html += '<div class=\\\"text\\\"></div>';\\n    }\\n    html += '<div class=\\\"menu\\\">';\\n    $.each(select.values, function(index, option) {\\n      html += (option.disabled)\\n        ? '<div class=\\\"disabled item\\\" data-value=\\\"' + option.value + '\\\">' + option.name + '</div>'\\n        : '<div class=\\\"item\\\" data-value=\\\"' + option.value + '\\\">' + option.name + '</div>'\\n      ;\\n    });\\n    html += '</div>';\\n    return html;\\n  },\\n\\n  // generates just menu from select\\n  menu: function(response, fields) {\\n    var\\n      values = response[fields.values] || {},\\n      html   = ''\\n    ;\\n    $.each(values, function(index, option) {\\n      var\\n        maybeText = (option[fields.text])\\n          ? 'data-text=\\\"' + option[fields.text] + '\\\"'\\n          : '',\\n        maybeDisabled = (option[fields.disabled])\\n          ? 'disabled '\\n          : ''\\n      ;\\n      html += '<div class=\\\"'+ maybeDisabled +'item\\\" data-value=\\\"' + option[fields.value] + '\\\"' + maybeText + '>'\\n      html +=   option[fields.name];\\n      html += '</div>';\\n    });\\n    return html;\\n  },\\n\\n  // generates label for multiselect\\n  label: function(value, text) {\\n    return text + '<i class=\\\"delete icon\\\"></i>';\\n  },\\n\\n\\n  // generates messages like \\\"No results\\\"\\n  message: function(message) {\\n    return message;\\n  },\\n\\n  // generates user addition to selection menu\\n  addition: function(choice) {\\n    return choice;\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Embed\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.embed = function(parameters) {\\n\\n  var\\n    $allModules     = $(this),\\n\\n    moduleSelector  = $allModules.selector || '',\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.embed.settings, parameters)\\n          : $.extend({}, $.fn.embed.settings),\\n\\n        selector        = settings.selector,\\n        className       = settings.className,\\n        sources         = settings.sources,\\n        error           = settings.error,\\n        metadata        = settings.metadata,\\n        namespace       = settings.namespace,\\n        templates       = settings.templates,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        $window         = $(window),\\n        $module         = $(this),\\n        $placeholder    = $module.find(selector.placeholder),\\n        $icon           = $module.find(selector.icon),\\n        $embed          = $module.find(selector.embed),\\n\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.debug('Initializing embed');\\n          module.determine.autoplay();\\n          module.create();\\n          module.bind.events();\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous instance of embed');\\n          module.reset();\\n          $module\\n            .removeData(moduleNamespace)\\n            .off(eventNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          module.verbose('Refreshing selector cache');\\n          $placeholder = $module.find(selector.placeholder);\\n          $icon        = $module.find(selector.icon);\\n          $embed       = $module.find(selector.embed);\\n        },\\n\\n        bind: {\\n          events: function() {\\n            if( module.has.placeholder() ) {\\n              module.debug('Adding placeholder events');\\n              $module\\n                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)\\n                .on('click' + eventNamespace, selector.icon, module.createAndShow)\\n              ;\\n            }\\n          }\\n        },\\n\\n        create: function() {\\n          var\\n            placeholder = module.get.placeholder()\\n          ;\\n          if(placeholder) {\\n            module.createPlaceholder();\\n          }\\n          else {\\n            module.createAndShow();\\n          }\\n        },\\n\\n        createPlaceholder: function(placeholder) {\\n          var\\n            icon  = module.get.icon(),\\n            url   = module.get.url(),\\n            embed = module.generate.embed(url)\\n          ;\\n          placeholder = placeholder || module.get.placeholder();\\n          $module.html( templates.placeholder(placeholder, icon) );\\n          module.debug('Creating placeholder for embed', placeholder, icon);\\n        },\\n\\n        createEmbed: function(url) {\\n          module.refresh();\\n          url = url || module.get.url();\\n          $embed = $('<div/>')\\n            .addClass(className.embed)\\n            .html( module.generate.embed(url) )\\n            .appendTo($module)\\n          ;\\n          settings.onCreate.call(element, url);\\n          module.debug('Creating embed object', $embed);\\n        },\\n\\n        changeEmbed: function(url) {\\n          $embed\\n            .html( module.generate.embed(url) )\\n          ;\\n        },\\n\\n        createAndShow: function() {\\n          module.createEmbed();\\n          module.show();\\n        },\\n\\n        // sets new embed\\n        change: function(source, id, url) {\\n          module.debug('Changing video to ', source, id, url);\\n          $module\\n            .data(metadata.source, source)\\n            .data(metadata.id, id)\\n          ;\\n          if(url) {\\n            $module.data(metadata.url, url);\\n          }\\n          else {\\n            $module.removeData(metadata.url);\\n          }\\n          if(module.has.embed()) {\\n            module.changeEmbed();\\n          }\\n          else {\\n            module.create();\\n          }\\n        },\\n\\n        // clears embed\\n        reset: function() {\\n          module.debug('Clearing embed and showing placeholder');\\n          module.remove.active();\\n          module.remove.embed();\\n          module.showPlaceholder();\\n          settings.onReset.call(element);\\n        },\\n\\n        // shows current embed\\n        show: function() {\\n          module.debug('Showing embed');\\n          module.set.active();\\n          settings.onDisplay.call(element);\\n        },\\n\\n        hide: function() {\\n          module.debug('Hiding embed');\\n          module.showPlaceholder();\\n        },\\n\\n        showPlaceholder: function() {\\n          module.debug('Showing placeholder image');\\n          module.remove.active();\\n          settings.onPlaceholderDisplay.call(element);\\n        },\\n\\n        get: {\\n          id: function() {\\n            return settings.id || $module.data(metadata.id);\\n          },\\n          placeholder: function() {\\n            return settings.placeholder || $module.data(metadata.placeholder);\\n          },\\n          icon: function() {\\n            return (settings.icon)\\n              ? settings.icon\\n              : ($module.data(metadata.icon) !== undefined)\\n                ? $module.data(metadata.icon)\\n                : module.determine.icon()\\n            ;\\n          },\\n          source: function(url) {\\n            return (settings.source)\\n              ? settings.source\\n              : ($module.data(metadata.source) !== undefined)\\n                ? $module.data(metadata.source)\\n                : module.determine.source()\\n            ;\\n          },\\n          type: function() {\\n            var source = module.get.source();\\n            return (sources[source] !== undefined)\\n              ? sources[source].type\\n              : false\\n            ;\\n          },\\n          url: function() {\\n            return (settings.url)\\n              ? settings.url\\n              : ($module.data(metadata.url) !== undefined)\\n                ? $module.data(metadata.url)\\n                : module.determine.url()\\n            ;\\n          }\\n        },\\n\\n        determine: {\\n          autoplay: function() {\\n            if(module.should.autoplay()) {\\n              settings.autoplay = true;\\n            }\\n          },\\n          source: function(url) {\\n            var\\n              matchedSource = false\\n            ;\\n            url = url || module.get.url();\\n            if(url) {\\n              $.each(sources, function(name, source) {\\n                if(url.search(source.domain) !== -1) {\\n                  matchedSource = name;\\n                  return false;\\n                }\\n              });\\n            }\\n            return matchedSource;\\n          },\\n          icon: function() {\\n            var\\n              source = module.get.source()\\n            ;\\n            return (sources[source] !== undefined)\\n              ? sources[source].icon\\n              : false\\n            ;\\n          },\\n          url: function() {\\n            var\\n              id     = settings.id     || $module.data(metadata.id),\\n              source = settings.source || $module.data(metadata.source),\\n              url\\n            ;\\n            url = (sources[source] !== undefined)\\n              ? sources[source].url.replace('{id}', id)\\n              : false\\n            ;\\n            if(url) {\\n              $module.data(metadata.url, url);\\n            }\\n            return url;\\n          }\\n        },\\n\\n\\n        set: {\\n          active: function() {\\n            $module.addClass(className.active);\\n          }\\n        },\\n\\n        remove: {\\n          active: function() {\\n            $module.removeClass(className.active);\\n          },\\n          embed: function() {\\n            $embed.empty();\\n          }\\n        },\\n\\n        encode: {\\n          parameters: function(parameters) {\\n            var\\n              urlString = [],\\n              index\\n            ;\\n            for (index in parameters) {\\n              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );\\n            }\\n            return urlString.join('&amp;');\\n          }\\n        },\\n\\n        generate: {\\n          embed: function(url) {\\n            module.debug('Generating embed html');\\n            var\\n              source = module.get.source(),\\n              html,\\n              parameters\\n            ;\\n            url = module.get.url(url);\\n            if(url) {\\n              parameters = module.generate.parameters(source);\\n              html       = templates.iframe(url, parameters);\\n            }\\n            else {\\n              module.error(error.noURL, $module);\\n            }\\n            return html;\\n          },\\n          parameters: function(source, extraParameters) {\\n            var\\n              parameters = (sources[source] && sources[source].parameters !== undefined)\\n                ? sources[source].parameters(settings)\\n                : {}\\n            ;\\n            extraParameters = extraParameters || settings.parameters;\\n            if(extraParameters) {\\n              parameters = $.extend({}, parameters, extraParameters);\\n            }\\n            parameters = settings.onEmbed(parameters);\\n            return module.encode.parameters(parameters);\\n          }\\n        },\\n\\n        has: {\\n          embed: function() {\\n            return ($embed.length > 0);\\n          },\\n          placeholder: function() {\\n            return settings.placeholder || $module.data(metadata.placeholder);\\n          }\\n        },\\n\\n        should: {\\n          autoplay: function() {\\n            return (settings.autoplay === 'auto')\\n              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)\\n              : settings.autoplay\\n            ;\\n          }\\n        },\\n\\n        is: {\\n          video: function() {\\n            return module.get.type() == 'video';\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if($allModules.length > 1) {\\n              title += ' ' + '(' + $allModules.length + ')';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.embed.settings = {\\n\\n  name        : 'Embed',\\n  namespace   : 'embed',\\n\\n  silent      : false,\\n  debug       : false,\\n  verbose     : false,\\n  performance : true,\\n\\n  icon     : false,\\n  source   : false,\\n  url      : false,\\n  id       : false,\\n\\n  // standard video settings\\n  autoplay  : 'auto',\\n  color     : '#444444',\\n  hd        : true,\\n  brandedUI : false,\\n\\n  // additional parameters to include with the embed\\n  parameters: false,\\n\\n  onDisplay            : function() {},\\n  onPlaceholderDisplay : function() {},\\n  onReset              : function() {},\\n  onCreate             : function(url) {},\\n  onEmbed              : function(parameters) {\\n    return parameters;\\n  },\\n\\n  metadata    : {\\n    id          : 'id',\\n    icon        : 'icon',\\n    placeholder : 'placeholder',\\n    source      : 'source',\\n    url         : 'url'\\n  },\\n\\n  error : {\\n    noURL  : 'No URL specified',\\n    method : 'The method you called is not defined'\\n  },\\n\\n  className : {\\n    active : 'active',\\n    embed  : 'embed'\\n  },\\n\\n  selector : {\\n    embed       : '.embed',\\n    placeholder : '.placeholder',\\n    icon        : '.icon'\\n  },\\n\\n  sources: {\\n    youtube: {\\n      name   : 'youtube',\\n      type   : 'video',\\n      icon   : 'video play',\\n      domain : 'youtube.com',\\n      url    : '//www.youtube.com/embed/{id}',\\n      parameters: function(settings) {\\n        return {\\n          autohide       : !settings.brandedUI,\\n          autoplay       : settings.autoplay,\\n          color          : settings.color || undefined,\\n          hq             : settings.hd,\\n          jsapi          : settings.api,\\n          modestbranding : !settings.brandedUI\\n        };\\n      }\\n    },\\n    vimeo: {\\n      name   : 'vimeo',\\n      type   : 'video',\\n      icon   : 'video play',\\n      domain : 'vimeo.com',\\n      url    : '//player.vimeo.com/video/{id}',\\n      parameters: function(settings) {\\n        return {\\n          api      : settings.api,\\n          autoplay : settings.autoplay,\\n          byline   : settings.brandedUI,\\n          color    : settings.color || undefined,\\n          portrait : settings.brandedUI,\\n          title    : settings.brandedUI\\n        };\\n      }\\n    }\\n  },\\n\\n  templates: {\\n    iframe : function(url, parameters) {\\n      var src = url;\\n      if (parameters) {\\n          src += '?' + parameters;\\n      }\\n      return ''\\n        + '<iframe src=\\\"' + src + '\\\"'\\n        + ' width=\\\"100%\\\" height=\\\"100%\\\"'\\n        + ' frameborder=\\\"0\\\" scrolling=\\\"no\\\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\\n      ;\\n    },\\n    placeholder : function(image, icon) {\\n      var\\n        html = ''\\n      ;\\n      if(icon) {\\n        html += '<i class=\\\"' + icon + ' icon\\\"></i>';\\n      }\\n      if(image) {\\n        html += '<img class=\\\"placeholder\\\" src=\\\"' + image + '\\\">';\\n      }\\n      return html;\\n    }\\n  },\\n\\n  // NOT YET IMPLEMENTED\\n  api     : false,\\n  onPause : function() {},\\n  onPlay  : function() {},\\n  onStop  : function() {}\\n\\n};\\n\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Modal\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.modal = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n    $window        = $(window),\\n    $document      = $(document),\\n    $body          = $('body'),\\n\\n    moduleSelector = $allModules.selector || '',\\n\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n\\n    requestAnimationFrame = window.requestAnimationFrame\\n      || window.mozRequestAnimationFrame\\n      || window.webkitRequestAnimationFrame\\n      || window.msRequestAnimationFrame\\n      || function(callback) { setTimeout(callback, 0); },\\n\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings    = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.modal.settings, parameters)\\n          : $.extend({}, $.fn.modal.settings),\\n\\n        selector        = settings.selector,\\n        className       = settings.className,\\n        namespace       = settings.namespace,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        $module         = $(this),\\n        $context        = $(settings.context),\\n        $close          = $module.find(selector.close),\\n\\n        $allModals,\\n        $otherModals,\\n        $focusedElement,\\n        $dimmable,\\n        $dimmer,\\n\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        elementEventNamespace,\\n        id,\\n        observer,\\n        module\\n      ;\\n      module  = {\\n\\n        initialize: function() {\\n          module.verbose('Initializing dimmer', $context);\\n\\n          module.create.id();\\n          module.create.dimmer();\\n          module.refreshModals();\\n\\n          module.bind.events();\\n          if(settings.observeChanges) {\\n            module.observeChanges();\\n          }\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of modal');\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, instance)\\n          ;\\n        },\\n\\n        create: {\\n          dimmer: function() {\\n            var\\n              defaultSettings = {\\n                debug      : settings.debug,\\n                dimmerName : 'modals',\\n                duration   : {\\n                  show     : settings.duration,\\n                  hide     : settings.duration\\n                }\\n              },\\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\\n            ;\\n            if(settings.inverted) {\\n              dimmerSettings.variation = (dimmerSettings.variation !== undefined)\\n                ? dimmerSettings.variation + ' inverted'\\n                : 'inverted'\\n              ;\\n            }\\n            if($.fn.dimmer === undefined) {\\n              module.error(error.dimmer);\\n              return;\\n            }\\n            module.debug('Creating dimmer with settings', dimmerSettings);\\n            $dimmable = $context.dimmer(dimmerSettings);\\n            if(settings.detachable) {\\n              module.verbose('Modal is detachable, moving content into dimmer');\\n              $dimmable.dimmer('add content', $module);\\n            }\\n            else {\\n              module.set.undetached();\\n            }\\n            if(settings.blurring) {\\n              $dimmable.addClass(className.blurring);\\n            }\\n            $dimmer = $dimmable.dimmer('get dimmer');\\n          },\\n          id: function() {\\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\\n            elementEventNamespace = '.' + id;\\n            module.verbose('Creating unique id for element', id);\\n          }\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous modal');\\n          $module\\n            .removeData(moduleNamespace)\\n            .off(eventNamespace)\\n          ;\\n          $window.off(elementEventNamespace);\\n          $dimmer.off(elementEventNamespace);\\n          $close.off(eventNamespace);\\n          $context.dimmer('destroy');\\n        },\\n\\n        observeChanges: function() {\\n          if('MutationObserver' in window) {\\n            observer = new MutationObserver(function(mutations) {\\n              module.debug('DOM tree modified, refreshing');\\n              module.refresh();\\n            });\\n            observer.observe(element, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            module.debug('Setting up mutation observer', observer);\\n          }\\n        },\\n\\n        refresh: function() {\\n          module.remove.scrolling();\\n          module.cacheSizes();\\n          module.set.screenHeight();\\n          module.set.type();\\n          module.set.position();\\n        },\\n\\n        refreshModals: function() {\\n          $otherModals = $module.siblings(selector.modal);\\n          $allModals   = $otherModals.add($module);\\n        },\\n\\n        attachEvents: function(selector, event) {\\n          var\\n            $toggle = $(selector)\\n          ;\\n          event = $.isFunction(module[event])\\n            ? module[event]\\n            : module.toggle\\n          ;\\n          if($toggle.length > 0) {\\n            module.debug('Attaching modal events to element', selector, event);\\n            $toggle\\n              .off(eventNamespace)\\n              .on('click' + eventNamespace, event)\\n            ;\\n          }\\n          else {\\n            module.error(error.notFound, selector);\\n          }\\n        },\\n\\n        bind: {\\n          events: function() {\\n            module.verbose('Attaching events');\\n            $module\\n              .on('click' + eventNamespace, selector.close, module.event.close)\\n              .on('click' + eventNamespace, selector.approve, module.event.approve)\\n              .on('click' + eventNamespace, selector.deny, module.event.deny)\\n            ;\\n            $window\\n              .on('resize' + elementEventNamespace, module.event.resize)\\n            ;\\n          }\\n        },\\n\\n        get: {\\n          id: function() {\\n            return (Math.random().toString(16) + '000000000').substr(2,8);\\n          }\\n        },\\n\\n        event: {\\n          approve: function() {\\n            if(settings.onApprove.call(element, $(this)) === false) {\\n              module.verbose('Approve callback returned false cancelling hide');\\n              return;\\n            }\\n            module.hide();\\n          },\\n          deny: function() {\\n            if(settings.onDeny.call(element, $(this)) === false) {\\n              module.verbose('Deny callback returned false cancelling hide');\\n              return;\\n            }\\n            module.hide();\\n          },\\n          close: function() {\\n            module.hide();\\n          },\\n          click: function(event) {\\n            var\\n              $target   = $(event.target),\\n              isInModal = ($target.closest(selector.modal).length > 0),\\n              isInDOM   = $.contains(document.documentElement, event.target)\\n            ;\\n            if(!isInModal && isInDOM) {\\n              module.debug('Dimmer clicked, hiding all modals');\\n              if( module.is.active() ) {\\n                module.remove.clickaway();\\n                if(settings.allowMultiple) {\\n                  module.hide();\\n                }\\n                else {\\n                  module.hideAll();\\n                }\\n              }\\n            }\\n          },\\n          debounce: function(method, delay) {\\n            clearTimeout(module.timer);\\n            module.timer = setTimeout(method, delay);\\n          },\\n          keyboard: function(event) {\\n            var\\n              keyCode   = event.which,\\n              escapeKey = 27\\n            ;\\n            if(keyCode == escapeKey) {\\n              if(settings.closable) {\\n                module.debug('Escape key pressed hiding modal');\\n                module.hide();\\n              }\\n              else {\\n                module.debug('Escape key pressed, but closable is set to false');\\n              }\\n              event.preventDefault();\\n            }\\n          },\\n          resize: function() {\\n            if( $dimmable.dimmer('is active') ) {\\n              requestAnimationFrame(module.refresh);\\n            }\\n          }\\n        },\\n\\n        toggle: function() {\\n          if( module.is.active() || module.is.animating() ) {\\n            module.hide();\\n          }\\n          else {\\n            module.show();\\n          }\\n        },\\n\\n        show: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          module.refreshModals();\\n          module.showModal(callback);\\n        },\\n\\n        hide: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          module.refreshModals();\\n          module.hideModal(callback);\\n        },\\n\\n        showModal: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if( module.is.animating() || !module.is.active() ) {\\n\\n            module.showDimmer();\\n            module.cacheSizes();\\n            module.set.position();\\n            module.set.screenHeight();\\n            module.set.type();\\n            module.set.clickaway();\\n\\n            if( !settings.allowMultiple && module.others.active() ) {\\n              module.hideOthers(module.showModal);\\n            }\\n            else {\\n              settings.onShow.call(element);\\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\\n                module.debug('Showing modal with css animations');\\n                $module\\n                  .transition({\\n                    debug       : settings.debug,\\n                    animation   : settings.transition + ' in',\\n                    queue       : settings.queue,\\n                    duration    : settings.duration,\\n                    useFailSafe : true,\\n                    onComplete : function() {\\n                      settings.onVisible.apply(element);\\n                      if(settings.keyboardShortcuts) {\\n                        module.add.keyboardShortcuts();\\n                      }\\n                      module.save.focus();\\n                      module.set.active();\\n                      if(settings.autofocus) {\\n                        module.set.autofocus();\\n                      }\\n                      callback();\\n                    }\\n                  })\\n                ;\\n              }\\n              else {\\n                module.error(error.noTransition);\\n              }\\n            }\\n          }\\n          else {\\n            module.debug('Modal is already visible');\\n          }\\n        },\\n\\n        hideModal: function(callback, keepDimmed) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          module.debug('Hiding modal');\\n          if(settings.onHide.call(element, $(this)) === false) {\\n            module.verbose('Hide callback returned false cancelling hide');\\n            return;\\n          }\\n\\n          if( module.is.animating() || module.is.active() ) {\\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\\n              module.remove.active();\\n              $module\\n                .transition({\\n                  debug       : settings.debug,\\n                  animation   : settings.transition + ' out',\\n                  queue       : settings.queue,\\n                  duration    : settings.duration,\\n                  useFailSafe : true,\\n                  onStart     : function() {\\n                    if(!module.others.active() && !keepDimmed) {\\n                      module.hideDimmer();\\n                    }\\n                    if(settings.keyboardShortcuts) {\\n                      module.remove.keyboardShortcuts();\\n                    }\\n                  },\\n                  onComplete : function() {\\n                    settings.onHidden.call(element);\\n                    module.restore.focus();\\n                    callback();\\n                  }\\n                })\\n              ;\\n            }\\n            else {\\n              module.error(error.noTransition);\\n            }\\n          }\\n        },\\n\\n        showDimmer: function() {\\n          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {\\n            module.debug('Showing dimmer');\\n            $dimmable.dimmer('show');\\n          }\\n          else {\\n            module.debug('Dimmer already visible');\\n          }\\n        },\\n\\n        hideDimmer: function() {\\n          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {\\n            $dimmable.dimmer('hide', function() {\\n              module.remove.clickaway();\\n              module.remove.screenHeight();\\n            });\\n          }\\n          else {\\n            module.debug('Dimmer is not visible cannot hide');\\n            return;\\n          }\\n        },\\n\\n        hideAll: function(callback) {\\n          var\\n            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)\\n          ;\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if( $visibleModals.length > 0 ) {\\n            module.debug('Hiding all visible modals');\\n            module.hideDimmer();\\n            $visibleModals\\n              .modal('hide modal', callback)\\n            ;\\n          }\\n        },\\n\\n        hideOthers: function(callback) {\\n          var\\n            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)\\n          ;\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if( $visibleModals.length > 0 ) {\\n            module.debug('Hiding other modals', $otherModals);\\n            $visibleModals\\n              .modal('hide modal', callback, true)\\n            ;\\n          }\\n        },\\n\\n        others: {\\n          active: function() {\\n            return ($otherModals.filter('.' + className.active).length > 0);\\n          },\\n          animating: function() {\\n            return ($otherModals.filter('.' + className.animating).length > 0);\\n          }\\n        },\\n\\n\\n        add: {\\n          keyboardShortcuts: function() {\\n            module.verbose('Adding keyboard shortcuts');\\n            $document\\n              .on('keyup' + eventNamespace, module.event.keyboard)\\n            ;\\n          }\\n        },\\n\\n        save: {\\n          focus: function() {\\n            $focusedElement = $(document.activeElement).blur();\\n          }\\n        },\\n\\n        restore: {\\n          focus: function() {\\n            if($focusedElement && $focusedElement.length > 0) {\\n              $focusedElement.focus();\\n            }\\n          }\\n        },\\n\\n        remove: {\\n          active: function() {\\n            $module.removeClass(className.active);\\n          },\\n          clickaway: function() {\\n            if(settings.closable) {\\n              $dimmer\\n                .off('click' + elementEventNamespace)\\n              ;\\n            }\\n          },\\n          bodyStyle: function() {\\n            if($body.attr('style') === '') {\\n              module.verbose('Removing style attribute');\\n              $body.removeAttr('style');\\n            }\\n          },\\n          screenHeight: function() {\\n            module.debug('Removing page height');\\n            $body\\n              .css('height', '')\\n            ;\\n          },\\n          keyboardShortcuts: function() {\\n            module.verbose('Removing keyboard shortcuts');\\n            $document\\n              .off('keyup' + eventNamespace)\\n            ;\\n          },\\n          scrolling: function() {\\n            $dimmable.removeClass(className.scrolling);\\n            $module.removeClass(className.scrolling);\\n          }\\n        },\\n\\n        cacheSizes: function() {\\n          var\\n            modalHeight = $module.outerHeight()\\n          ;\\n          if(module.cache === undefined || modalHeight !== 0) {\\n            module.cache = {\\n              pageHeight    : $(document).outerHeight(),\\n              height        : modalHeight + settings.offset,\\n              contextHeight : (settings.context == 'body')\\n                ? $(window).height()\\n                : $dimmable.height()\\n            };\\n          }\\n          module.debug('Caching modal and container sizes', module.cache);\\n        },\\n\\n        can: {\\n          fit: function() {\\n            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);\\n          }\\n        },\\n\\n        is: {\\n          active: function() {\\n            return $module.hasClass(className.active);\\n          },\\n          animating: function() {\\n            return $module.transition('is supported')\\n              ? $module.transition('is animating')\\n              : $module.is(':visible')\\n            ;\\n          },\\n          scrolling: function() {\\n            return $dimmable.hasClass(className.scrolling);\\n          },\\n          modernBrowser: function() {\\n            // appName for IE11 reports 'Netscape' can no longer use\\n            return !(window.ActiveXObject || \\\"ActiveXObject\\\" in window);\\n          }\\n        },\\n\\n        set: {\\n          autofocus: function() {\\n            var\\n              $inputs    = $module.find('[tabindex], :input').filter(':visible'),\\n              $autofocus = $inputs.filter('[autofocus]'),\\n              $input     = ($autofocus.length > 0)\\n                ? $autofocus.first()\\n                : $inputs.first()\\n            ;\\n            if($input.length > 0) {\\n              $input.focus();\\n            }\\n          },\\n          clickaway: function() {\\n            if(settings.closable) {\\n              $dimmer\\n                .on('click' + elementEventNamespace, module.event.click)\\n              ;\\n            }\\n          },\\n          screenHeight: function() {\\n            if( module.can.fit() ) {\\n              $body.css('height', '');\\n            }\\n            else {\\n              module.debug('Modal is taller than page content, resizing page height');\\n              $body\\n                .css('height', module.cache.height + (settings.padding * 2) )\\n              ;\\n            }\\n          },\\n          active: function() {\\n            $module.addClass(className.active);\\n          },\\n          scrolling: function() {\\n            $dimmable.addClass(className.scrolling);\\n            $module.addClass(className.scrolling);\\n          },\\n          type: function() {\\n            if(module.can.fit()) {\\n              module.verbose('Modal fits on screen');\\n              if(!module.others.active() && !module.others.animating()) {\\n                module.remove.scrolling();\\n              }\\n            }\\n            else {\\n              module.verbose('Modal cannot fit on screen setting to scrolling');\\n              module.set.scrolling();\\n            }\\n          },\\n          position: function() {\\n            module.verbose('Centering modal on page', module.cache);\\n            if(module.can.fit()) {\\n              $module\\n                .css({\\n                  top: '',\\n                  marginTop: -(module.cache.height / 2)\\n                })\\n              ;\\n            }\\n            else {\\n              $module\\n                .css({\\n                  marginTop : '',\\n                  top       : $document.scrollTop()\\n                })\\n              ;\\n            }\\n          },\\n          undetached: function() {\\n            $dimmable.addClass(className.undetached);\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.modal.settings = {\\n\\n  name           : 'Modal',\\n  namespace      : 'modal',\\n\\n  silent         : false,\\n  debug          : false,\\n  verbose        : false,\\n  performance    : true,\\n\\n  observeChanges : false,\\n\\n  allowMultiple  : false,\\n  detachable     : true,\\n  closable       : true,\\n  autofocus      : true,\\n\\n  inverted       : false,\\n  blurring       : false,\\n\\n  dimmerSettings : {\\n    closable : false,\\n    useCSS   : true\\n  },\\n\\n  // whether to use keyboard shortcuts\\n  keyboardShortcuts: true,\\n\\n  context    : 'body',\\n\\n  queue      : false,\\n  duration   : 500,\\n  offset     : 0,\\n  transition : 'scale',\\n\\n  // padding with edge of page\\n  padding    : 50,\\n\\n  // called before show animation\\n  onShow     : function(){},\\n\\n  // called after show animation\\n  onVisible  : function(){},\\n\\n  // called before hide animation\\n  onHide     : function(){ return true; },\\n\\n  // called after hide animation\\n  onHidden   : function(){},\\n\\n  // called after approve selector match\\n  onApprove  : function(){ return true; },\\n\\n  // called after deny selector match\\n  onDeny     : function(){ return true; },\\n\\n  selector    : {\\n    close    : '> .close',\\n    approve  : '.actions .positive, .actions .approve, .actions .ok',\\n    deny     : '.actions .negative, .actions .deny, .actions .cancel',\\n    modal    : '.ui.modal'\\n  },\\n  error : {\\n    dimmer    : 'UI Dimmer, a required component is not included in this page',\\n    method    : 'The method you called is not defined.',\\n    notFound  : 'The element you specified could not be found'\\n  },\\n  className : {\\n    active     : 'active',\\n    animating  : 'animating',\\n    blurring   : 'blurring',\\n    scrolling  : 'scrolling',\\n    undetached : 'undetached'\\n  }\\n};\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Nag\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.nag = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n    moduleSelector = $allModules.selector || '',\\n\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n    returnedValue\\n  ;\\n  $allModules\\n    .each(function() {\\n      var\\n        settings          = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.nag.settings, parameters)\\n          : $.extend({}, $.fn.nag.settings),\\n\\n        className       = settings.className,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n        namespace       = settings.namespace,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = namespace + '-module',\\n\\n        $module         = $(this),\\n\\n        $close          = $module.find(selector.close),\\n        $context        = (settings.context)\\n          ? $(settings.context)\\n          : $('body'),\\n\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        moduleOffset,\\n        moduleHeight,\\n\\n        contextWidth,\\n        contextHeight,\\n        contextOffset,\\n\\n        yOffset,\\n        yPosition,\\n\\n        timer,\\n        module,\\n\\n        requestAnimationFrame = window.requestAnimationFrame\\n          || window.mozRequestAnimationFrame\\n          || window.webkitRequestAnimationFrame\\n          || window.msRequestAnimationFrame\\n          || function(callback) { setTimeout(callback, 0); }\\n      ;\\n      module = {\\n\\n        initialize: function() {\\n          module.verbose('Initializing element');\\n\\n          $module\\n            .on('click' + eventNamespace, selector.close, module.dismiss)\\n            .data(moduleNamespace, module)\\n          ;\\n\\n          if(settings.detachable && $module.parent()[0] !== $context[0]) {\\n            $module\\n              .detach()\\n              .prependTo($context)\\n            ;\\n          }\\n\\n          if(settings.displayTime > 0) {\\n            setTimeout(module.hide, settings.displayTime);\\n          }\\n          module.show();\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying instance');\\n          $module\\n            .removeData(moduleNamespace)\\n            .off(eventNamespace)\\n          ;\\n        },\\n\\n        show: function() {\\n          if( module.should.show() && !$module.is(':visible') ) {\\n            module.debug('Showing nag', settings.animation.show);\\n            if(settings.animation.show == 'fade') {\\n              $module\\n                .fadeIn(settings.duration, settings.easing)\\n              ;\\n            }\\n            else {\\n              $module\\n                .slideDown(settings.duration, settings.easing)\\n              ;\\n            }\\n          }\\n        },\\n\\n        hide: function() {\\n          module.debug('Showing nag', settings.animation.hide);\\n          if(settings.animation.show == 'fade') {\\n            $module\\n              .fadeIn(settings.duration, settings.easing)\\n            ;\\n          }\\n          else {\\n            $module\\n              .slideUp(settings.duration, settings.easing)\\n            ;\\n          }\\n        },\\n\\n        onHide: function() {\\n          module.debug('Removing nag', settings.animation.hide);\\n          $module.remove();\\n          if (settings.onHide) {\\n            settings.onHide();\\n          }\\n        },\\n\\n        dismiss: function(event) {\\n          if(settings.storageMethod) {\\n            module.storage.set(settings.key, settings.value);\\n          }\\n          module.hide();\\n          event.stopImmediatePropagation();\\n          event.preventDefault();\\n        },\\n\\n        should: {\\n          show: function() {\\n            if(settings.persist) {\\n              module.debug('Persistent nag is set, can show nag');\\n              return true;\\n            }\\n            if( module.storage.get(settings.key) != settings.value.toString() ) {\\n              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));\\n              return true;\\n            }\\n            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));\\n            return false;\\n          }\\n        },\\n\\n        get: {\\n          storageOptions: function() {\\n            var\\n              options = {}\\n            ;\\n            if(settings.expires) {\\n              options.expires = settings.expires;\\n            }\\n            if(settings.domain) {\\n              options.domain = settings.domain;\\n            }\\n            if(settings.path) {\\n              options.path = settings.path;\\n            }\\n            return options;\\n          }\\n        },\\n\\n        clear: function() {\\n          module.storage.remove(settings.key);\\n        },\\n\\n        storage: {\\n          set: function(key, value) {\\n            var\\n              options = module.get.storageOptions()\\n            ;\\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\\n              window.localStorage.setItem(key, value);\\n              module.debug('Value stored using local storage', key, value);\\n            }\\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\\n              window.sessionStorage.setItem(key, value);\\n              module.debug('Value stored using session storage', key, value);\\n            }\\n            else if($.cookie !== undefined) {\\n              $.cookie(key, value, options);\\n              module.debug('Value stored using cookie', key, value, options);\\n            }\\n            else {\\n              module.error(error.noCookieStorage);\\n              return;\\n            }\\n          },\\n          get: function(key, value) {\\n            var\\n              storedValue\\n            ;\\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\\n              storedValue = window.localStorage.getItem(key);\\n            }\\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\\n              storedValue = window.sessionStorage.getItem(key);\\n            }\\n            // get by cookie\\n            else if($.cookie !== undefined) {\\n              storedValue = $.cookie(key);\\n            }\\n            else {\\n              module.error(error.noCookieStorage);\\n            }\\n            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\\n              storedValue = undefined;\\n            }\\n            return storedValue;\\n          },\\n          remove: function(key) {\\n            var\\n              options = module.get.storageOptions()\\n            ;\\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\\n              window.localStorage.removeItem(key);\\n            }\\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\\n              window.sessionStorage.removeItem(key);\\n            }\\n            // store by cookie\\n            else if($.cookie !== undefined) {\\n              $.removeCookie(key, options);\\n            }\\n            else {\\n              module.error(error.noStorage);\\n            }\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.nag.settings = {\\n\\n  name        : 'Nag',\\n\\n  silent      : false,\\n  debug       : false,\\n  verbose     : false,\\n  performance : true,\\n\\n  namespace   : 'Nag',\\n\\n  // allows cookie to be overridden\\n  persist     : false,\\n\\n  // set to zero to require manually dismissal, otherwise hides on its own\\n  displayTime : 0,\\n\\n  animation   : {\\n    show : 'slide',\\n    hide : 'slide'\\n  },\\n\\n  context       : false,\\n  detachable    : false,\\n\\n  expires       : 30,\\n  domain        : false,\\n  path          : '/',\\n\\n  // type of storage to use\\n  storageMethod : 'cookie',\\n\\n  // value to store in dismissed localstorage/cookie\\n  key           : 'nag',\\n  value         : 'dismiss',\\n\\n  error: {\\n    noCookieStorage : '$.cookie is not included. A storage solution is required.',\\n    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\\n    method          : 'The method you called is not defined.'\\n  },\\n\\n  className     : {\\n    bottom : 'bottom',\\n    fixed  : 'fixed'\\n  },\\n\\n  selector      : {\\n    close : '.close.icon'\\n  },\\n\\n  speed         : 500,\\n  easing        : 'easeOutQuad',\\n\\n  onHide: function() {}\\n\\n};\\n\\n// Adds easing\\n$.extend( $.easing, {\\n  easeOutQuad: function (x, t, b, c, d) {\\n    return -c *(t/=d)*(t-2) + b;\\n  }\\n});\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Popup\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.popup = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n    $document      = $(document),\\n    $window        = $(window),\\n    $body          = $('body'),\\n\\n    moduleSelector = $allModules.selector || '',\\n\\n    hasTouch       = (true),\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n\\n    returnedValue\\n  ;\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.popup.settings, parameters)\\n          : $.extend({}, $.fn.popup.settings),\\n\\n        selector           = settings.selector,\\n        className          = settings.className,\\n        error              = settings.error,\\n        metadata           = settings.metadata,\\n        namespace          = settings.namespace,\\n\\n        eventNamespace     = '.' + settings.namespace,\\n        moduleNamespace    = 'module-' + namespace,\\n\\n        $module            = $(this),\\n        $context           = $(settings.context),\\n        $scrollContext     = $(settings.scrollContext),\\n        $boundary          = $(settings.boundary),\\n        $target            = (settings.target)\\n          ? $(settings.target)\\n          : $module,\\n\\n        $popup,\\n        $offsetParent,\\n\\n        searchDepth        = 0,\\n        triedPositions     = false,\\n        openedWithTouch    = false,\\n\\n        element            = this,\\n        instance           = $module.data(moduleNamespace),\\n\\n        documentObserver,\\n        elementNamespace,\\n        id,\\n        module\\n      ;\\n\\n      module = {\\n\\n        // binds events\\n        initialize: function() {\\n          module.debug('Initializing', $module);\\n          module.createID();\\n          module.bind.events();\\n          if(!module.exists() && settings.preserve) {\\n            module.create();\\n          }\\n          if(settings.observeChanges) {\\n            module.observeChanges();\\n          }\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, instance)\\n          ;\\n        },\\n\\n        observeChanges: function() {\\n          if('MutationObserver' in window) {\\n            documentObserver = new MutationObserver(module.event.documentChanged);\\n            documentObserver.observe(document, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            module.debug('Setting up mutation observer', documentObserver);\\n          }\\n        },\\n\\n        refresh: function() {\\n          if(settings.popup) {\\n            $popup = $(settings.popup).eq(0);\\n          }\\n          else {\\n            if(settings.inline) {\\n              $popup = $target.nextAll(selector.popup).eq(0);\\n              settings.popup = $popup;\\n            }\\n          }\\n          if(settings.popup) {\\n            $popup.addClass(className.loading);\\n            $offsetParent = module.get.offsetParent();\\n            $popup.removeClass(className.loading);\\n            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {\\n              module.debug('Moving popup to the same offset parent as activating element');\\n              $popup\\n                .detach()\\n                .appendTo($offsetParent)\\n              ;\\n            }\\n          }\\n          else {\\n            $offsetParent = (settings.inline)\\n              ? module.get.offsetParent($target)\\n              : module.has.popup()\\n                ? module.get.offsetParent($popup)\\n                : $body\\n            ;\\n          }\\n          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {\\n            module.debug('Setting page as offset parent');\\n            $offsetParent = $body;\\n          }\\n          if( module.get.variation() ) {\\n            module.set.variation();\\n          }\\n        },\\n\\n        reposition: function() {\\n          module.refresh();\\n          module.set.position();\\n        },\\n\\n        destroy: function() {\\n          module.debug('Destroying previous module');\\n          if(documentObserver) {\\n            documentObserver.disconnect();\\n          }\\n          // remove element only if was created dynamically\\n          if($popup && !settings.preserve) {\\n            module.removePopup();\\n          }\\n          // clear all timeouts\\n          clearTimeout(module.hideTimer);\\n          clearTimeout(module.showTimer);\\n          // remove events\\n          module.unbind.close();\\n          module.unbind.events();\\n          $module\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        event: {\\n          start:  function(event) {\\n            var\\n              delay = ($.isPlainObject(settings.delay))\\n                ? settings.delay.show\\n                : settings.delay\\n            ;\\n            clearTimeout(module.hideTimer);\\n            if(!openedWithTouch) {\\n              module.showTimer = setTimeout(module.show, delay);\\n            }\\n          },\\n          end:  function() {\\n            var\\n              delay = ($.isPlainObject(settings.delay))\\n                ? settings.delay.hide\\n                : settings.delay\\n            ;\\n            clearTimeout(module.showTimer);\\n            module.hideTimer = setTimeout(module.hide, delay);\\n          },\\n          touchstart: function(event) {\\n            openedWithTouch = true;\\n            module.show();\\n          },\\n          resize: function() {\\n            if( module.is.visible() ) {\\n              module.set.position();\\n            }\\n          },\\n          documentChanged: function(mutations) {\\n            [].forEach.call(mutations, function(mutation) {\\n              if(mutation.removedNodes) {\\n                [].forEach.call(mutation.removedNodes, function(node) {\\n                  if(node == element || $(node).find(element).length > 0) {\\n                    module.debug('Element removed from DOM, tearing down events');\\n                    module.destroy();\\n                  }\\n                });\\n              }\\n            });\\n          },\\n          hideGracefully: function(event) {\\n            var\\n              $target = $(event.target),\\n              isInDOM = $.contains(document.documentElement, event.target),\\n              inPopup = ($target.closest(selector.popup).length > 0)\\n            ;\\n            // don't close on clicks inside popup\\n            if(event && !inPopup && isInDOM) {\\n              module.debug('Click occurred outside popup hiding popup');\\n              module.hide();\\n            }\\n            else {\\n              module.debug('Click was inside popup, keeping popup open');\\n            }\\n          }\\n        },\\n\\n        // generates popup html from metadata\\n        create: function() {\\n          var\\n            html      = module.get.html(),\\n            title     = module.get.title(),\\n            content   = module.get.content()\\n          ;\\n\\n          if(html || content || title) {\\n            module.debug('Creating pop-up html');\\n            if(!html) {\\n              html = settings.templates.popup({\\n                title   : title,\\n                content : content\\n              });\\n            }\\n            $popup = $('<div/>')\\n              .addClass(className.popup)\\n              .data(metadata.activator, $module)\\n              .html(html)\\n            ;\\n            if(settings.inline) {\\n              module.verbose('Inserting popup element inline', $popup);\\n              $popup\\n                .insertAfter($module)\\n              ;\\n            }\\n            else {\\n              module.verbose('Appending popup element to body', $popup);\\n              $popup\\n                .appendTo( $context )\\n              ;\\n            }\\n            module.refresh();\\n            module.set.variation();\\n\\n            if(settings.hoverable) {\\n              module.bind.popup();\\n            }\\n            settings.onCreate.call($popup, element);\\n          }\\n          else if($target.next(selector.popup).length !== 0) {\\n            module.verbose('Pre-existing popup found');\\n            settings.inline = true;\\n            settings.popup  = $target.next(selector.popup).data(metadata.activator, $module);\\n            module.refresh();\\n            if(settings.hoverable) {\\n              module.bind.popup();\\n            }\\n          }\\n          else if(settings.popup) {\\n            $(settings.popup).data(metadata.activator, $module);\\n            module.verbose('Used popup specified in settings');\\n            module.refresh();\\n            if(settings.hoverable) {\\n              module.bind.popup();\\n            }\\n          }\\n          else {\\n            module.debug('No content specified skipping display', element);\\n          }\\n        },\\n\\n        createID: function() {\\n          id = (Math.random().toString(16) + '000000000').substr(2, 8);\\n          elementNamespace = '.' + id;\\n          module.verbose('Creating unique id for element', id);\\n        },\\n\\n        // determines popup state\\n        toggle: function() {\\n          module.debug('Toggling pop-up');\\n          if( module.is.hidden() ) {\\n            module.debug('Popup is hidden, showing pop-up');\\n            module.unbind.close();\\n            module.show();\\n          }\\n          else {\\n            module.debug('Popup is visible, hiding pop-up');\\n            module.hide();\\n          }\\n        },\\n\\n        show: function(callback) {\\n          callback = callback || function(){};\\n          module.debug('Showing pop-up', settings.transition);\\n          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {\\n            if( !module.exists() ) {\\n              module.create();\\n            }\\n            if(settings.onShow.call($popup, element) === false) {\\n              module.debug('onShow callback returned false, cancelling popup animation');\\n              return;\\n            }\\n            else if(!settings.preserve && !settings.popup) {\\n              module.refresh();\\n            }\\n            if( $popup && module.set.position() ) {\\n              module.save.conditions();\\n              if(settings.exclusive) {\\n                module.hideAll();\\n              }\\n              module.animate.show(callback);\\n            }\\n          }\\n        },\\n\\n\\n        hide: function(callback) {\\n          callback = callback || function(){};\\n          if( module.is.visible() || module.is.animating() ) {\\n            if(settings.onHide.call($popup, element) === false) {\\n              module.debug('onHide callback returned false, cancelling popup animation');\\n              return;\\n            }\\n            module.remove.visible();\\n            module.unbind.close();\\n            module.restore.conditions();\\n            module.animate.hide(callback);\\n          }\\n        },\\n\\n        hideAll: function() {\\n          $(selector.popup)\\n            .filter('.' + className.visible)\\n            .each(function() {\\n              $(this)\\n                .data(metadata.activator)\\n                  .popup('hide')\\n              ;\\n            })\\n          ;\\n        },\\n        exists: function() {\\n          if(!$popup) {\\n            return false;\\n          }\\n          if(settings.inline || settings.popup) {\\n            return ( module.has.popup() );\\n          }\\n          else {\\n            return ( $popup.closest($context).length >= 1 )\\n              ? true\\n              : false\\n            ;\\n          }\\n        },\\n\\n        removePopup: function() {\\n          if( module.has.popup() && !settings.popup) {\\n            module.debug('Removing popup', $popup);\\n            $popup.remove();\\n            $popup = undefined;\\n            settings.onRemove.call($popup, element);\\n          }\\n        },\\n\\n        save: {\\n          conditions: function() {\\n            module.cache = {\\n              title: $module.attr('title')\\n            };\\n            if (module.cache.title) {\\n              $module.removeAttr('title');\\n            }\\n            module.verbose('Saving original attributes', module.cache.title);\\n          }\\n        },\\n        restore: {\\n          conditions: function() {\\n            if(module.cache && module.cache.title) {\\n              $module.attr('title', module.cache.title);\\n              module.verbose('Restoring original attributes', module.cache.title);\\n            }\\n            return true;\\n          }\\n        },\\n        supports: {\\n          svg: function() {\\n            return (typeof SVGGraphicsElement === undefined);\\n          }\\n        },\\n        animate: {\\n          show: function(callback) {\\n            callback = $.isFunction(callback) ? callback : function(){};\\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\\n              module.set.visible();\\n              $popup\\n                .transition({\\n                  animation  : settings.transition + ' in',\\n                  queue      : false,\\n                  debug      : settings.debug,\\n                  verbose    : settings.verbose,\\n                  duration   : settings.duration,\\n                  onComplete : function() {\\n                    module.bind.close();\\n                    callback.call($popup, element);\\n                    settings.onVisible.call($popup, element);\\n                  }\\n                })\\n              ;\\n            }\\n            else {\\n              module.error(error.noTransition);\\n            }\\n          },\\n          hide: function(callback) {\\n            callback = $.isFunction(callback) ? callback : function(){};\\n            module.debug('Hiding pop-up');\\n            if(settings.onHide.call($popup, element) === false) {\\n              module.debug('onHide callback returned false, cancelling popup animation');\\n              return;\\n            }\\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\\n              $popup\\n                .transition({\\n                  animation  : settings.transition + ' out',\\n                  queue      : false,\\n                  duration   : settings.duration,\\n                  debug      : settings.debug,\\n                  verbose    : settings.verbose,\\n                  onComplete : function() {\\n                    module.reset();\\n                    callback.call($popup, element);\\n                    settings.onHidden.call($popup, element);\\n                  }\\n                })\\n              ;\\n            }\\n            else {\\n              module.error(error.noTransition);\\n            }\\n          }\\n        },\\n\\n        change: {\\n          content: function(html) {\\n            $popup.html(html);\\n          }\\n        },\\n\\n        get: {\\n          html: function() {\\n            $module.removeData(metadata.html);\\n            return $module.data(metadata.html) || settings.html;\\n          },\\n          title: function() {\\n            $module.removeData(metadata.title);\\n            return $module.data(metadata.title) || settings.title;\\n          },\\n          content: function() {\\n            $module.removeData(metadata.content);\\n            return $module.data(metadata.content) || $module.attr('title') || settings.content;\\n          },\\n          variation: function() {\\n            $module.removeData(metadata.variation);\\n            return $module.data(metadata.variation) || settings.variation;\\n          },\\n          popup: function() {\\n            return $popup;\\n          },\\n          popupOffset: function() {\\n            return $popup.offset();\\n          },\\n          calculations: function() {\\n            var\\n              targetElement    = $target[0],\\n              isWindow         = ($boundary[0] == window),\\n              targetPosition   = (settings.inline || (settings.popup && settings.movePopup))\\n                ? $target.position()\\n                : $target.offset(),\\n              screenPosition = (isWindow)\\n                ? { top: 0, left: 0 }\\n                : $boundary.offset(),\\n              calculations   = {},\\n              scroll = (isWindow)\\n                ? { top: $window.scrollTop(), left: $window.scrollLeft() }\\n                : { top: 0, left: 0},\\n              screen\\n            ;\\n            calculations = {\\n              // element which is launching popup\\n              target : {\\n                element : $target[0],\\n                width   : $target.outerWidth(),\\n                height  : $target.outerHeight(),\\n                top     : targetPosition.top,\\n                left    : targetPosition.left,\\n                margin  : {}\\n              },\\n              // popup itself\\n              popup : {\\n                width  : $popup.outerWidth(),\\n                height : $popup.outerHeight()\\n              },\\n              // offset container (or 3d context)\\n              parent : {\\n                width  : $offsetParent.outerWidth(),\\n                height : $offsetParent.outerHeight()\\n              },\\n              // screen boundaries\\n              screen : {\\n                top  : screenPosition.top,\\n                left : screenPosition.left,\\n                scroll: {\\n                  top  : scroll.top,\\n                  left : scroll.left\\n                },\\n                width  : $boundary.width(),\\n                height : $boundary.height()\\n              }\\n            };\\n\\n            // add in container calcs if fluid\\n            if( settings.setFluidWidth && module.is.fluid() ) {\\n              calculations.container = {\\n                width: $popup.parent().outerWidth()\\n              };\\n              calculations.popup.width = calculations.container.width;\\n            }\\n\\n            // add in margins if inline\\n            calculations.target.margin.top = (settings.inline)\\n              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)\\n              : 0\\n            ;\\n            calculations.target.margin.left = (settings.inline)\\n              ? module.is.rtl()\\n                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)\\n                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left'), 10)\\n              : 0\\n            ;\\n            // calculate screen boundaries\\n            screen = calculations.screen;\\n            calculations.boundary = {\\n              top    : screen.top + screen.scroll.top,\\n              bottom : screen.top + screen.scroll.top + screen.height,\\n              left   : screen.left + screen.scroll.left,\\n              right  : screen.left + screen.scroll.left + screen.width\\n            };\\n            return calculations;\\n          },\\n          id: function() {\\n            return id;\\n          },\\n          startEvent: function() {\\n            if(settings.on == 'hover') {\\n              return 'mouseenter';\\n            }\\n            else if(settings.on == 'focus') {\\n              return 'focus';\\n            }\\n            return false;\\n          },\\n          scrollEvent: function() {\\n            return 'scroll';\\n          },\\n          endEvent: function() {\\n            if(settings.on == 'hover') {\\n              return 'mouseleave';\\n            }\\n            else if(settings.on == 'focus') {\\n              return 'blur';\\n            }\\n            return false;\\n          },\\n          distanceFromBoundary: function(offset, calculations) {\\n            var\\n              distanceFromBoundary = {},\\n              popup,\\n              boundary\\n            ;\\n            calculations = calculations || module.get.calculations();\\n\\n            // shorthand\\n            popup        = calculations.popup;\\n            boundary     = calculations.boundary;\\n\\n            if(offset) {\\n              distanceFromBoundary = {\\n                top    : (offset.top - boundary.top),\\n                left   : (offset.left - boundary.left),\\n                right  : (boundary.right - (offset.left + popup.width) ),\\n                bottom : (boundary.bottom - (offset.top + popup.height) )\\n              };\\n              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);\\n            }\\n            return distanceFromBoundary;\\n          },\\n          offsetParent: function($target) {\\n            var\\n              element = ($target !== undefined)\\n                ? $target[0]\\n                : $module[0],\\n              parentNode = element.parentNode,\\n              $node    = $(parentNode)\\n            ;\\n            if(parentNode) {\\n              var\\n                is2D     = ($node.css('transform') === 'none'),\\n                isStatic = ($node.css('position') === 'static'),\\n                isHTML   = $node.is('html')\\n              ;\\n              while(parentNode && !isHTML && isStatic && is2D) {\\n                parentNode = parentNode.parentNode;\\n                $node    = $(parentNode);\\n                is2D     = ($node.css('transform') === 'none');\\n                isStatic = ($node.css('position') === 'static');\\n                isHTML   = $node.is('html');\\n              }\\n            }\\n            return ($node && $node.length > 0)\\n              ? $node\\n              : $()\\n            ;\\n          },\\n          positions: function() {\\n            return {\\n              'top left'      : false,\\n              'top center'    : false,\\n              'top right'     : false,\\n              'bottom left'   : false,\\n              'bottom center' : false,\\n              'bottom right'  : false,\\n              'left center'   : false,\\n              'right center'  : false\\n            };\\n          },\\n          nextPosition: function(position) {\\n            var\\n              positions          = position.split(' '),\\n              verticalPosition   = positions[0],\\n              horizontalPosition = positions[1],\\n              opposite = {\\n                top    : 'bottom',\\n                bottom : 'top',\\n                left   : 'right',\\n                right  : 'left'\\n              },\\n              adjacent = {\\n                left   : 'center',\\n                center : 'right',\\n                right  : 'left'\\n              },\\n              backup = {\\n                'top left'      : 'top center',\\n                'top center'    : 'top right',\\n                'top right'     : 'right center',\\n                'right center'  : 'bottom right',\\n                'bottom right'  : 'bottom center',\\n                'bottom center' : 'bottom left',\\n                'bottom left'   : 'left center',\\n                'left center'   : 'top left'\\n              },\\n              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),\\n              oppositeTried = false,\\n              adjacentTried = false,\\n              nextPosition  = false\\n            ;\\n            if(!triedPositions) {\\n              module.verbose('All available positions available');\\n              triedPositions = module.get.positions();\\n            }\\n\\n            module.debug('Recording last position tried', position);\\n            triedPositions[position] = true;\\n\\n            if(settings.prefer === 'opposite') {\\n              nextPosition  = [opposite[verticalPosition], horizontalPosition];\\n              nextPosition  = nextPosition.join(' ');\\n              oppositeTried = (triedPositions[nextPosition] === true);\\n              module.debug('Trying opposite strategy', nextPosition);\\n            }\\n            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {\\n              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];\\n              nextPosition  = nextPosition.join(' ');\\n              adjacentTried = (triedPositions[nextPosition] === true);\\n              module.debug('Trying adjacent strategy', nextPosition);\\n            }\\n            if(adjacentTried || oppositeTried) {\\n              module.debug('Using backup position', nextPosition);\\n              nextPosition = backup[position];\\n            }\\n            return nextPosition;\\n          }\\n        },\\n\\n        set: {\\n          position: function(position, calculations) {\\n\\n            // exit conditions\\n            if($target.length === 0 || $popup.length === 0) {\\n              module.error(error.notFound);\\n              return;\\n            }\\n            var\\n              offset,\\n              distanceAway,\\n              target,\\n              popup,\\n              parent,\\n              positioning,\\n              popupOffset,\\n              distanceFromBoundary\\n            ;\\n\\n            calculations = calculations || module.get.calculations();\\n            position     = position     || $module.data(metadata.position) || settings.position;\\n\\n            offset       = $module.data(metadata.offset) || settings.offset;\\n            distanceAway = settings.distanceAway;\\n\\n            // shorthand\\n            target = calculations.target;\\n            popup  = calculations.popup;\\n            parent = calculations.parent;\\n\\n            if(target.width === 0 && target.height === 0 && !module.is.svg(target.element)) {\\n              module.debug('Popup target is hidden, no action taken');\\n              return false;\\n            }\\n\\n            if(settings.inline) {\\n              module.debug('Adding margin to calculation', target.margin);\\n              if(position == 'left center' || position == 'right center') {\\n                offset       +=  target.margin.top;\\n                distanceAway += -target.margin.left;\\n              }\\n              else if (position == 'top left' || position == 'top center' || position == 'top right') {\\n                offset       += target.margin.left;\\n                distanceAway -= target.margin.top;\\n              }\\n              else {\\n                offset       += target.margin.left;\\n                distanceAway += target.margin.top;\\n              }\\n            }\\n\\n            module.debug('Determining popup position from calculations', position, calculations);\\n\\n            if (module.is.rtl()) {\\n              position = position.replace(/left|right/g, function (match) {\\n                return (match == 'left')\\n                  ? 'right'\\n                  : 'left'\\n                ;\\n              });\\n              module.debug('RTL: Popup position updated', position);\\n            }\\n\\n            // if last attempt use specified last resort position\\n            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {\\n              position = settings.lastResort;\\n            }\\n\\n            switch (position) {\\n              case 'top left':\\n                positioning = {\\n                  top    : 'auto',\\n                  bottom : parent.height - target.top + distanceAway,\\n                  left   : target.left + offset,\\n                  right  : 'auto'\\n                };\\n              break;\\n              case 'top center':\\n                positioning = {\\n                  bottom : parent.height - target.top + distanceAway,\\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\\n                  top    : 'auto',\\n                  right  : 'auto'\\n                };\\n              break;\\n              case 'top right':\\n                positioning = {\\n                  bottom :  parent.height - target.top + distanceAway,\\n                  right  :  parent.width - target.left - target.width - offset,\\n                  top    : 'auto',\\n                  left   : 'auto'\\n                };\\n              break;\\n              case 'left center':\\n                positioning = {\\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\\n                  right  : parent.width - target.left + distanceAway,\\n                  left   : 'auto',\\n                  bottom : 'auto'\\n                };\\n              break;\\n              case 'right center':\\n                positioning = {\\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\\n                  left   : target.left + target.width + distanceAway,\\n                  bottom : 'auto',\\n                  right  : 'auto'\\n                };\\n              break;\\n              case 'bottom left':\\n                positioning = {\\n                  top    : target.top + target.height + distanceAway,\\n                  left   : target.left + offset,\\n                  bottom : 'auto',\\n                  right  : 'auto'\\n                };\\n              break;\\n              case 'bottom center':\\n                positioning = {\\n                  top    : target.top + target.height + distanceAway,\\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\\n                  bottom : 'auto',\\n                  right  : 'auto'\\n                };\\n              break;\\n              case 'bottom right':\\n                positioning = {\\n                  top    : target.top + target.height + distanceAway,\\n                  right  : parent.width - target.left  - target.width - offset,\\n                  left   : 'auto',\\n                  bottom : 'auto'\\n                };\\n              break;\\n            }\\n            if(positioning === undefined) {\\n              module.error(error.invalidPosition, position);\\n            }\\n\\n            module.debug('Calculated popup positioning values', positioning);\\n\\n            // tentatively place on stage\\n            $popup\\n              .css(positioning)\\n              .removeClass(className.position)\\n              .addClass(position)\\n              .addClass(className.loading)\\n            ;\\n\\n            popupOffset = module.get.popupOffset();\\n\\n            // see if any boundaries are surpassed with this tentative position\\n            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);\\n\\n            if( module.is.offstage(distanceFromBoundary, position) ) {\\n              module.debug('Position is outside viewport', position);\\n              if(searchDepth < settings.maxSearchDepth) {\\n                searchDepth++;\\n                position = module.get.nextPosition(position);\\n                module.debug('Trying new position', position);\\n                return ($popup)\\n                  ? module.set.position(position, calculations)\\n                  : false\\n                ;\\n              }\\n              else {\\n                if(settings.lastResort) {\\n                  module.debug('No position found, showing with last position');\\n                }\\n                else {\\n                  module.debug('Popup could not find a position to display', $popup);\\n                  module.error(error.cannotPlace, element);\\n                  module.remove.attempts();\\n                  module.remove.loading();\\n                  module.reset();\\n                  settings.onUnplaceable.call($popup, element);\\n                  return false;\\n                }\\n              }\\n            }\\n            module.debug('Position is on stage', position);\\n            module.remove.attempts();\\n            module.remove.loading();\\n            if( settings.setFluidWidth && module.is.fluid() ) {\\n              module.set.fluidWidth(calculations);\\n            }\\n            return true;\\n          },\\n\\n          fluidWidth: function(calculations) {\\n            calculations = calculations || module.get.calculations();\\n            module.debug('Automatically setting element width to parent width', calculations.parent.width);\\n            $popup.css('width', calculations.container.width);\\n          },\\n\\n          variation: function(variation) {\\n            variation = variation || module.get.variation();\\n            if(variation && module.has.popup() ) {\\n              module.verbose('Adding variation to popup', variation);\\n              $popup.addClass(variation);\\n            }\\n          },\\n\\n          visible: function() {\\n            $module.addClass(className.visible);\\n          }\\n        },\\n\\n        remove: {\\n          loading: function() {\\n            $popup.removeClass(className.loading);\\n          },\\n          variation: function(variation) {\\n            variation = variation || module.get.variation();\\n            if(variation) {\\n              module.verbose('Removing variation', variation);\\n              $popup.removeClass(variation);\\n            }\\n          },\\n          visible: function() {\\n            $module.removeClass(className.visible);\\n          },\\n          attempts: function() {\\n            module.verbose('Resetting all searched positions');\\n            searchDepth    = 0;\\n            triedPositions = false;\\n          }\\n        },\\n\\n        bind: {\\n          events: function() {\\n            module.debug('Binding popup events to module');\\n            if(settings.on == 'click') {\\n              $module\\n                .on('click' + eventNamespace, module.toggle)\\n              ;\\n            }\\n            if(settings.on == 'hover' && hasTouch) {\\n              $module\\n                .on('touchstart' + eventNamespace, module.event.touchstart)\\n              ;\\n            }\\n            if( module.get.startEvent() ) {\\n              $module\\n                .on(module.get.startEvent() + eventNamespace, module.event.start)\\n                .on(module.get.endEvent() + eventNamespace, module.event.end)\\n              ;\\n            }\\n            if(settings.target) {\\n              module.debug('Target set to element', $target);\\n            }\\n            $window.on('resize' + elementNamespace, module.event.resize);\\n          },\\n          popup: function() {\\n            module.verbose('Allowing hover events on popup to prevent closing');\\n            if( $popup && module.has.popup() ) {\\n              $popup\\n                .on('mouseenter' + eventNamespace, module.event.start)\\n                .on('mouseleave' + eventNamespace, module.event.end)\\n              ;\\n            }\\n          },\\n          close: function() {\\n            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {\\n              $scrollContext\\n                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)\\n              ;\\n            }\\n            if(settings.on == 'hover' && openedWithTouch) {\\n              module.verbose('Binding popup close event to document');\\n              $document\\n                .on('touchstart' + elementNamespace, function(event) {\\n                  module.verbose('Touched away from popup');\\n                  module.event.hideGracefully.call(element, event);\\n                })\\n              ;\\n            }\\n            if(settings.on == 'click' && settings.closable) {\\n              module.verbose('Binding popup close event to document');\\n              $document\\n                .on('click' + elementNamespace, function(event) {\\n                  module.verbose('Clicked away from popup');\\n                  module.event.hideGracefully.call(element, event);\\n                })\\n              ;\\n            }\\n          }\\n        },\\n\\n        unbind: {\\n          events: function() {\\n            $window\\n              .off(elementNamespace)\\n            ;\\n            $module\\n              .off(eventNamespace)\\n            ;\\n          },\\n          close: function() {\\n            $document\\n              .off(elementNamespace)\\n            ;\\n            $scrollContext\\n              .off(elementNamespace)\\n            ;\\n          },\\n        },\\n\\n        has: {\\n          popup: function() {\\n            return ($popup && $popup.length > 0);\\n          }\\n        },\\n\\n        is: {\\n          offstage: function(distanceFromBoundary, position) {\\n            var\\n              offstage = []\\n            ;\\n            // return boundaries that have been surpassed\\n            $.each(distanceFromBoundary, function(direction, distance) {\\n              if(distance < -settings.jitter) {\\n                module.debug('Position exceeds allowable distance from edge', direction, distance, position);\\n                offstage.push(direction);\\n              }\\n            });\\n            if(offstage.length > 0) {\\n              return true;\\n            }\\n            else {\\n              return false;\\n            }\\n          },\\n          svg: function(element) {\\n            return module.supports.svg() && (element instanceof SVGGraphicsElement);\\n          },\\n          active: function() {\\n            return $module.hasClass(className.active);\\n          },\\n          animating: function() {\\n            return ($popup !== undefined && $popup.hasClass(className.animating) );\\n          },\\n          fluid: function() {\\n            return ($popup !== undefined && $popup.hasClass(className.fluid));\\n          },\\n          visible: function() {\\n            return ($popup !== undefined && $popup.hasClass(className.visible));\\n          },\\n          dropdown: function() {\\n            return $module.hasClass(className.dropdown);\\n          },\\n          hidden: function() {\\n            return !module.is.visible();\\n          },\\n          rtl: function () {\\n            return $module.css('direction') == 'rtl';\\n          }\\n        },\\n\\n        reset: function() {\\n          module.remove.visible();\\n          if(settings.preserve) {\\n            if($.fn.transition !== undefined) {\\n              $popup\\n                .transition('remove transition')\\n              ;\\n            }\\n          }\\n          else {\\n            module.removePopup();\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            settings[name] = value;\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.popup.settings = {\\n\\n  name           : 'Popup',\\n\\n  // module settings\\n  silent         : false,\\n  debug          : false,\\n  verbose        : false,\\n  performance    : true,\\n  namespace      : 'popup',\\n\\n  // whether it should use dom mutation observers\\n  observeChanges : true,\\n\\n  // callback only when element added to dom\\n  onCreate       : function(){},\\n\\n  // callback before element removed from dom\\n  onRemove       : function(){},\\n\\n  // callback before show animation\\n  onShow         : function(){},\\n\\n  // callback after show animation\\n  onVisible      : function(){},\\n\\n  // callback before hide animation\\n  onHide         : function(){},\\n\\n  // callback when popup cannot be positioned in visible screen\\n  onUnplaceable  : function(){},\\n\\n  // callback after hide animation\\n  onHidden       : function(){},\\n\\n  // when to show popup\\n  on             : 'hover',\\n\\n  // element to use to determine if popup is out of boundary\\n  boundary       : window,\\n\\n  // whether to add touchstart events when using hover\\n  addTouchEvents : true,\\n\\n  // default position relative to element\\n  position       : 'top left',\\n\\n  // name of variation to use\\n  variation      : '',\\n\\n  // whether popup should be moved to context\\n  movePopup      : true,\\n\\n  // element which popup should be relative to\\n  target         : false,\\n\\n  // jq selector or element that should be used as popup\\n  popup          : false,\\n\\n  // popup should remain inline next to activator\\n  inline         : false,\\n\\n  // popup should be removed from page on hide\\n  preserve       : false,\\n\\n  // popup should not close when being hovered on\\n  hoverable      : false,\\n\\n  // explicitly set content\\n  content        : false,\\n\\n  // explicitly set html\\n  html           : false,\\n\\n  // explicitly set title\\n  title          : false,\\n\\n  // whether automatically close on clickaway when on click\\n  closable       : true,\\n\\n  // automatically hide on scroll\\n  hideOnScroll   : 'auto',\\n\\n  // hide other popups on show\\n  exclusive      : false,\\n\\n  // context to attach popups\\n  context        : 'body',\\n\\n  // context for binding scroll events\\n  scrollContext  : window,\\n\\n  // position to prefer when calculating new position\\n  prefer         : 'opposite',\\n\\n  // specify position to appear even if it doesn't fit\\n  lastResort     : false,\\n\\n  // delay used to prevent accidental refiring of animations due to user error\\n  delay        : {\\n    show : 50,\\n    hide : 70\\n  },\\n\\n  // whether fluid variation should assign width explicitly\\n  setFluidWidth  : true,\\n\\n  // transition settings\\n  duration       : 200,\\n  transition     : 'scale',\\n\\n  // distance away from activating element in px\\n  distanceAway   : 0,\\n\\n  // number of pixels an element is allowed to be \\\"offstage\\\" for a position to be chosen (allows for rounding)\\n  jitter         : 2,\\n\\n  // offset on aligning axis from calculated position\\n  offset         : 0,\\n\\n  // maximum times to look for a position before failing (9 positions total)\\n  maxSearchDepth : 15,\\n\\n  error: {\\n    invalidPosition : 'The position you specified is not a valid position',\\n    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',\\n    method          : 'The method you called is not defined.',\\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',\\n    notFound        : 'The target or popup you specified does not exist on the page'\\n  },\\n\\n  metadata: {\\n    activator : 'activator',\\n    content   : 'content',\\n    html      : 'html',\\n    offset    : 'offset',\\n    position  : 'position',\\n    title     : 'title',\\n    variation : 'variation'\\n  },\\n\\n  className   : {\\n    active    : 'active',\\n    animating : 'animating',\\n    dropdown  : 'dropdown',\\n    fluid     : 'fluid',\\n    loading   : 'loading',\\n    popup     : 'ui popup',\\n    position  : 'top left center bottom right',\\n    visible   : 'visible'\\n  },\\n\\n  selector    : {\\n    popup    : '.ui.popup'\\n  },\\n\\n  templates: {\\n    escape: function(string) {\\n      var\\n        badChars     = /[&<>\\\"'`]/g,\\n        shouldEscape = /[&<>\\\"'`]/,\\n        escape       = {\\n          \\\"&\\\": \\\"&amp;\\\",\\n          \\\"<\\\": \\\"&lt;\\\",\\n          \\\">\\\": \\\"&gt;\\\",\\n          '\\\"': \\\"&quot;\\\",\\n          \\\"'\\\": \\\"&#x27;\\\",\\n          \\\"`\\\": \\\"&#x60;\\\"\\n        },\\n        escapedChar  = function(chr) {\\n          return escape[chr];\\n        }\\n      ;\\n      if(shouldEscape.test(string)) {\\n        return string.replace(badChars, escapedChar);\\n      }\\n      return string;\\n    },\\n    popup: function(text) {\\n      var\\n        html   = '',\\n        escape = $.fn.popup.settings.templates.escape\\n      ;\\n      if(typeof text !== undefined) {\\n        if(typeof text.title !== undefined && text.title) {\\n          text.title = escape(text.title);\\n          html += '<div class=\\\"header\\\">' + text.title + '</div>';\\n        }\\n        if(typeof text.content !== undefined && text.content) {\\n          text.content = escape(text.content);\\n          html += '<div class=\\\"content\\\">' + text.content + '</div>';\\n        }\\n      }\\n      return html;\\n    }\\n  }\\n\\n};\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Progress\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\nvar\\n  global = (typeof window != 'undefined' && window.Math == Math)\\n    ? window\\n    : (typeof self != 'undefined' && self.Math == Math)\\n      ? self\\n      : Function('return this')()\\n;\\n\\n$.fn.progress = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n\\n    moduleSelector = $allModules.selector || '',\\n\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings          = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\\n          : $.extend({}, $.fn.progress.settings),\\n\\n        className       = settings.className,\\n        metadata        = settings.metadata,\\n        namespace       = settings.namespace,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        $module         = $(this),\\n        $bar            = $(this).find(selector.bar),\\n        $progress       = $(this).find(selector.progress),\\n        $label          = $(this).find(selector.label),\\n\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        animating = false,\\n        transitionEnd,\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.debug('Initializing progress bar', settings);\\n\\n          module.set.duration();\\n          module.set.transitionEvent();\\n\\n          module.read.metadata();\\n          module.read.settings();\\n\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of progress', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n        destroy: function() {\\n          module.verbose('Destroying previous progress for', $module);\\n          clearInterval(instance.interval);\\n          module.remove.state();\\n          $module.removeData(moduleNamespace);\\n          instance = undefined;\\n        },\\n\\n        reset: function() {\\n          module.remove.nextValue();\\n          module.update.progress(0);\\n        },\\n\\n        complete: function() {\\n          if(module.percent === undefined || module.percent < 100) {\\n            module.remove.progressPoll();\\n            module.set.percent(100);\\n          }\\n        },\\n\\n        read: {\\n          metadata: function() {\\n            var\\n              data = {\\n                percent : $module.data(metadata.percent),\\n                total   : $module.data(metadata.total),\\n                value   : $module.data(metadata.value)\\n              }\\n            ;\\n            if(data.percent) {\\n              module.debug('Current percent value set from metadata', data.percent);\\n              module.set.percent(data.percent);\\n            }\\n            if(data.total) {\\n              module.debug('Total value set from metadata', data.total);\\n              module.set.total(data.total);\\n            }\\n            if(data.value) {\\n              module.debug('Current value set from metadata', data.value);\\n              module.set.value(data.value);\\n              module.set.progress(data.value);\\n            }\\n          },\\n          settings: function() {\\n            if(settings.total !== false) {\\n              module.debug('Current total set in settings', settings.total);\\n              module.set.total(settings.total);\\n            }\\n            if(settings.value !== false) {\\n              module.debug('Current value set in settings', settings.value);\\n              module.set.value(settings.value);\\n              module.set.progress(module.value);\\n            }\\n            if(settings.percent !== false) {\\n              module.debug('Current percent set in settings', settings.percent);\\n              module.set.percent(settings.percent);\\n            }\\n          }\\n        },\\n\\n        increment: function(incrementValue) {\\n          var\\n            maxValue,\\n            startValue,\\n            newValue\\n          ;\\n          if( module.has.total() ) {\\n            startValue     = module.get.value();\\n            incrementValue = incrementValue || 1;\\n            newValue       = startValue + incrementValue;\\n          }\\n          else {\\n            startValue     = module.get.percent();\\n            incrementValue = incrementValue || module.get.randomValue();\\n\\n            newValue       = startValue + incrementValue;\\n            maxValue       = 100;\\n            module.debug('Incrementing percentage by', startValue, newValue);\\n          }\\n          newValue = module.get.normalizedValue(newValue);\\n          module.set.progress(newValue);\\n        },\\n        decrement: function(decrementValue) {\\n          var\\n            total     = module.get.total(),\\n            startValue,\\n            newValue\\n          ;\\n          if(total) {\\n            startValue     =  module.get.value();\\n            decrementValue =  decrementValue || 1;\\n            newValue       =  startValue - decrementValue;\\n            module.debug('Decrementing value by', decrementValue, startValue);\\n          }\\n          else {\\n            startValue     =  module.get.percent();\\n            decrementValue =  decrementValue || module.get.randomValue();\\n            newValue       =  startValue - decrementValue;\\n            module.debug('Decrementing percentage by', decrementValue, startValue);\\n          }\\n          newValue = module.get.normalizedValue(newValue);\\n          module.set.progress(newValue);\\n        },\\n\\n        has: {\\n          progressPoll: function() {\\n            return module.progressPoll;\\n          },\\n          total: function() {\\n            return (module.get.total() !== false);\\n          }\\n        },\\n\\n        get: {\\n          text: function(templateText) {\\n            var\\n              value   = module.value                || 0,\\n              total   = module.total                || 0,\\n              percent = (animating)\\n                ? module.get.displayPercent()\\n                : module.percent || 0,\\n              left = (module.total > 0)\\n                ? (total - value)\\n                : (100 - percent)\\n            ;\\n            templateText = templateText || '';\\n            templateText = templateText\\n              .replace('{value}', value)\\n              .replace('{total}', total)\\n              .replace('{left}', left)\\n              .replace('{percent}', percent)\\n            ;\\n            module.verbose('Adding variables to progress bar text', templateText);\\n            return templateText;\\n          },\\n\\n          normalizedValue: function(value) {\\n            if(value < 0) {\\n              module.debug('Value cannot decrement below 0');\\n              return 0;\\n            }\\n            if(module.has.total()) {\\n              if(value > module.total) {\\n                module.debug('Value cannot increment above total', module.total);\\n                return module.total;\\n              }\\n            }\\n            else if(value > 100 ) {\\n              module.debug('Value cannot increment above 100 percent');\\n              return 100;\\n            }\\n            return value;\\n          },\\n\\n          updateInterval: function() {\\n            if(settings.updateInterval == 'auto') {\\n              return settings.duration;\\n            }\\n            return settings.updateInterval;\\n          },\\n\\n          randomValue: function() {\\n            module.debug('Generating random increment percentage');\\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\\n          },\\n\\n          numericValue: function(value) {\\n            return (typeof value === 'string')\\n              ? (value.replace(/[^\\\\d.]/g, '') !== '')\\n                ? +(value.replace(/[^\\\\d.]/g, ''))\\n                : false\\n              : value\\n            ;\\n          },\\n\\n          transitionEnd: function() {\\n            var\\n              element     = document.createElement('element'),\\n              transitions = {\\n                'transition'       :'transitionend',\\n                'OTransition'      :'oTransitionEnd',\\n                'MozTransition'    :'transitionend',\\n                'WebkitTransition' :'webkitTransitionEnd'\\n              },\\n              transition\\n            ;\\n            for(transition in transitions){\\n              if( element.style[transition] !== undefined ){\\n                return transitions[transition];\\n              }\\n            }\\n          },\\n\\n          // gets current displayed percentage (if animating values this is the intermediary value)\\n          displayPercent: function() {\\n            var\\n              barWidth       = $bar.width(),\\n              totalWidth     = $module.width(),\\n              minDisplay     = parseInt($bar.css('min-width'), 10),\\n              displayPercent = (barWidth > minDisplay)\\n                ? (barWidth / totalWidth * 100)\\n                : module.percent\\n            ;\\n            return (settings.precision > 0)\\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\\n              : Math.round(displayPercent)\\n            ;\\n          },\\n\\n          percent: function() {\\n            return module.percent || 0;\\n          },\\n          value: function() {\\n            return module.nextValue || module.value || 0;\\n          },\\n          total: function() {\\n            return module.total || false;\\n          }\\n        },\\n\\n        create: {\\n          progressPoll: function() {\\n            module.progressPoll = setTimeout(function() {\\n              module.update.toNextValue();\\n              module.remove.progressPoll();\\n            }, module.get.updateInterval());\\n          },\\n        },\\n\\n        is: {\\n          complete: function() {\\n            return module.is.success() || module.is.warning() || module.is.error();\\n          },\\n          success: function() {\\n            return $module.hasClass(className.success);\\n          },\\n          warning: function() {\\n            return $module.hasClass(className.warning);\\n          },\\n          error: function() {\\n            return $module.hasClass(className.error);\\n          },\\n          active: function() {\\n            return $module.hasClass(className.active);\\n          },\\n          visible: function() {\\n            return $module.is(':visible');\\n          }\\n        },\\n\\n        remove: {\\n          progressPoll: function() {\\n            module.verbose('Removing progress poll timer');\\n            if(module.progressPoll) {\\n              clearTimeout(module.progressPoll);\\n              delete module.progressPoll;\\n            }\\n          },\\n          nextValue: function() {\\n            module.verbose('Removing progress value stored for next update');\\n            delete module.nextValue;\\n          },\\n          state: function() {\\n            module.verbose('Removing stored state');\\n            delete module.total;\\n            delete module.percent;\\n            delete module.value;\\n          },\\n          active: function() {\\n            module.verbose('Removing active state');\\n            $module.removeClass(className.active);\\n          },\\n          success: function() {\\n            module.verbose('Removing success state');\\n            $module.removeClass(className.success);\\n          },\\n          warning: function() {\\n            module.verbose('Removing warning state');\\n            $module.removeClass(className.warning);\\n          },\\n          error: function() {\\n            module.verbose('Removing error state');\\n            $module.removeClass(className.error);\\n          }\\n        },\\n\\n        set: {\\n          barWidth: function(value) {\\n            if(value > 100) {\\n              module.error(error.tooHigh, value);\\n            }\\n            else if (value < 0) {\\n              module.error(error.tooLow, value);\\n            }\\n            else {\\n              $bar\\n                .css('width', value + '%')\\n              ;\\n              $module\\n                .attr('data-percent', parseInt(value, 10))\\n              ;\\n            }\\n          },\\n          duration: function(duration) {\\n            duration = duration || settings.duration;\\n            duration = (typeof duration == 'number')\\n              ? duration + 'ms'\\n              : duration\\n            ;\\n            module.verbose('Setting progress bar transition duration', duration);\\n            $bar\\n              .css({\\n                'transition-duration':  duration\\n              })\\n            ;\\n          },\\n          percent: function(percent) {\\n            percent = (typeof percent == 'string')\\n              ? +(percent.replace('%', ''))\\n              : percent\\n            ;\\n            // round display percentage\\n            percent = (settings.precision > 0)\\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\\n              : Math.round(percent)\\n            ;\\n            module.percent = percent;\\n            if( !module.has.total() ) {\\n              module.value = (settings.precision > 0)\\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\\n                : Math.round( (percent / 100) * module.total * 10) / 10\\n              ;\\n              if(settings.limitValues) {\\n                module.value = (module.value > 100)\\n                  ? 100\\n                  : (module.value < 0)\\n                    ? 0\\n                    : module.value\\n                ;\\n              }\\n            }\\n            module.set.barWidth(percent);\\n            module.set.labelInterval();\\n            module.set.labels();\\n            settings.onChange.call(element, percent, module.value, module.total);\\n          },\\n          labelInterval: function() {\\n            var\\n              animationCallback = function() {\\n                module.verbose('Bar finished animating, removing continuous label updates');\\n                clearInterval(module.interval);\\n                animating = false;\\n                module.set.labels();\\n              }\\n            ;\\n            clearInterval(module.interval);\\n            $bar.one(transitionEnd + eventNamespace, animationCallback);\\n            animating = true;\\n            module.interval = setInterval(function() {\\n              var\\n                isInDOM = $.contains(document.documentElement, element)\\n              ;\\n              if(!isInDOM) {\\n                clearInterval(module.interval);\\n                animating = false;\\n              }\\n              module.set.labels();\\n            }, settings.framerate);\\n          },\\n          labels: function() {\\n            module.verbose('Setting both bar progress and outer label text');\\n            module.set.barLabel();\\n            module.set.state();\\n          },\\n          label: function(text) {\\n            text = text || '';\\n            if(text) {\\n              text = module.get.text(text);\\n              module.verbose('Setting label to text', text);\\n              $label.text(text);\\n            }\\n          },\\n          state: function(percent) {\\n            percent = (percent !== undefined)\\n              ? percent\\n              : module.percent\\n            ;\\n            if(percent === 100) {\\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\\n                module.set.success();\\n                module.debug('Automatically triggering success at 100%');\\n              }\\n              else {\\n                module.verbose('Reached 100% removing active state');\\n                module.remove.active();\\n                module.remove.progressPoll();\\n              }\\n            }\\n            else if(percent > 0) {\\n              module.verbose('Adjusting active progress bar label', percent);\\n              module.set.active();\\n            }\\n            else {\\n              module.remove.active();\\n              module.set.label(settings.text.active);\\n            }\\n          },\\n          barLabel: function(text) {\\n            if(text !== undefined) {\\n              $progress.text( module.get.text(text) );\\n            }\\n            else if(settings.label == 'ratio' && module.total) {\\n              module.verbose('Adding ratio to bar label');\\n              $progress.text( module.get.text(settings.text.ratio) );\\n            }\\n            else if(settings.label == 'percent') {\\n              module.verbose('Adding percentage to bar label');\\n              $progress.text( module.get.text(settings.text.percent) );\\n            }\\n          },\\n          active: function(text) {\\n            text = text || settings.text.active;\\n            module.debug('Setting active state');\\n            if(settings.showActivity && !module.is.active() ) {\\n              $module.addClass(className.active);\\n            }\\n            module.remove.warning();\\n            module.remove.error();\\n            module.remove.success();\\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\\n            if(text) {\\n              module.set.label(text);\\n            }\\n            $bar.one(transitionEnd + eventNamespace, function() {\\n              settings.onActive.call(element, module.value, module.total);\\n            });\\n          },\\n          success : function(text) {\\n            text = text || settings.text.success || settings.text.active;\\n            module.debug('Setting success state');\\n            $module.addClass(className.success);\\n            module.remove.active();\\n            module.remove.warning();\\n            module.remove.error();\\n            module.complete();\\n            if(settings.text.success) {\\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\\n              module.set.label(text);\\n            }\\n            else {\\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\\n              module.set.label(text);\\n            }\\n            $bar.one(transitionEnd + eventNamespace, function() {\\n              settings.onSuccess.call(element, module.total);\\n            });\\n          },\\n          warning : function(text) {\\n            text = text || settings.text.warning;\\n            module.debug('Setting warning state');\\n            $module.addClass(className.warning);\\n            module.remove.active();\\n            module.remove.success();\\n            module.remove.error();\\n            module.complete();\\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\\n            if(text) {\\n              module.set.label(text);\\n            }\\n            $bar.one(transitionEnd + eventNamespace, function() {\\n              settings.onWarning.call(element, module.value, module.total);\\n            });\\n          },\\n          error : function(text) {\\n            text = text || settings.text.error;\\n            module.debug('Setting error state');\\n            $module.addClass(className.error);\\n            module.remove.active();\\n            module.remove.success();\\n            module.remove.warning();\\n            module.complete();\\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\\n            if(text) {\\n              module.set.label(text);\\n            }\\n            $bar.one(transitionEnd + eventNamespace, function() {\\n              settings.onError.call(element, module.value, module.total);\\n            });\\n          },\\n          transitionEvent: function() {\\n            transitionEnd = module.get.transitionEnd();\\n          },\\n          total: function(totalValue) {\\n            module.total = totalValue;\\n          },\\n          value: function(value) {\\n            module.value = value;\\n          },\\n          progress: function(value) {\\n            if(!module.has.progressPoll()) {\\n              module.debug('First update in progress update interval, immediately updating', value);\\n              module.update.progress(value);\\n              module.create.progressPoll();\\n            }\\n            else {\\n              module.debug('Updated within interval, setting next update to use new value', value);\\n              module.set.nextValue(value);\\n            }\\n          },\\n          nextValue: function(value) {\\n            module.nextValue = value;\\n          }\\n        },\\n\\n        update: {\\n          toNextValue: function() {\\n            var\\n              nextValue = module.nextValue\\n            ;\\n            if(nextValue) {\\n              module.debug('Update interval complete using last updated value', nextValue);\\n              module.update.progress(nextValue);\\n              module.remove.nextValue();\\n            }\\n          },\\n          progress: function(value) {\\n            var\\n              percentComplete\\n            ;\\n            value = module.get.numericValue(value);\\n            if(value === false) {\\n              module.error(error.nonNumeric, value);\\n            }\\n            value = module.get.normalizedValue(value);\\n            if( module.has.total() ) {\\n              module.set.value(value);\\n              percentComplete = (value / module.total) * 100;\\n              module.debug('Calculating percent complete from total', percentComplete);\\n              module.set.percent( percentComplete );\\n            }\\n            else {\\n              percentComplete = value;\\n              module.debug('Setting value to exact percentage value', percentComplete);\\n              module.set.percent( percentComplete );\\n            }\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.progress.settings = {\\n\\n  name         : 'Progress',\\n  namespace    : 'progress',\\n\\n  silent       : false,\\n  debug        : false,\\n  verbose      : false,\\n  performance  : true,\\n\\n  random       : {\\n    min : 2,\\n    max : 5\\n  },\\n\\n  duration       : 300,\\n\\n  updateInterval : 'auto',\\n\\n  autoSuccess    : true,\\n  showActivity   : true,\\n  limitValues    : true,\\n\\n  label          : 'percent',\\n  precision      : 0,\\n  framerate      : (1000 / 30), /// 30 fps\\n\\n  percent        : false,\\n  total          : false,\\n  value          : false,\\n\\n  onLabelUpdate : function(state, text, value, total){\\n    return text;\\n  },\\n  onChange      : function(percent, value, total){},\\n  onSuccess     : function(total){},\\n  onActive      : function(value, total){},\\n  onError       : function(value, total){},\\n  onWarning     : function(value, total){},\\n\\n  error    : {\\n    method     : 'The method you called is not defined.',\\n    nonNumeric : 'Progress value is non numeric',\\n    tooHigh    : 'Value specified is above 100%',\\n    tooLow     : 'Value specified is below 0%'\\n  },\\n\\n  regExp: {\\n    variable: /\\\\{\\\\$*[A-z0-9]+\\\\}/g\\n  },\\n\\n  metadata: {\\n    percent : 'percent',\\n    total   : 'total',\\n    value   : 'value'\\n  },\\n\\n  selector : {\\n    bar      : '> .bar',\\n    label    : '> .label',\\n    progress : '.bar > .progress'\\n  },\\n\\n  text : {\\n    active  : false,\\n    error   : false,\\n    success : false,\\n    warning : false,\\n    percent : '{percent}%',\\n    ratio   : '{value} of {total}'\\n  },\\n\\n  className : {\\n    active  : 'active',\\n    error   : 'error',\\n    success : 'success',\\n    warning : 'warning'\\n  }\\n\\n};\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Rating\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.rating = function(parameters) {\\n  var\\n    $allModules     = $(this),\\n    moduleSelector  = $allModules.selector || '',\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n    returnedValue\\n  ;\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\\n          : $.extend({}, $.fn.rating.settings),\\n\\n        namespace       = settings.namespace,\\n        className       = settings.className,\\n        metadata        = settings.metadata,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        element         = this,\\n        instance        = $(this).data(moduleNamespace),\\n\\n        $module         = $(this),\\n        $icon           = $module.find(selector.icon),\\n\\n        initialLoad,\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.verbose('Initializing rating module', settings);\\n\\n          if($icon.length === 0) {\\n            module.setup.layout();\\n          }\\n\\n          if(settings.interactive) {\\n            module.enable();\\n          }\\n          else {\\n            module.disable();\\n          }\\n          module.set.initialLoad();\\n          module.set.rating( module.get.initialRating() );\\n          module.remove.initialLoad();\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Instantiating module', settings);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous instance', instance);\\n          module.remove.events();\\n          $module\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          $icon   = $module.find(selector.icon);\\n        },\\n\\n        setup: {\\n          layout: function() {\\n            var\\n              maxRating = module.get.maxRating(),\\n              html      = $.fn.rating.settings.templates.icon(maxRating)\\n            ;\\n            module.debug('Generating icon html dynamically');\\n            $module\\n              .html(html)\\n            ;\\n            module.refresh();\\n          }\\n        },\\n\\n        event: {\\n          mouseenter: function() {\\n            var\\n              $activeIcon = $(this)\\n            ;\\n            $activeIcon\\n              .nextAll()\\n                .removeClass(className.selected)\\n            ;\\n            $module\\n              .addClass(className.selected)\\n            ;\\n            $activeIcon\\n              .addClass(className.selected)\\n                .prevAll()\\n                .addClass(className.selected)\\n            ;\\n          },\\n          mouseleave: function() {\\n            $module\\n              .removeClass(className.selected)\\n            ;\\n            $icon\\n              .removeClass(className.selected)\\n            ;\\n          },\\n          click: function() {\\n            var\\n              $activeIcon   = $(this),\\n              currentRating = module.get.rating(),\\n              rating        = $icon.index($activeIcon) + 1,\\n              canClear      = (settings.clearable == 'auto')\\n               ? ($icon.length === 1)\\n               : settings.clearable\\n            ;\\n            if(canClear && currentRating == rating) {\\n              module.clearRating();\\n            }\\n            else {\\n              module.set.rating( rating );\\n            }\\n          }\\n        },\\n\\n        clearRating: function() {\\n          module.debug('Clearing current rating');\\n          module.set.rating(0);\\n        },\\n\\n        bind: {\\n          events: function() {\\n            module.verbose('Binding events');\\n            $module\\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\\n            ;\\n          }\\n        },\\n\\n        remove: {\\n          events: function() {\\n            module.verbose('Removing events');\\n            $module\\n              .off(eventNamespace)\\n            ;\\n          },\\n          initialLoad: function() {\\n            initialLoad = false;\\n          }\\n        },\\n\\n        enable: function() {\\n          module.debug('Setting rating to interactive mode');\\n          module.bind.events();\\n          $module\\n            .removeClass(className.disabled)\\n          ;\\n        },\\n\\n        disable: function() {\\n          module.debug('Setting rating to read-only mode');\\n          module.remove.events();\\n          $module\\n            .addClass(className.disabled)\\n          ;\\n        },\\n\\n        is: {\\n          initialLoad: function() {\\n            return initialLoad;\\n          }\\n        },\\n\\n        get: {\\n          initialRating: function() {\\n            if($module.data(metadata.rating) !== undefined) {\\n              $module.removeData(metadata.rating);\\n              return $module.data(metadata.rating);\\n            }\\n            return settings.initialRating;\\n          },\\n          maxRating: function() {\\n            if($module.data(metadata.maxRating) !== undefined) {\\n              $module.removeData(metadata.maxRating);\\n              return $module.data(metadata.maxRating);\\n            }\\n            return settings.maxRating;\\n          },\\n          rating: function() {\\n            var\\n              currentRating = $icon.filter('.' + className.active).length\\n            ;\\n            module.verbose('Current rating retrieved', currentRating);\\n            return currentRating;\\n          }\\n        },\\n\\n        set: {\\n          rating: function(rating) {\\n            var\\n              ratingIndex = (rating - 1 >= 0)\\n                ? (rating - 1)\\n                : 0,\\n              $activeIcon = $icon.eq(ratingIndex)\\n            ;\\n            $module\\n              .removeClass(className.selected)\\n            ;\\n            $icon\\n              .removeClass(className.selected)\\n              .removeClass(className.active)\\n            ;\\n            if(rating > 0) {\\n              module.verbose('Setting current rating to', rating);\\n              $activeIcon\\n                .prevAll()\\n                .addBack()\\n                  .addClass(className.active)\\n              ;\\n            }\\n            if(!module.is.initialLoad()) {\\n              settings.onRate.call(element, rating);\\n            }\\n          },\\n          initialLoad: function() {\\n            initialLoad = true;\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if($allModules.length > 1) {\\n              title += ' ' + '(' + $allModules.length + ')';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.rating.settings = {\\n\\n  name          : 'Rating',\\n  namespace     : 'rating',\\n\\n  slent         : false,\\n  debug         : false,\\n  verbose       : false,\\n  performance   : true,\\n\\n  initialRating : 0,\\n  interactive   : true,\\n  maxRating     : 4,\\n  clearable     : 'auto',\\n\\n  fireOnInit    : false,\\n\\n  onRate        : function(rating){},\\n\\n  error         : {\\n    method    : 'The method you called is not defined',\\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\\n  },\\n\\n\\n  metadata: {\\n    rating    : 'rating',\\n    maxRating : 'maxRating'\\n  },\\n\\n  className : {\\n    active   : 'active',\\n    disabled : 'disabled',\\n    selected : 'selected',\\n    loading  : 'loading'\\n  },\\n\\n  selector  : {\\n    icon : '.icon'\\n  },\\n\\n  templates: {\\n    icon: function(maxRating) {\\n      var\\n        icon = 1,\\n        html = ''\\n      ;\\n      while(icon <= maxRating) {\\n        html += '<i class=\\\"icon\\\"></i>';\\n        icon++;\\n      }\\n      return html;\\n    }\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Search\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.search = function(parameters) {\\n  var\\n    $allModules     = $(this),\\n    moduleSelector  = $allModules.selector || '',\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n    returnedValue\\n  ;\\n  $(this)\\n    .each(function() {\\n      var\\n        settings          = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.search.settings, parameters)\\n          : $.extend({}, $.fn.search.settings),\\n\\n        className       = settings.className,\\n        metadata        = settings.metadata,\\n        regExp          = settings.regExp,\\n        fields          = settings.fields,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n        namespace       = settings.namespace,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = namespace + '-module',\\n\\n        $module         = $(this),\\n        $prompt         = $module.find(selector.prompt),\\n        $searchButton   = $module.find(selector.searchButton),\\n        $results        = $module.find(selector.results),\\n        $result         = $module.find(selector.result),\\n        $category       = $module.find(selector.category),\\n\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        disabledBubbled = false,\\n\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.verbose('Initializing module');\\n          module.determine.searchFields();\\n          module.bind.events();\\n          module.set.type();\\n          module.create.results();\\n          module.instantiate();\\n        },\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n        destroy: function() {\\n          module.verbose('Destroying instance');\\n          $module\\n            .off(eventNamespace)\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          module.debug('Refreshing selector cache');\\n          $prompt         = $module.find(selector.prompt);\\n          $searchButton   = $module.find(selector.searchButton);\\n          $category       = $module.find(selector.category);\\n          $results        = $module.find(selector.results);\\n          $result         = $module.find(selector.result);\\n        },\\n\\n        refreshResults: function() {\\n          $results = $module.find(selector.results);\\n          $result  = $module.find(selector.result);\\n        },\\n\\n        bind: {\\n          events: function() {\\n            module.verbose('Binding events to search');\\n            if(settings.automatic) {\\n              $module\\n                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)\\n              ;\\n              $prompt\\n                .attr('autocomplete', 'off')\\n              ;\\n            }\\n            $module\\n              // prompt\\n              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)\\n              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)\\n              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)\\n              // search button\\n              .on('click'     + eventNamespace, selector.searchButton, module.query)\\n              // results\\n              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)\\n              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)\\n              .on('click'     + eventNamespace, selector.result,  module.event.result.click)\\n            ;\\n          }\\n        },\\n\\n        determine: {\\n          searchFields: function() {\\n            // this makes sure $.extend does not add specified search fields to default fields\\n            // this is the only setting which should not extend defaults\\n            if(parameters && parameters.searchFields !== undefined) {\\n              settings.searchFields = parameters.searchFields;\\n            }\\n          }\\n        },\\n\\n        event: {\\n          input: function() {\\n            clearTimeout(module.timer);\\n            module.timer = setTimeout(module.query, settings.searchDelay);\\n          },\\n          focus: function() {\\n            module.set.focus();\\n            if( module.has.minimumCharacters() ) {\\n              module.query();\\n              if( module.can.show() ) {\\n                module.showResults();\\n              }\\n            }\\n          },\\n          blur: function(event) {\\n            var\\n              pageLostFocus = (document.activeElement === this),\\n              callback      = function() {\\n                module.cancel.query();\\n                module.remove.focus();\\n                module.timer = setTimeout(module.hideResults, settings.hideDelay);\\n              }\\n            ;\\n            if(pageLostFocus) {\\n              return;\\n            }\\n            if(module.resultsClicked) {\\n              module.debug('Determining if user action caused search to close');\\n              $module\\n                .one('click.close' + eventNamespace, selector.results, function(event) {\\n                  if(module.is.inMessage(event) || disabledBubbled) {\\n                    $prompt.focus();\\n                    return;\\n                  }\\n                  disabledBubbled = false;\\n                  if( !module.is.animating() && !module.is.hidden()) {\\n                    callback();\\n                  }\\n                })\\n              ;\\n            }\\n            else {\\n              module.debug('Input blurred without user action, closing results');\\n              callback();\\n            }\\n          },\\n          result: {\\n            mousedown: function() {\\n              module.resultsClicked = true;\\n            },\\n            mouseup: function() {\\n              module.resultsClicked = false;\\n            },\\n            click: function(event) {\\n              module.debug('Search result selected');\\n              var\\n                $result = $(this),\\n                $title  = $result.find(selector.title).eq(0),\\n                $link   = $result.is('a[href]')\\n                  ? $result\\n                  : $result.find('a[href]').eq(0),\\n                href    = $link.attr('href')   || false,\\n                target  = $link.attr('target') || false,\\n                title   = $title.html(),\\n                // title is used for result lookup\\n                value   = ($title.length > 0)\\n                  ? $title.text()\\n                  : false,\\n                results = module.get.results(),\\n                result  = $result.data(metadata.result) || module.get.result(value, results),\\n                returnedValue\\n              ;\\n              if( $.isFunction(settings.onSelect) ) {\\n                if(settings.onSelect.call(element, result, results) === false) {\\n                  module.debug('Custom onSelect callback cancelled default select action');\\n                  disabledBubbled = true;\\n                  return;\\n                }\\n              }\\n              module.hideResults();\\n              if(value) {\\n                module.set.value(value);\\n              }\\n              if(href) {\\n                module.verbose('Opening search link found in result', $link);\\n                if(target == '_blank' || event.ctrlKey) {\\n                  window.open(href);\\n                }\\n                else {\\n                  window.location.href = (href);\\n                }\\n              }\\n            }\\n          }\\n        },\\n        handleKeyboard: function(event) {\\n          var\\n            // force selector refresh\\n            $result      = $module.find(selector.result),\\n            $category    = $module.find(selector.category),\\n            currentIndex = $result.index( $result.filter('.' + className.active) ),\\n            resultSize   = $result.length,\\n\\n            keyCode      = event.which,\\n            keys         = {\\n              backspace : 8,\\n              enter     : 13,\\n              escape    : 27,\\n              upArrow   : 38,\\n              downArrow : 40\\n            },\\n            newIndex\\n          ;\\n          // search shortcuts\\n          if(keyCode == keys.escape) {\\n            module.verbose('Escape key pressed, blurring search field');\\n            module.trigger.blur();\\n          }\\n          if( module.is.visible() ) {\\n            if(keyCode == keys.enter) {\\n              module.verbose('Enter key pressed, selecting active result');\\n              if( $result.filter('.' + className.active).length > 0 ) {\\n                module.event.result.click.call($result.filter('.' + className.active), event);\\n                event.preventDefault();\\n                return false;\\n              }\\n            }\\n            else if(keyCode == keys.upArrow) {\\n              module.verbose('Up key pressed, changing active result');\\n              newIndex = (currentIndex - 1 < 0)\\n                ? currentIndex\\n                : currentIndex - 1\\n              ;\\n              $category\\n                .removeClass(className.active)\\n              ;\\n              $result\\n                .removeClass(className.active)\\n                .eq(newIndex)\\n                  .addClass(className.active)\\n                  .closest($category)\\n                    .addClass(className.active)\\n              ;\\n              event.preventDefault();\\n            }\\n            else if(keyCode == keys.downArrow) {\\n              module.verbose('Down key pressed, changing active result');\\n              newIndex = (currentIndex + 1 >= resultSize)\\n                ? currentIndex\\n                : currentIndex + 1\\n              ;\\n              $category\\n                .removeClass(className.active)\\n              ;\\n              $result\\n                .removeClass(className.active)\\n                .eq(newIndex)\\n                  .addClass(className.active)\\n                  .closest($category)\\n                    .addClass(className.active)\\n              ;\\n              event.preventDefault();\\n            }\\n          }\\n          else {\\n            // query shortcuts\\n            if(keyCode == keys.enter) {\\n              module.verbose('Enter key pressed, executing query');\\n              module.query();\\n              module.set.buttonPressed();\\n              $prompt.one('keyup', module.remove.buttonFocus);\\n            }\\n          }\\n        },\\n\\n        setup: {\\n          api: function(searchTerm) {\\n            var\\n              apiSettings = {\\n                debug             : settings.debug,\\n                on                : false,\\n                cache             : true,\\n                action            : 'search',\\n                urlData           : {\\n                  query : searchTerm\\n                },\\n                onSuccess         : function(response) {\\n                  module.parse.response.call(element, response, searchTerm);\\n                },\\n                onAbort           : function(response) {\\n                },\\n                onFailure         : function() {\\n                  module.displayMessage(error.serverError);\\n                },\\n                onError           : module.error\\n              },\\n              searchHTML\\n            ;\\n            $.extend(true, apiSettings, settings.apiSettings);\\n            module.verbose('Setting up API request', apiSettings);\\n            $module.api(apiSettings);\\n          }\\n        },\\n\\n        can: {\\n          useAPI: function() {\\n            return $.fn.api !== undefined;\\n          },\\n          show: function() {\\n            return module.is.focused() && !module.is.visible() && !module.is.empty();\\n          },\\n          transition: function() {\\n            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');\\n          }\\n        },\\n\\n        is: {\\n          animating: function() {\\n            return $results.hasClass(className.animating);\\n          },\\n          hidden: function() {\\n            return $results.hasClass(className.hidden);\\n          },\\n          inMessage: function(event) {\\n            return (event.target && $(event.target).closest(selector.message).length > 0);\\n          },\\n          empty: function() {\\n            return ($results.html() === '');\\n          },\\n          visible: function() {\\n            return ($results.filter(':visible').length > 0);\\n          },\\n          focused: function() {\\n            return ($prompt.filter(':focus').length > 0);\\n          }\\n        },\\n\\n        trigger: {\\n          blur: function() {\\n            var\\n              events        = document.createEvent('HTMLEvents'),\\n              promptElement = $prompt[0]\\n            ;\\n            if(promptElement) {\\n              module.verbose('Triggering native blur event');\\n              events.initEvent('blur', false, false);\\n              promptElement.dispatchEvent(events);\\n            }\\n          }\\n        },\\n\\n        get: {\\n          inputEvent: function() {\\n            var\\n              prompt = $prompt[0],\\n              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)\\n                ? 'input'\\n                : (prompt !== undefined && prompt.onpropertychange !== undefined)\\n                  ? 'propertychange'\\n                  : 'keyup'\\n            ;\\n            return inputEvent;\\n          },\\n          value: function() {\\n            return $prompt.val();\\n          },\\n          results: function() {\\n            var\\n              results = $module.data(metadata.results)\\n            ;\\n            return results;\\n          },\\n          result: function(value, results) {\\n            var\\n              lookupFields = ['title', 'id'],\\n              result       = false\\n            ;\\n            value = (value !== undefined)\\n              ? value\\n              : module.get.value()\\n            ;\\n            results = (results !== undefined)\\n              ? results\\n              : module.get.results()\\n            ;\\n            if(settings.type === 'category') {\\n              module.debug('Finding result that matches', value);\\n              $.each(results, function(index, category) {\\n                if($.isArray(category.results)) {\\n                  result = module.search.object(value, category.results, lookupFields)[0];\\n                  // don't continue searching if a result is found\\n                  if(result) {\\n                    return false;\\n                  }\\n                }\\n              });\\n            }\\n            else {\\n              module.debug('Finding result in results object', value);\\n              result = module.search.object(value, results, lookupFields)[0];\\n            }\\n            return result || false;\\n          },\\n        },\\n\\n        select: {\\n          firstResult: function() {\\n            module.verbose('Selecting first result');\\n            $result.first().addClass(className.active);\\n          }\\n        },\\n\\n        set: {\\n          focus: function() {\\n            $module.addClass(className.focus);\\n          },\\n          loading: function() {\\n            $module.addClass(className.loading);\\n          },\\n          value: function(value) {\\n            module.verbose('Setting search input value', value);\\n            $prompt\\n              .val(value)\\n            ;\\n          },\\n          type: function(type) {\\n            type = type || settings.type;\\n            if(settings.type == 'category') {\\n              $module.addClass(settings.type);\\n            }\\n          },\\n          buttonPressed: function() {\\n            $searchButton.addClass(className.pressed);\\n          }\\n        },\\n\\n        remove: {\\n          loading: function() {\\n            $module.removeClass(className.loading);\\n          },\\n          focus: function() {\\n            $module.removeClass(className.focus);\\n          },\\n          buttonPressed: function() {\\n            $searchButton.removeClass(className.pressed);\\n          }\\n        },\\n\\n        query: function() {\\n          var\\n            searchTerm = module.get.value(),\\n            cache = module.read.cache(searchTerm)\\n          ;\\n          if( module.has.minimumCharacters() )  {\\n            if(cache) {\\n              module.debug('Reading result from cache', searchTerm);\\n              module.save.results(cache.results);\\n              module.addResults(cache.html);\\n              module.inject.id(cache.results);\\n            }\\n            else {\\n              module.debug('Querying for', searchTerm);\\n              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {\\n                module.search.local(searchTerm);\\n              }\\n              else if( module.can.useAPI() ) {\\n                module.search.remote(searchTerm);\\n              }\\n              else {\\n                module.error(error.source);\\n              }\\n            }\\n            settings.onSearchQuery.call(element, searchTerm);\\n          }\\n          else {\\n            module.hideResults();\\n          }\\n        },\\n\\n        search: {\\n          local: function(searchTerm) {\\n            var\\n              results = module.search.object(searchTerm, settings.content),\\n              searchHTML\\n            ;\\n            module.set.loading();\\n            module.save.results(results);\\n            module.debug('Returned local search results', results);\\n\\n            searchHTML = module.generateResults({\\n              results: results\\n            });\\n            module.remove.loading();\\n            module.addResults(searchHTML);\\n            module.inject.id(results);\\n            module.write.cache(searchTerm, {\\n              html    : searchHTML,\\n              results : results\\n            });\\n          },\\n          remote: function(searchTerm) {\\n            if($module.api('is loading')) {\\n              $module.api('abort');\\n            }\\n            module.setup.api(searchTerm);\\n            $module\\n              .api('query')\\n            ;\\n          },\\n          object: function(searchTerm, source, searchFields) {\\n            var\\n              results      = [],\\n              fuzzyResults = [],\\n              searchExp    = searchTerm.toString().replace(regExp.escape, '\\\\\\\\$&'),\\n              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),\\n\\n              // avoid duplicates when pushing results\\n              addResult = function(array, result) {\\n                var\\n                  notResult      = ($.inArray(result, results) == -1),\\n                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)\\n                ;\\n                if(notResult && notFuzzyResult) {\\n                  array.push(result);\\n                }\\n              }\\n            ;\\n            source = source || settings.source;\\n            searchFields = (searchFields !== undefined)\\n              ? searchFields\\n              : settings.searchFields\\n            ;\\n\\n            // search fields should be array to loop correctly\\n            if(!$.isArray(searchFields)) {\\n              searchFields = [searchFields];\\n            }\\n\\n            // exit conditions if no source\\n            if(source === undefined || source === false) {\\n              module.error(error.source);\\n              return [];\\n            }\\n\\n            // iterate through search fields looking for matches\\n            $.each(searchFields, function(index, field) {\\n              $.each(source, function(label, content) {\\n                var\\n                  fieldExists = (typeof content[field] == 'string')\\n                ;\\n                if(fieldExists) {\\n                  if( content[field].search(matchRegExp) !== -1) {\\n                    // content starts with value (first in results)\\n                    addResult(results, content);\\n                  }\\n                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {\\n                    // content fuzzy matches (last in results)\\n                    addResult(fuzzyResults, content);\\n                  }\\n                }\\n              });\\n            });\\n            return $.merge(results, fuzzyResults);\\n          }\\n        },\\n\\n        fuzzySearch: function(query, term) {\\n          var\\n            termLength  = term.length,\\n            queryLength = query.length\\n          ;\\n          if(typeof query !== 'string') {\\n            return false;\\n          }\\n          query = query.toLowerCase();\\n          term  = term.toLowerCase();\\n          if(queryLength > termLength) {\\n            return false;\\n          }\\n          if(queryLength === termLength) {\\n            return (query === term);\\n          }\\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\\n            var\\n              queryCharacter = query.charCodeAt(characterIndex)\\n            ;\\n            while(nextCharacterIndex < termLength) {\\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\\n                continue search;\\n              }\\n            }\\n            return false;\\n          }\\n          return true;\\n        },\\n\\n        parse: {\\n          response: function(response, searchTerm) {\\n            var\\n              searchHTML = module.generateResults(response)\\n            ;\\n            module.verbose('Parsing server response', response);\\n            if(response !== undefined) {\\n              if(searchTerm !== undefined && response[fields.results] !== undefined) {\\n                module.addResults(searchHTML);\\n                module.inject.id(response[fields.results]);\\n                module.write.cache(searchTerm, {\\n                  html    : searchHTML,\\n                  results : response[fields.results]\\n                });\\n                module.save.results(response[fields.results]);\\n              }\\n            }\\n          }\\n        },\\n\\n        cancel: {\\n          query: function() {\\n            if( module.can.useAPI() ) {\\n              $module.api('abort');\\n            }\\n          }\\n        },\\n\\n        has: {\\n          minimumCharacters: function() {\\n            var\\n              searchTerm    = module.get.value(),\\n              numCharacters = searchTerm.length\\n            ;\\n            return (numCharacters >= settings.minCharacters);\\n          }\\n        },\\n\\n        clear: {\\n          cache: function(value) {\\n            var\\n              cache = $module.data(metadata.cache)\\n            ;\\n            if(!value) {\\n              module.debug('Clearing cache', value);\\n              $module.removeData(metadata.cache);\\n            }\\n            else if(value && cache && cache[value]) {\\n              module.debug('Removing value from cache', value);\\n              delete cache[value];\\n              $module.data(metadata.cache, cache);\\n            }\\n          }\\n        },\\n\\n        read: {\\n          cache: function(name) {\\n            var\\n              cache = $module.data(metadata.cache)\\n            ;\\n            if(settings.cache) {\\n              module.verbose('Checking cache for generated html for query', name);\\n              return (typeof cache == 'object') && (cache[name] !== undefined)\\n                ? cache[name]\\n                : false\\n              ;\\n            }\\n            return false;\\n          }\\n        },\\n\\n        create: {\\n          id: function(resultIndex, categoryIndex) {\\n            var\\n              resultID      = (resultIndex + 1), // not zero indexed\\n              categoryID    = (categoryIndex + 1),\\n              firstCharCode,\\n              letterID,\\n              id\\n            ;\\n            if(categoryIndex !== undefined) {\\n              // start char code for \\\"A\\\"\\n              letterID = String.fromCharCode(97 + categoryIndex);\\n              id          = letterID + resultID;\\n              module.verbose('Creating category result id', id);\\n            }\\n            else {\\n              id = resultID;\\n              module.verbose('Creating result id', id);\\n            }\\n            return id;\\n          },\\n          results: function() {\\n            if($results.length === 0) {\\n              $results = $('<div />')\\n                .addClass(className.results)\\n                .appendTo($module)\\n              ;\\n            }\\n          }\\n        },\\n\\n        inject: {\\n          result: function(result, resultIndex, categoryIndex) {\\n            module.verbose('Injecting result into results');\\n            var\\n              $selectedResult = (categoryIndex !== undefined)\\n                ? $results\\n                    .children().eq(categoryIndex)\\n                      .children(selector.result).eq(resultIndex)\\n                : $results\\n                    .children(selector.result).eq(resultIndex)\\n            ;\\n            module.verbose('Injecting results metadata', $selectedResult);\\n            $selectedResult\\n              .data(metadata.result, result)\\n            ;\\n          },\\n          id: function(results) {\\n            module.debug('Injecting unique ids into results');\\n            var\\n              // since results may be object, we must use counters\\n              categoryIndex = 0,\\n              resultIndex   = 0\\n            ;\\n            if(settings.type === 'category') {\\n              // iterate through each category result\\n              $.each(results, function(index, category) {\\n                resultIndex = 0;\\n                $.each(category.results, function(index, value) {\\n                  var\\n                    result = category.results[index]\\n                  ;\\n                  if(result.id === undefined) {\\n                    result.id = module.create.id(resultIndex, categoryIndex);\\n                  }\\n                  module.inject.result(result, resultIndex, categoryIndex);\\n                  resultIndex++;\\n                });\\n                categoryIndex++;\\n              });\\n            }\\n            else {\\n              // top level\\n              $.each(results, function(index, value) {\\n                var\\n                  result = results[index]\\n                ;\\n                if(result.id === undefined) {\\n                  result.id = module.create.id(resultIndex);\\n                }\\n                module.inject.result(result, resultIndex);\\n                resultIndex++;\\n              });\\n            }\\n            return results;\\n          }\\n        },\\n\\n        save: {\\n          results: function(results) {\\n            module.verbose('Saving current search results to metadata', results);\\n            $module.data(metadata.results, results);\\n          }\\n        },\\n\\n        write: {\\n          cache: function(name, value) {\\n            var\\n              cache = ($module.data(metadata.cache) !== undefined)\\n                ? $module.data(metadata.cache)\\n                : {}\\n            ;\\n            if(settings.cache) {\\n              module.verbose('Writing generated html to cache', name, value);\\n              cache[name] = value;\\n              $module\\n                .data(metadata.cache, cache)\\n              ;\\n            }\\n          }\\n        },\\n\\n        addResults: function(html) {\\n          if( $.isFunction(settings.onResultsAdd) ) {\\n            if( settings.onResultsAdd.call($results, html) === false ) {\\n              module.debug('onResultsAdd callback cancelled default action');\\n              return false;\\n            }\\n          }\\n          if(html) {\\n            $results\\n              .html(html)\\n            ;\\n            module.refreshResults();\\n            if(settings.selectFirstResult) {\\n              module.select.firstResult();\\n            }\\n            module.showResults();\\n          }\\n          else {\\n            module.hideResults();\\n          }\\n        },\\n\\n        showResults: function() {\\n          if(!module.is.visible()) {\\n            if( module.can.transition() ) {\\n              module.debug('Showing results with css animations');\\n              $results\\n                .transition({\\n                  animation  : settings.transition + ' in',\\n                  debug      : settings.debug,\\n                  verbose    : settings.verbose,\\n                  duration   : settings.duration,\\n                  queue      : true\\n                })\\n              ;\\n            }\\n            else {\\n              module.debug('Showing results with javascript');\\n              $results\\n                .stop()\\n                .fadeIn(settings.duration, settings.easing)\\n              ;\\n            }\\n            settings.onResultsOpen.call($results);\\n          }\\n        },\\n        hideResults: function() {\\n          if( module.is.visible() ) {\\n            if( module.can.transition() ) {\\n              module.debug('Hiding results with css animations');\\n              $results\\n                .transition({\\n                  animation  : settings.transition + ' out',\\n                  debug      : settings.debug,\\n                  verbose    : settings.verbose,\\n                  duration   : settings.duration,\\n                  queue      : true\\n                })\\n              ;\\n            }\\n            else {\\n              module.debug('Hiding results with javascript');\\n              $results\\n                .stop()\\n                .fadeOut(settings.duration, settings.easing)\\n              ;\\n            }\\n            settings.onResultsClose.call($results);\\n          }\\n        },\\n\\n        generateResults: function(response) {\\n          module.debug('Generating html from response', response);\\n          var\\n            template       = settings.templates[settings.type],\\n            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),\\n            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),\\n            html           = ''\\n          ;\\n          if(isProperObject || isProperArray ) {\\n            if(settings.maxResults > 0) {\\n              if(isProperObject) {\\n                if(settings.type == 'standard') {\\n                  module.error(error.maxResults);\\n                }\\n              }\\n              else {\\n                response[fields.results] = response[fields.results].slice(0, settings.maxResults);\\n              }\\n            }\\n            if($.isFunction(template)) {\\n              html = template(response, fields);\\n            }\\n            else {\\n              module.error(error.noTemplate, false);\\n            }\\n          }\\n          else if(settings.showNoResults) {\\n            html = module.displayMessage(error.noResults, 'empty');\\n          }\\n          settings.onResults.call(element, response);\\n          return html;\\n        },\\n\\n        displayMessage: function(text, type) {\\n          type = type || 'standard';\\n          module.debug('Displaying message', text, type);\\n          module.addResults( settings.templates.message(text, type) );\\n          return settings.templates.message(text, type);\\n        },\\n\\n        setting: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            settings[name] = value;\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if($allModules.length > 1) {\\n              title += ' ' + '(' + $allModules.length + ')';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.search.settings = {\\n\\n  name              : 'Search',\\n  namespace         : 'search',\\n\\n  silent            : false,\\n  debug             : false,\\n  verbose           : false,\\n  performance       : true,\\n\\n  // template to use (specified in settings.templates)\\n  type              : 'standard',\\n\\n  // minimum characters required to search\\n  minCharacters     : 1,\\n\\n  // whether to select first result after searching automatically\\n  selectFirstResult : false,\\n\\n  // API config\\n  apiSettings       : false,\\n\\n  // object to search\\n  source            : false,\\n\\n  // fields to search\\n  searchFields   : [\\n    'title',\\n    'description'\\n  ],\\n\\n  // field to display in standard results template\\n  displayField   : '',\\n\\n  // whether to include fuzzy results in local search\\n  searchFullText : true,\\n\\n  // whether to add events to prompt automatically\\n  automatic      : true,\\n\\n  // delay before hiding menu after blur\\n  hideDelay      : 0,\\n\\n  // delay before searching\\n  searchDelay    : 200,\\n\\n  // maximum results returned from local\\n  maxResults     : 7,\\n\\n  // whether to store lookups in local cache\\n  cache          : true,\\n\\n  // whether no results errors should be shown\\n  showNoResults  : true,\\n\\n  // transition settings\\n  transition     : 'scale',\\n  duration       : 200,\\n  easing         : 'easeOutExpo',\\n\\n  // callbacks\\n  onSelect       : false,\\n  onResultsAdd   : false,\\n\\n  onSearchQuery  : function(query){},\\n  onResults      : function(response){},\\n\\n  onResultsOpen  : function(){},\\n  onResultsClose : function(){},\\n\\n  className: {\\n    animating : 'animating',\\n    active    : 'active',\\n    empty     : 'empty',\\n    focus     : 'focus',\\n    hidden    : 'hidden',\\n    loading   : 'loading',\\n    results   : 'results',\\n    pressed   : 'down'\\n  },\\n\\n  error : {\\n    source      : 'Cannot search. No source used, and Semantic API module was not included',\\n    noResults   : 'Your search returned no results',\\n    logging     : 'Error in debug logging, exiting.',\\n    noEndpoint  : 'No search endpoint was specified',\\n    noTemplate  : 'A valid template name was not specified.',\\n    serverError : 'There was an issue querying the server.',\\n    maxResults  : 'Results must be an array to use maxResults setting',\\n    method      : 'The method you called is not defined.'\\n  },\\n\\n  metadata: {\\n    cache   : 'cache',\\n    results : 'results',\\n    result  : 'result'\\n  },\\n\\n  regExp: {\\n    escape     : /[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\\\^\\\\$\\\\|]/g,\\n    beginsWith : '(?:\\\\s|^)'\\n  },\\n\\n  // maps api response attributes to internal representation\\n  fields: {\\n    categories      : 'results',     // array of categories (category view)\\n    categoryName    : 'name',        // name of category (category view)\\n    categoryResults : 'results',     // array of results (category view)\\n    description     : 'description', // result description\\n    image           : 'image',       // result image\\n    price           : 'price',       // result price\\n    results         : 'results',     // array of results (standard)\\n    title           : 'title',       // result title\\n    url             : 'url',         // result url\\n    action          : 'action',      // \\\"view more\\\" object name\\n    actionText      : 'text',        // \\\"view more\\\" text\\n    actionURL       : 'url'          // \\\"view more\\\" url\\n  },\\n\\n  selector : {\\n    prompt       : '.prompt',\\n    searchButton : '.search.button',\\n    results      : '.results',\\n    message      : '.results > .message',\\n    category     : '.category',\\n    result       : '.result',\\n    title        : '.title, .name'\\n  },\\n\\n  templates: {\\n    escape: function(string) {\\n      var\\n        badChars     = /[&<>\\\"'`]/g,\\n        shouldEscape = /[&<>\\\"'`]/,\\n        escape       = {\\n          \\\"&\\\": \\\"&amp;\\\",\\n          \\\"<\\\": \\\"&lt;\\\",\\n          \\\">\\\": \\\"&gt;\\\",\\n          '\\\"': \\\"&quot;\\\",\\n          \\\"'\\\": \\\"&#x27;\\\",\\n          \\\"`\\\": \\\"&#x60;\\\"\\n        },\\n        escapedChar  = function(chr) {\\n          return escape[chr];\\n        }\\n      ;\\n      if(shouldEscape.test(string)) {\\n        return string.replace(badChars, escapedChar);\\n      }\\n      return string;\\n    },\\n    message: function(message, type) {\\n      var\\n        html = ''\\n      ;\\n      if(message !== undefined && type !== undefined) {\\n        html +=  ''\\n          + '<div class=\\\"message ' + type + '\\\">'\\n        ;\\n        // message type\\n        if(type == 'empty') {\\n          html += ''\\n            + '<div class=\\\"header\\\">No Results</div class=\\\"header\\\">'\\n            + '<div class=\\\"description\\\">' + message + '</div class=\\\"description\\\">'\\n          ;\\n        }\\n        else {\\n          html += ' <div class=\\\"description\\\">' + message + '</div>';\\n        }\\n        html += '</div>';\\n      }\\n      return html;\\n    },\\n    category: function(response, fields) {\\n      var\\n        html = '',\\n        escape = $.fn.search.settings.templates.escape\\n      ;\\n      if(response[fields.categoryResults] !== undefined) {\\n\\n        // each category\\n        $.each(response[fields.categoryResults], function(index, category) {\\n          if(category[fields.results] !== undefined && category.results.length > 0) {\\n\\n            html  += '<div class=\\\"category\\\">';\\n\\n            if(category[fields.categoryName] !== undefined) {\\n              html += '<div class=\\\"name\\\">' + category[fields.categoryName] + '</div>';\\n            }\\n\\n            // each item inside category\\n            $.each(category.results, function(index, result) {\\n              if(result[fields.url]) {\\n                html  += '<a class=\\\"result\\\" href=\\\"' + result[fields.url] + '\\\">';\\n              }\\n              else {\\n                html  += '<a class=\\\"result\\\">';\\n              }\\n              if(result[fields.image] !== undefined) {\\n                html += ''\\n                  + '<div class=\\\"image\\\">'\\n                  + ' <img src=\\\"' + result[fields.image] + '\\\">'\\n                  + '</div>'\\n                ;\\n              }\\n              html += '<div class=\\\"content\\\">';\\n              if(result[fields.price] !== undefined) {\\n                html += '<div class=\\\"price\\\">' + result[fields.price] + '</div>';\\n              }\\n              if(result[fields.title] !== undefined) {\\n                html += '<div class=\\\"title\\\">' + result[fields.title] + '</div>';\\n              }\\n              if(result[fields.description] !== undefined) {\\n                html += '<div class=\\\"description\\\">' + result[fields.description] + '</div>';\\n              }\\n              html  += ''\\n                + '</div>'\\n              ;\\n              html += '</a>';\\n            });\\n            html  += ''\\n              + '</div>'\\n            ;\\n          }\\n        });\\n        if(response[fields.action]) {\\n          html += ''\\n          + '<a href=\\\"' + response[fields.action][fields.actionURL] + '\\\" class=\\\"action\\\">'\\n          +   response[fields.action][fields.actionText]\\n          + '</a>';\\n        }\\n        return html;\\n      }\\n      return false;\\n    },\\n    standard: function(response, fields) {\\n      var\\n        html = ''\\n      ;\\n      if(response[fields.results] !== undefined) {\\n\\n        // each result\\n        $.each(response[fields.results], function(index, result) {\\n          if(result[fields.url]) {\\n            html  += '<a class=\\\"result\\\" href=\\\"' + result[fields.url] + '\\\">';\\n          }\\n          else {\\n            html  += '<a class=\\\"result\\\">';\\n          }\\n          if(result[fields.image] !== undefined) {\\n            html += ''\\n              + '<div class=\\\"image\\\">'\\n              + ' <img src=\\\"' + result[fields.image] + '\\\">'\\n              + '</div>'\\n            ;\\n          }\\n          html += '<div class=\\\"content\\\">';\\n          if(result[fields.price] !== undefined) {\\n            html += '<div class=\\\"price\\\">' + result[fields.price] + '</div>';\\n          }\\n          if(result[fields.title] !== undefined) {\\n            html += '<div class=\\\"title\\\">' + result[fields.title] + '</div>';\\n          }\\n          if(result[fields.description] !== undefined) {\\n            html += '<div class=\\\"description\\\">' + result[fields.description] + '</div>';\\n          }\\n          html  += ''\\n            + '</div>'\\n          ;\\n          html += '</a>';\\n        });\\n\\n        if(response[fields.action]) {\\n          html += ''\\n          + '<a href=\\\"' + response[fields.action][fields.actionURL] + '\\\" class=\\\"action\\\">'\\n          +   response[fields.action][fields.actionText]\\n          + '</a>';\\n        }\\n        return html;\\n      }\\n      return false;\\n    }\\n  }\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Shape\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.shape = function(parameters) {\\n  var\\n    $allModules     = $(this),\\n    $body           = $('body'),\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n\\n    requestAnimationFrame = window.requestAnimationFrame\\n      || window.mozRequestAnimationFrame\\n      || window.webkitRequestAnimationFrame\\n      || window.msRequestAnimationFrame\\n      || function(callback) { setTimeout(callback, 0); },\\n\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        moduleSelector = $allModules.selector || '',\\n        settings       = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.shape.settings, parameters)\\n          : $.extend({}, $.fn.shape.settings),\\n\\n        // internal aliases\\n        namespace     = settings.namespace,\\n        selector      = settings.selector,\\n        error         = settings.error,\\n        className     = settings.className,\\n\\n        // define namespaces for modules\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        // selector cache\\n        $module       = $(this),\\n        $sides        = $module.find(selector.sides),\\n        $side         = $module.find(selector.side),\\n\\n        // private variables\\n        nextIndex = false,\\n        $activeSide,\\n        $nextSide,\\n\\n        // standard module\\n        element       = this,\\n        instance      = $module.data(moduleNamespace),\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.verbose('Initializing module for', element);\\n          module.set.defaultSide();\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, instance)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module for', element);\\n          $module\\n            .removeData(moduleNamespace)\\n            .off(eventNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          module.verbose('Refreshing selector cache for', element);\\n          $module = $(element);\\n          $sides  = $(this).find(selector.shape);\\n          $side   = $(this).find(selector.side);\\n        },\\n\\n        repaint: function() {\\n          module.verbose('Forcing repaint event');\\n          var\\n            shape          = $sides[0] || document.createElement('div'),\\n            fakeAssignment = shape.offsetWidth\\n          ;\\n        },\\n\\n        animate: function(propertyObject, callback) {\\n          module.verbose('Animating box with properties', propertyObject);\\n          callback = callback || function(event) {\\n            module.verbose('Executing animation callback');\\n            if(event !== undefined) {\\n              event.stopPropagation();\\n            }\\n            module.reset();\\n            module.set.active();\\n          };\\n          settings.beforeChange.call($nextSide[0]);\\n          if(module.get.transitionEvent()) {\\n            module.verbose('Starting CSS animation');\\n            $module\\n              .addClass(className.animating)\\n            ;\\n            $sides\\n              .css(propertyObject)\\n              .one(module.get.transitionEvent(), callback)\\n            ;\\n            module.set.duration(settings.duration);\\n            requestAnimationFrame(function() {\\n              $module\\n                .addClass(className.animating)\\n              ;\\n              $activeSide\\n                .addClass(className.hidden)\\n              ;\\n            });\\n          }\\n          else {\\n            callback();\\n          }\\n        },\\n\\n        queue: function(method) {\\n          module.debug('Queueing animation of', method);\\n          $sides\\n            .one(module.get.transitionEvent(), function() {\\n              module.debug('Executing queued animation');\\n              setTimeout(function(){\\n                $module.shape(method);\\n              }, 0);\\n            })\\n          ;\\n        },\\n\\n        reset: function() {\\n          module.verbose('Animating states reset');\\n          $module\\n            .removeClass(className.animating)\\n            .attr('style', '')\\n            .removeAttr('style')\\n          ;\\n          // removeAttr style does not consistently work in safari\\n          $sides\\n            .attr('style', '')\\n            .removeAttr('style')\\n          ;\\n          $side\\n            .attr('style', '')\\n            .removeAttr('style')\\n            .removeClass(className.hidden)\\n          ;\\n          $nextSide\\n            .removeClass(className.animating)\\n            .attr('style', '')\\n            .removeAttr('style')\\n          ;\\n        },\\n\\n        is: {\\n          complete: function() {\\n            return ($side.filter('.' + className.active)[0] == $nextSide[0]);\\n          },\\n          animating: function() {\\n            return $module.hasClass(className.animating);\\n          }\\n        },\\n\\n        set: {\\n\\n          defaultSide: function() {\\n            $activeSide = $module.find('.' + settings.className.active);\\n            $nextSide   = ( $activeSide.next(selector.side).length > 0 )\\n              ? $activeSide.next(selector.side)\\n              : $module.find(selector.side).first()\\n            ;\\n            nextIndex = false;\\n            module.verbose('Active side set to', $activeSide);\\n            module.verbose('Next side set to', $nextSide);\\n          },\\n\\n          duration: function(duration) {\\n            duration = duration || settings.duration;\\n            duration = (typeof duration == 'number')\\n              ? duration + 'ms'\\n              : duration\\n            ;\\n            module.verbose('Setting animation duration', duration);\\n            if(settings.duration || settings.duration === 0) {\\n              $sides.add($side)\\n                .css({\\n                  '-webkit-transition-duration': duration,\\n                  '-moz-transition-duration': duration,\\n                  '-ms-transition-duration': duration,\\n                  '-o-transition-duration': duration,\\n                  'transition-duration': duration\\n                })\\n              ;\\n            }\\n          },\\n\\n          currentStageSize: function() {\\n            var\\n              $activeSide = $module.find('.' + settings.className.active),\\n              width       = $activeSide.outerWidth(true),\\n              height      = $activeSide.outerHeight(true)\\n            ;\\n            $module\\n              .css({\\n                width: width,\\n                height: height\\n              })\\n            ;\\n          },\\n\\n          stageSize: function() {\\n            var\\n              $clone      = $module.clone().addClass(className.loading),\\n              $activeSide = $clone.find('.' + settings.className.active),\\n              $nextSide   = (nextIndex)\\n                ? $clone.find(selector.side).eq(nextIndex)\\n                : ( $activeSide.next(selector.side).length > 0 )\\n                  ? $activeSide.next(selector.side)\\n                  : $clone.find(selector.side).first(),\\n              newWidth    = (settings.width == 'next')\\n                ? $nextSide.outerWidth(true)\\n                : (settings.width == 'initial')\\n                  ? $module.width()\\n                  : settings.width,\\n              newHeight    = (settings.height == 'next')\\n                ? $nextSide.outerHeight(true)\\n                : (settings.height == 'initial')\\n                  ? $module.height()\\n                  : settings.height\\n            ;\\n            $activeSide.removeClass(className.active);\\n            $nextSide.addClass(className.active);\\n            $clone.insertAfter($module);\\n            $clone.remove();\\n            if(settings.width != 'auto') {\\n              $module.css('width', newWidth + settings.jitter);\\n              module.verbose('Specifying width during animation', newWidth);\\n            }\\n            if(settings.height != 'auto') {\\n              $module.css('height', newHeight + settings.jitter);\\n              module.verbose('Specifying height during animation', newHeight);\\n            }\\n          },\\n\\n          nextSide: function(selector) {\\n            nextIndex = selector;\\n            $nextSide = $side.filter(selector);\\n            nextIndex = $side.index($nextSide);\\n            if($nextSide.length === 0) {\\n              module.set.defaultSide();\\n              module.error(error.side);\\n            }\\n            module.verbose('Next side manually set to', $nextSide);\\n          },\\n\\n          active: function() {\\n            module.verbose('Setting new side to active', $nextSide);\\n            $side\\n              .removeClass(className.active)\\n            ;\\n            $nextSide\\n              .addClass(className.active)\\n            ;\\n            settings.onChange.call($nextSide[0]);\\n            module.set.defaultSide();\\n          }\\n        },\\n\\n        flip: {\\n\\n          up: function() {\\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\\n              module.debug('Side already visible', $nextSide);\\n              return;\\n            }\\n            if( !module.is.animating()) {\\n              module.debug('Flipping up', $nextSide);\\n              var\\n                transform = module.get.transform.up()\\n              ;\\n              module.set.stageSize();\\n              module.stage.above();\\n              module.animate(transform);\\n            }\\n            else {\\n              module.queue('flip up');\\n            }\\n          },\\n\\n          down: function() {\\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\\n              module.debug('Side already visible', $nextSide);\\n              return;\\n            }\\n            if( !module.is.animating()) {\\n              module.debug('Flipping down', $nextSide);\\n              var\\n                transform = module.get.transform.down()\\n              ;\\n              module.set.stageSize();\\n              module.stage.below();\\n              module.animate(transform);\\n            }\\n            else {\\n              module.queue('flip down');\\n            }\\n          },\\n\\n          left: function() {\\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\\n              module.debug('Side already visible', $nextSide);\\n              return;\\n            }\\n            if( !module.is.animating()) {\\n              module.debug('Flipping left', $nextSide);\\n              var\\n                transform = module.get.transform.left()\\n              ;\\n              module.set.stageSize();\\n              module.stage.left();\\n              module.animate(transform);\\n            }\\n            else {\\n              module.queue('flip left');\\n            }\\n          },\\n\\n          right: function() {\\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\\n              module.debug('Side already visible', $nextSide);\\n              return;\\n            }\\n            if( !module.is.animating()) {\\n              module.debug('Flipping right', $nextSide);\\n              var\\n                transform = module.get.transform.right()\\n              ;\\n              module.set.stageSize();\\n              module.stage.right();\\n              module.animate(transform);\\n            }\\n            else {\\n              module.queue('flip right');\\n            }\\n          },\\n\\n          over: function() {\\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\\n              module.debug('Side already visible', $nextSide);\\n              return;\\n            }\\n            if( !module.is.animating()) {\\n              module.debug('Flipping over', $nextSide);\\n              module.set.stageSize();\\n              module.stage.behind();\\n              module.animate(module.get.transform.over() );\\n            }\\n            else {\\n              module.queue('flip over');\\n            }\\n          },\\n\\n          back: function() {\\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\\n              module.debug('Side already visible', $nextSide);\\n              return;\\n            }\\n            if( !module.is.animating()) {\\n              module.debug('Flipping back', $nextSide);\\n              module.set.stageSize();\\n              module.stage.behind();\\n              module.animate(module.get.transform.back() );\\n            }\\n            else {\\n              module.queue('flip back');\\n            }\\n          }\\n\\n        },\\n\\n        get: {\\n\\n          transform: {\\n            up: function() {\\n              var\\n                translate = {\\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\\n                  z: -($activeSide.outerHeight(true) / 2)\\n                }\\n              ;\\n              return {\\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\\n              };\\n            },\\n\\n            down: function() {\\n              var\\n                translate = {\\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\\n                  z: -($activeSide.outerHeight(true) / 2)\\n                }\\n              ;\\n              return {\\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\\n              };\\n            },\\n\\n            left: function() {\\n              var\\n                translate = {\\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\\n                  z : -($activeSide.outerWidth(true) / 2)\\n                }\\n              ;\\n              return {\\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\\n              };\\n            },\\n\\n            right: function() {\\n              var\\n                translate = {\\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\\n                  z : -($activeSide.outerWidth(true) / 2)\\n                }\\n              ;\\n              return {\\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\\n              };\\n            },\\n\\n            over: function() {\\n              var\\n                translate = {\\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\\n                }\\n              ;\\n              return {\\n                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\\n              };\\n            },\\n\\n            back: function() {\\n              var\\n                translate = {\\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\\n                }\\n              ;\\n              return {\\n                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\\n              };\\n            }\\n          },\\n\\n          transitionEvent: function() {\\n            var\\n              element     = document.createElement('element'),\\n              transitions = {\\n                'transition'       :'transitionend',\\n                'OTransition'      :'oTransitionEnd',\\n                'MozTransition'    :'transitionend',\\n                'WebkitTransition' :'webkitTransitionEnd'\\n              },\\n              transition\\n            ;\\n            for(transition in transitions){\\n              if( element.style[transition] !== undefined ){\\n                return transitions[transition];\\n              }\\n            }\\n          },\\n\\n          nextSide: function() {\\n            return ( $activeSide.next(selector.side).length > 0 )\\n              ? $activeSide.next(selector.side)\\n              : $module.find(selector.side).first()\\n            ;\\n          }\\n\\n        },\\n\\n        stage: {\\n\\n          above: function() {\\n            var\\n              box = {\\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\\n                depth  : {\\n                  active : ($nextSide.outerHeight(true) / 2),\\n                  next   : ($activeSide.outerHeight(true) / 2)\\n                }\\n              }\\n            ;\\n            module.verbose('Setting the initial animation position as above', $nextSide, box);\\n            $sides\\n              .css({\\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $activeSide\\n              .css({\\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $nextSide\\n              .addClass(className.animating)\\n              .css({\\n                'top'       : box.origin + 'px',\\n                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\\n              })\\n            ;\\n          },\\n\\n          below: function() {\\n            var\\n              box = {\\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\\n                depth  : {\\n                  active : ($nextSide.outerHeight(true) / 2),\\n                  next   : ($activeSide.outerHeight(true) / 2)\\n                }\\n              }\\n            ;\\n            module.verbose('Setting the initial animation position as below', $nextSide, box);\\n            $sides\\n              .css({\\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $activeSide\\n              .css({\\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $nextSide\\n              .addClass(className.animating)\\n              .css({\\n                'top'       : box.origin + 'px',\\n                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\\n              })\\n            ;\\n          },\\n\\n          left: function() {\\n            var\\n              height = {\\n                active : $activeSide.outerWidth(true),\\n                next   : $nextSide.outerWidth(true)\\n              },\\n              box = {\\n                origin : ( ( height.active - height.next ) / 2),\\n                depth  : {\\n                  active : (height.next / 2),\\n                  next   : (height.active / 2)\\n                }\\n              }\\n            ;\\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\\n            $sides\\n              .css({\\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $activeSide\\n              .css({\\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $nextSide\\n              .addClass(className.animating)\\n              .css({\\n                'left'      : box.origin + 'px',\\n                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\\n              })\\n            ;\\n          },\\n\\n          right: function() {\\n            var\\n              height = {\\n                active : $activeSide.outerWidth(true),\\n                next   : $nextSide.outerWidth(true)\\n              },\\n              box = {\\n                origin : ( ( height.active - height.next ) / 2),\\n                depth  : {\\n                  active : (height.next / 2),\\n                  next   : (height.active / 2)\\n                }\\n              }\\n            ;\\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\\n            $sides\\n              .css({\\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $activeSide\\n              .css({\\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\\n              })\\n            ;\\n            $nextSide\\n              .addClass(className.animating)\\n              .css({\\n                'left'      : box.origin + 'px',\\n                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\\n              })\\n            ;\\n          },\\n\\n          behind: function() {\\n            var\\n              height = {\\n                active : $activeSide.outerWidth(true),\\n                next   : $nextSide.outerWidth(true)\\n              },\\n              box = {\\n                origin : ( ( height.active - height.next ) / 2),\\n                depth  : {\\n                  active : (height.next / 2),\\n                  next   : (height.active / 2)\\n                }\\n              }\\n            ;\\n            module.verbose('Setting the initial animation position as behind', $nextSide, box);\\n            $activeSide\\n              .css({\\n                'transform' : 'rotateY(0deg)'\\n              })\\n            ;\\n            $nextSide\\n              .addClass(className.animating)\\n              .css({\\n                'left'      : box.origin + 'px',\\n                'transform' : 'rotateY(-180deg)'\\n              })\\n            ;\\n          }\\n        },\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if($allModules.length > 1) {\\n              title += ' ' + '(' + $allModules.length + ')';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.shape.settings = {\\n\\n  // module info\\n  name : 'Shape',\\n\\n  // hide all debug content\\n  silent     : false,\\n\\n  // debug content outputted to console\\n  debug      : false,\\n\\n  // verbose debug output\\n  verbose    : false,\\n\\n  // fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)\\n  jitter     : 0,\\n\\n  // performance data output\\n  performance: true,\\n\\n  // event namespace\\n  namespace  : 'shape',\\n\\n  // width during animation, can be set to 'auto', initial', 'next' or pixel amount\\n  width: 'initial',\\n\\n  // height during animation, can be set to 'auto', 'initial', 'next' or pixel amount\\n  height: 'initial',\\n\\n  // callback occurs on side change\\n  beforeChange : function() {},\\n  onChange     : function() {},\\n\\n  // allow animation to same side\\n  allowRepeats: false,\\n\\n  // animation duration\\n  duration   : false,\\n\\n  // possible errors\\n  error: {\\n    side   : 'You tried to switch to a side that does not exist.',\\n    method : 'The method you called is not defined'\\n  },\\n\\n  // classnames used\\n  className   : {\\n    animating : 'animating',\\n    hidden    : 'hidden',\\n    loading   : 'loading',\\n    active    : 'active'\\n  },\\n\\n  // selectors used\\n  selector    : {\\n    sides : '.sides',\\n    side  : '.side'\\n  }\\n\\n};\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Sidebar\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.sidebar = function(parameters) {\\n  var\\n    $allModules     = $(this),\\n    $window         = $(window),\\n    $document       = $(document),\\n    $html           = $('html'),\\n    $head           = $('head'),\\n\\n    moduleSelector  = $allModules.selector || '',\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n\\n    requestAnimationFrame = window.requestAnimationFrame\\n      || window.mozRequestAnimationFrame\\n      || window.webkitRequestAnimationFrame\\n      || window.msRequestAnimationFrame\\n      || function(callback) { setTimeout(callback, 0); },\\n\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\\n          : $.extend({}, $.fn.sidebar.settings),\\n\\n        selector        = settings.selector,\\n        className       = settings.className,\\n        namespace       = settings.namespace,\\n        regExp          = settings.regExp,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        $module         = $(this),\\n        $context        = $(settings.context),\\n\\n        $sidebars       = $module.children(selector.sidebar),\\n        $fixed          = $context.children(selector.fixed),\\n        $pusher         = $context.children(selector.pusher),\\n        $style,\\n\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        elementNamespace,\\n        id,\\n        currentScroll,\\n        transitionEvent,\\n\\n        module\\n      ;\\n\\n      module      = {\\n\\n        initialize: function() {\\n          module.debug('Initializing sidebar', parameters);\\n\\n          module.create.id();\\n\\n          transitionEvent = module.get.transitionEvent();\\n\\n          if(module.is.ios()) {\\n            module.set.ios();\\n          }\\n\\n          // avoids locking rendering if initialized in onReady\\n          if(settings.delaySetup) {\\n            requestAnimationFrame(module.setup.layout);\\n          }\\n          else {\\n            module.setup.layout();\\n          }\\n\\n          requestAnimationFrame(function() {\\n            module.setup.cache();\\n          });\\n\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        create: {\\n          id: function() {\\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\\n            elementNamespace = '.' + id;\\n            module.verbose('Creating unique id for element', id);\\n          }\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module for', $module);\\n          $module\\n            .off(eventNamespace)\\n            .removeData(moduleNamespace)\\n          ;\\n          if(module.is.ios()) {\\n            module.remove.ios();\\n          }\\n          // bound by uuid\\n          $context.off(elementNamespace);\\n          $window.off(elementNamespace);\\n          $document.off(elementNamespace);\\n        },\\n\\n        event: {\\n          clickaway: function(event) {\\n            var\\n              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),\\n              clickedContext  = ($context.is(event.target))\\n            ;\\n            if(clickedInPusher) {\\n              module.verbose('User clicked on dimmed page');\\n              module.hide();\\n            }\\n            if(clickedContext) {\\n              module.verbose('User clicked on dimmable context (scaled out page)');\\n              module.hide();\\n            }\\n          },\\n          touch: function(event) {\\n            //event.stopPropagation();\\n          },\\n          containScroll: function(event) {\\n            if(element.scrollTop <= 0)  {\\n              element.scrollTop = 1;\\n            }\\n            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {\\n              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;\\n            }\\n          },\\n          scroll: function(event) {\\n            if( $(event.target).closest(selector.sidebar).length === 0 ) {\\n              event.preventDefault();\\n            }\\n          }\\n        },\\n\\n        bind: {\\n          clickaway: function() {\\n            module.verbose('Adding clickaway events to context', $context);\\n            if(settings.closable) {\\n              $context\\n                .on('click'    + elementNamespace, module.event.clickaway)\\n                .on('touchend' + elementNamespace, module.event.clickaway)\\n              ;\\n            }\\n          },\\n          scrollLock: function() {\\n            if(settings.scrollLock) {\\n              module.debug('Disabling page scroll');\\n              $window\\n                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)\\n              ;\\n            }\\n            module.verbose('Adding events to contain sidebar scroll');\\n            $document\\n              .on('touchmove' + elementNamespace, module.event.touch)\\n            ;\\n            $module\\n              .on('scroll' + eventNamespace, module.event.containScroll)\\n            ;\\n          }\\n        },\\n        unbind: {\\n          clickaway: function() {\\n            module.verbose('Removing clickaway events from context', $context);\\n            $context.off(elementNamespace);\\n          },\\n          scrollLock: function() {\\n            module.verbose('Removing scroll lock from page');\\n            $document.off(elementNamespace);\\n            $window.off(elementNamespace);\\n            $module.off('scroll' + eventNamespace);\\n          }\\n        },\\n\\n        add: {\\n          inlineCSS: function() {\\n            var\\n              width     = module.cache.width  || $module.outerWidth(),\\n              height    = module.cache.height || $module.outerHeight(),\\n              isRTL     = module.is.rtl(),\\n              direction = module.get.direction(),\\n              distance  = {\\n                left   : width,\\n                right  : -width,\\n                top    : height,\\n                bottom : -height\\n              },\\n              style\\n            ;\\n\\n            if(isRTL){\\n              module.verbose('RTL detected, flipping widths');\\n              distance.left = -width;\\n              distance.right = width;\\n            }\\n\\n            style  = '<style>';\\n\\n            if(direction === 'left' || direction === 'right') {\\n              module.debug('Adding CSS rules for animation distance', width);\\n              style  += ''\\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\\n                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\\n                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\\n                + ' }'\\n              ;\\n            }\\n            else if(direction === 'top' || direction == 'bottom') {\\n              style  += ''\\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\\n                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\\n                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\\n                + ' }'\\n              ;\\n            }\\n\\n            /* IE is only browser not to create context with transforms */\\n            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */\\n            if( module.is.ie() ) {\\n              if(direction === 'left' || direction === 'right') {\\n                module.debug('Adding CSS rules for animation distance', width);\\n                style  += ''\\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\\n                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\\n                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\\n                  + ' }'\\n                ;\\n              }\\n              else if(direction === 'top' || direction == 'bottom') {\\n                style  += ''\\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\\n                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\\n                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\\n                  + ' }'\\n                ;\\n              }\\n              /* opposite sides visible forces content overlay */\\n              style += ''\\n                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'\\n                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'\\n                + '   -webkit-transform: translate3d(0px, 0, 0);'\\n                + '           transform: translate3d(0px, 0, 0);'\\n                + ' }'\\n              ;\\n            }\\n            style += '</style>';\\n            $style = $(style)\\n              .appendTo($head)\\n            ;\\n            module.debug('Adding sizing css to head', $style);\\n          }\\n        },\\n\\n        refresh: function() {\\n          module.verbose('Refreshing selector cache');\\n          $context  = $(settings.context);\\n          $sidebars = $context.children(selector.sidebar);\\n          $pusher   = $context.children(selector.pusher);\\n          $fixed    = $context.children(selector.fixed);\\n          module.clear.cache();\\n        },\\n\\n        refreshSidebars: function() {\\n          module.verbose('Refreshing other sidebars');\\n          $sidebars = $context.children(selector.sidebar);\\n        },\\n\\n        repaint: function() {\\n          module.verbose('Forcing repaint event');\\n          element.style.display = 'none';\\n          var ignored = element.offsetHeight;\\n          element.scrollTop = element.scrollTop;\\n          element.style.display = '';\\n        },\\n\\n        setup: {\\n          cache: function() {\\n            module.cache = {\\n              width  : $module.outerWidth(),\\n              height : $module.outerHeight(),\\n              rtl    : ($module.css('direction') == 'rtl')\\n            };\\n          },\\n          layout: function() {\\n            if( $context.children(selector.pusher).length === 0 ) {\\n              module.debug('Adding wrapper element for sidebar');\\n              module.error(error.pusher);\\n              $pusher = $('<div class=\\\"pusher\\\" />');\\n              $context\\n                .children()\\n                  .not(selector.omitted)\\n                  .not($sidebars)\\n                  .wrapAll($pusher)\\n              ;\\n              module.refresh();\\n            }\\n            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {\\n              module.debug('Moved sidebar to correct parent element');\\n              module.error(error.movedSidebar, element);\\n              $module.detach().prependTo($context);\\n              module.refresh();\\n            }\\n            module.clear.cache();\\n            module.set.pushable();\\n            module.set.direction();\\n          }\\n        },\\n\\n        attachEvents: function(selector, event) {\\n          var\\n            $toggle = $(selector)\\n          ;\\n          event = $.isFunction(module[event])\\n            ? module[event]\\n            : module.toggle\\n          ;\\n          if($toggle.length > 0) {\\n            module.debug('Attaching sidebar events to element', selector, event);\\n            $toggle\\n              .on('click' + eventNamespace, event)\\n            ;\\n          }\\n          else {\\n            module.error(error.notFound, selector);\\n          }\\n        },\\n\\n        show: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if(module.is.hidden()) {\\n            module.refreshSidebars();\\n            if(settings.overlay)  {\\n              module.error(error.overlay);\\n              settings.transition = 'overlay';\\n            }\\n            module.refresh();\\n            if(module.othersActive()) {\\n              module.debug('Other sidebars currently visible');\\n              if(settings.exclusive) {\\n                // if not overlay queue animation after hide\\n                if(settings.transition != 'overlay') {\\n                  module.hideOthers(module.show);\\n                  return;\\n                }\\n                else {\\n                  module.hideOthers();\\n                }\\n              }\\n              else {\\n                settings.transition = 'overlay';\\n              }\\n            }\\n            module.pushPage(function() {\\n              callback.call(element);\\n              settings.onShow.call(element);\\n            });\\n            settings.onChange.call(element);\\n            settings.onVisible.call(element);\\n          }\\n          else {\\n            module.debug('Sidebar is already visible');\\n          }\\n        },\\n\\n        hide: function(callback) {\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if(module.is.visible() || module.is.animating()) {\\n            module.debug('Hiding sidebar', callback);\\n            module.refreshSidebars();\\n            module.pullPage(function() {\\n              callback.call(element);\\n              settings.onHidden.call(element);\\n            });\\n            settings.onChange.call(element);\\n            settings.onHide.call(element);\\n          }\\n        },\\n\\n        othersAnimating: function() {\\n          return ($sidebars.not($module).filter('.' + className.animating).length > 0);\\n        },\\n        othersVisible: function() {\\n          return ($sidebars.not($module).filter('.' + className.visible).length > 0);\\n        },\\n        othersActive: function() {\\n          return(module.othersVisible() || module.othersAnimating());\\n        },\\n\\n        hideOthers: function(callback) {\\n          var\\n            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),\\n            sidebarCount   = $otherSidebars.length,\\n            callbackCount  = 0\\n          ;\\n          callback = callback || function(){};\\n          $otherSidebars\\n            .sidebar('hide', function() {\\n              callbackCount++;\\n              if(callbackCount == sidebarCount) {\\n                callback();\\n              }\\n            })\\n          ;\\n        },\\n\\n        toggle: function() {\\n          module.verbose('Determining toggled direction');\\n          if(module.is.hidden()) {\\n            module.show();\\n          }\\n          else {\\n            module.hide();\\n          }\\n        },\\n\\n        pushPage: function(callback) {\\n          var\\n            transition = module.get.transition(),\\n            $transition = (transition === 'overlay' || module.othersActive())\\n              ? $module\\n              : $pusher,\\n            animate,\\n            dim,\\n            transitionEnd\\n          ;\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          if(settings.transition == 'scale down') {\\n            module.scrollToTop();\\n          }\\n          module.set.transition(transition);\\n          module.repaint();\\n          animate = function() {\\n            module.bind.clickaway();\\n            module.add.inlineCSS();\\n            module.set.animating();\\n            module.set.visible();\\n          };\\n          dim = function() {\\n            module.set.dimmed();\\n          };\\n          transitionEnd = function(event) {\\n            if( event.target == $transition[0] ) {\\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\\n              module.remove.animating();\\n              module.bind.scrollLock();\\n              callback.call(element);\\n            }\\n          };\\n          $transition.off(transitionEvent + elementNamespace);\\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\\n          requestAnimationFrame(animate);\\n          if(settings.dimPage && !module.othersVisible()) {\\n            requestAnimationFrame(dim);\\n          }\\n        },\\n\\n        pullPage: function(callback) {\\n          var\\n            transition = module.get.transition(),\\n            $transition = (transition == 'overlay' || module.othersActive())\\n              ? $module\\n              : $pusher,\\n            animate,\\n            transitionEnd\\n          ;\\n          callback = $.isFunction(callback)\\n            ? callback\\n            : function(){}\\n          ;\\n          module.verbose('Removing context push state', module.get.direction());\\n\\n          module.unbind.clickaway();\\n          module.unbind.scrollLock();\\n\\n          animate = function() {\\n            module.set.transition(transition);\\n            module.set.animating();\\n            module.remove.visible();\\n            if(settings.dimPage && !module.othersVisible()) {\\n              $pusher.removeClass(className.dimmed);\\n            }\\n          };\\n          transitionEnd = function(event) {\\n            if( event.target == $transition[0] ) {\\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\\n              module.remove.animating();\\n              module.remove.transition();\\n              module.remove.inlineCSS();\\n              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {\\n                module.scrollBack();\\n              }\\n              callback.call(element);\\n            }\\n          };\\n          $transition.off(transitionEvent + elementNamespace);\\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\\n          requestAnimationFrame(animate);\\n        },\\n\\n        scrollToTop: function() {\\n          module.verbose('Scrolling to top of page to avoid animation issues');\\n          currentScroll = $(window).scrollTop();\\n          $module.scrollTop(0);\\n          window.scrollTo(0, 0);\\n        },\\n\\n        scrollBack: function() {\\n          module.verbose('Scrolling back to original page position');\\n          window.scrollTo(0, currentScroll);\\n        },\\n\\n        clear: {\\n          cache: function() {\\n            module.verbose('Clearing cached dimensions');\\n            module.cache = {};\\n          }\\n        },\\n\\n        set: {\\n\\n          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios\\n          ios: function() {\\n            $html.addClass(className.ios);\\n          },\\n\\n          // container\\n          pushed: function() {\\n            $context.addClass(className.pushed);\\n          },\\n          pushable: function() {\\n            $context.addClass(className.pushable);\\n          },\\n\\n          // pusher\\n          dimmed: function() {\\n            $pusher.addClass(className.dimmed);\\n          },\\n\\n          // sidebar\\n          active: function() {\\n            $module.addClass(className.active);\\n          },\\n          animating: function() {\\n            $module.addClass(className.animating);\\n          },\\n          transition: function(transition) {\\n            transition = transition || module.get.transition();\\n            $module.addClass(transition);\\n          },\\n          direction: function(direction) {\\n            direction = direction || module.get.direction();\\n            $module.addClass(className[direction]);\\n          },\\n          visible: function() {\\n            $module.addClass(className.visible);\\n          },\\n          overlay: function() {\\n            $module.addClass(className.overlay);\\n          }\\n        },\\n        remove: {\\n\\n          inlineCSS: function() {\\n            module.debug('Removing inline css styles', $style);\\n            if($style && $style.length > 0) {\\n              $style.remove();\\n            }\\n          },\\n\\n          // ios scroll on html not document\\n          ios: function() {\\n            $html.removeClass(className.ios);\\n          },\\n\\n          // context\\n          pushed: function() {\\n            $context.removeClass(className.pushed);\\n          },\\n          pushable: function() {\\n            $context.removeClass(className.pushable);\\n          },\\n\\n          // sidebar\\n          active: function() {\\n            $module.removeClass(className.active);\\n          },\\n          animating: function() {\\n            $module.removeClass(className.animating);\\n          },\\n          transition: function(transition) {\\n            transition = transition || module.get.transition();\\n            $module.removeClass(transition);\\n          },\\n          direction: function(direction) {\\n            direction = direction || module.get.direction();\\n            $module.removeClass(className[direction]);\\n          },\\n          visible: function() {\\n            $module.removeClass(className.visible);\\n          },\\n          overlay: function() {\\n            $module.removeClass(className.overlay);\\n          }\\n        },\\n\\n        get: {\\n          direction: function() {\\n            if($module.hasClass(className.top)) {\\n              return className.top;\\n            }\\n            else if($module.hasClass(className.right)) {\\n              return className.right;\\n            }\\n            else if($module.hasClass(className.bottom)) {\\n              return className.bottom;\\n            }\\n            return className.left;\\n          },\\n          transition: function() {\\n            var\\n              direction = module.get.direction(),\\n              transition\\n            ;\\n            transition = ( module.is.mobile() )\\n              ? (settings.mobileTransition == 'auto')\\n                ? settings.defaultTransition.mobile[direction]\\n                : settings.mobileTransition\\n              : (settings.transition == 'auto')\\n                ? settings.defaultTransition.computer[direction]\\n                : settings.transition\\n            ;\\n            module.verbose('Determined transition', transition);\\n            return transition;\\n          },\\n          transitionEvent: function() {\\n            var\\n              element     = document.createElement('element'),\\n              transitions = {\\n                'transition'       :'transitionend',\\n                'OTransition'      :'oTransitionEnd',\\n                'MozTransition'    :'transitionend',\\n                'WebkitTransition' :'webkitTransitionEnd'\\n              },\\n              transition\\n            ;\\n            for(transition in transitions){\\n              if( element.style[transition] !== undefined ){\\n                return transitions[transition];\\n              }\\n            }\\n          }\\n        },\\n\\n        is: {\\n\\n          ie: function() {\\n            var\\n              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),\\n              isIE   = ('ActiveXObject' in window)\\n            ;\\n            return (isIE11 || isIE);\\n          },\\n\\n          ios: function() {\\n            var\\n              userAgent      = navigator.userAgent,\\n              isIOS          = userAgent.match(regExp.ios),\\n              isMobileChrome = userAgent.match(regExp.mobileChrome)\\n            ;\\n            if(isIOS && !isMobileChrome) {\\n              module.verbose('Browser was found to be iOS', userAgent);\\n              return true;\\n            }\\n            else {\\n              return false;\\n            }\\n          },\\n          mobile: function() {\\n            var\\n              userAgent    = navigator.userAgent,\\n              isMobile     = userAgent.match(regExp.mobile)\\n            ;\\n            if(isMobile) {\\n              module.verbose('Browser was found to be mobile', userAgent);\\n              return true;\\n            }\\n            else {\\n              module.verbose('Browser is not mobile, using regular transition', userAgent);\\n              return false;\\n            }\\n          },\\n          hidden: function() {\\n            return !module.is.visible();\\n          },\\n          visible: function() {\\n            return $module.hasClass(className.visible);\\n          },\\n          // alias\\n          open: function() {\\n            return module.is.visible();\\n          },\\n          closed: function() {\\n            return module.is.hidden();\\n          },\\n          vertical: function() {\\n            return $module.hasClass(className.top);\\n          },\\n          animating: function() {\\n            return $context.hasClass(className.animating);\\n          },\\n          rtl: function () {\\n            if(module.cache.rtl === undefined) {\\n              module.cache.rtl = ($module.css('direction') == 'rtl');\\n            }\\n            return module.cache.rtl;\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      }\\n    ;\\n\\n    if(methodInvoked) {\\n      if(instance === undefined) {\\n        module.initialize();\\n      }\\n      module.invoke(query);\\n    }\\n    else {\\n      if(instance !== undefined) {\\n        module.invoke('destroy');\\n      }\\n      module.initialize();\\n    }\\n  });\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.sidebar.settings = {\\n\\n  name              : 'Sidebar',\\n  namespace         : 'sidebar',\\n\\n  silent            : false,\\n  debug             : false,\\n  verbose           : false,\\n  performance       : true,\\n\\n  transition        : 'auto',\\n  mobileTransition  : 'auto',\\n\\n  defaultTransition : {\\n    computer: {\\n      left   : 'uncover',\\n      right  : 'uncover',\\n      top    : 'overlay',\\n      bottom : 'overlay'\\n    },\\n    mobile: {\\n      left   : 'uncover',\\n      right  : 'uncover',\\n      top    : 'overlay',\\n      bottom : 'overlay'\\n    }\\n  },\\n\\n  context           : 'body',\\n  exclusive         : false,\\n  closable          : true,\\n  dimPage           : true,\\n  scrollLock        : false,\\n  returnScroll      : false,\\n  delaySetup        : false,\\n\\n  duration          : 500,\\n\\n  onChange          : function(){},\\n  onShow            : function(){},\\n  onHide            : function(){},\\n\\n  onHidden          : function(){},\\n  onVisible         : function(){},\\n\\n  className         : {\\n    active    : 'active',\\n    animating : 'animating',\\n    dimmed    : 'dimmed',\\n    ios       : 'ios',\\n    pushable  : 'pushable',\\n    pushed    : 'pushed',\\n    right     : 'right',\\n    top       : 'top',\\n    left      : 'left',\\n    bottom    : 'bottom',\\n    visible   : 'visible'\\n  },\\n\\n  selector: {\\n    fixed   : '.fixed',\\n    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',\\n    pusher  : '.pusher',\\n    sidebar : '.ui.sidebar'\\n  },\\n\\n  regExp: {\\n    ios          : /(iPad|iPhone|iPod)/g,\\n    mobileChrome : /(CriOS)/g,\\n    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g\\n  },\\n\\n  error   : {\\n    method       : 'The method you called is not defined.',\\n    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',\\n    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',\\n    overlay      : 'The overlay setting is no longer supported, use animation: overlay',\\n    notFound     : 'There were no elements that matched the specified selector'\\n  }\\n\\n};\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Sticky\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.sticky = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n    moduleSelector = $allModules.selector || '',\\n\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings              = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.sticky.settings, parameters)\\n          : $.extend({}, $.fn.sticky.settings),\\n\\n        className             = settings.className,\\n        namespace             = settings.namespace,\\n        error                 = settings.error,\\n\\n        eventNamespace        = '.' + namespace,\\n        moduleNamespace       = 'module-' + namespace,\\n\\n        $module               = $(this),\\n        $window               = $(window),\\n        $scroll               = $(settings.scrollContext),\\n        $container,\\n        $context,\\n\\n        selector              = $module.selector || '',\\n        instance              = $module.data(moduleNamespace),\\n\\n        requestAnimationFrame = window.requestAnimationFrame\\n          || window.mozRequestAnimationFrame\\n          || window.webkitRequestAnimationFrame\\n          || window.msRequestAnimationFrame\\n          || function(callback) { setTimeout(callback, 0); },\\n\\n        element         = this,\\n\\n        documentObserver,\\n        observer,\\n        module\\n      ;\\n\\n      module      = {\\n\\n        initialize: function() {\\n\\n          module.determineContainer();\\n          module.determineContext();\\n          module.verbose('Initializing sticky', settings, $container);\\n\\n          module.save.positions();\\n          module.checkErrors();\\n          module.bind.events();\\n\\n          if(settings.observeChanges) {\\n            module.observeChanges();\\n          }\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous instance');\\n          module.reset();\\n          if(documentObserver) {\\n            documentObserver.disconnect();\\n          }\\n          if(observer) {\\n            observer.disconnect();\\n          }\\n          $window\\n            .off('load' + eventNamespace, module.event.load)\\n            .off('resize' + eventNamespace, module.event.resize)\\n          ;\\n          $scroll\\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\\n          ;\\n          $module.removeData(moduleNamespace);\\n        },\\n\\n        observeChanges: function() {\\n          if('MutationObserver' in window) {\\n            documentObserver = new MutationObserver(module.event.documentChanged);\\n            observer         = new MutationObserver(module.event.changed);\\n            documentObserver.observe(document, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            observer.observe(element, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            observer.observe($context[0], {\\n              childList : true,\\n              subtree   : true\\n            });\\n            module.debug('Setting up mutation observer', observer);\\n          }\\n        },\\n\\n        determineContainer: function() {\\n          $container = $module.offsetParent();\\n        },\\n\\n        determineContext: function() {\\n          if(settings.context) {\\n            $context = $(settings.context);\\n          }\\n          else {\\n            $context = $container;\\n          }\\n          if($context.length === 0) {\\n            module.error(error.invalidContext, settings.context, $module);\\n            return;\\n          }\\n        },\\n\\n        checkErrors: function() {\\n          if( module.is.hidden() ) {\\n            module.error(error.visible, $module);\\n          }\\n          if(module.cache.element.height > module.cache.context.height) {\\n            module.reset();\\n            module.error(error.elementSize, $module);\\n            return;\\n          }\\n        },\\n\\n        bind: {\\n          events: function() {\\n            $window\\n              .on('load' + eventNamespace, module.event.load)\\n              .on('resize' + eventNamespace, module.event.resize)\\n            ;\\n            // pub/sub pattern\\n            $scroll\\n              .off('scroll' + eventNamespace)\\n              .on('scroll' + eventNamespace, module.event.scroll)\\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\\n            ;\\n          }\\n        },\\n\\n        event: {\\n          changed: function(mutations) {\\n            clearTimeout(module.timer);\\n            module.timer = setTimeout(function() {\\n              module.verbose('DOM tree modified, updating sticky menu', mutations);\\n              module.refresh();\\n            }, 100);\\n          },\\n          documentChanged: function(mutations) {\\n            [].forEach.call(mutations, function(mutation) {\\n              if(mutation.removedNodes) {\\n                [].forEach.call(mutation.removedNodes, function(node) {\\n                  if(node == element || $(node).find(element).length > 0) {\\n                    module.debug('Element removed from DOM, tearing down events');\\n                    module.destroy();\\n                  }\\n                });\\n              }\\n            });\\n          },\\n          load: function() {\\n            module.verbose('Page contents finished loading');\\n            requestAnimationFrame(module.refresh);\\n          },\\n          resize: function() {\\n            module.verbose('Window resized');\\n            requestAnimationFrame(module.refresh);\\n          },\\n          scroll: function() {\\n            requestAnimationFrame(function() {\\n              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );\\n            });\\n          },\\n          scrollchange: function(event, scrollPosition) {\\n            module.stick(scrollPosition);\\n            settings.onScroll.call(element);\\n          }\\n        },\\n\\n        refresh: function(hardRefresh) {\\n          module.reset();\\n          if(!settings.context) {\\n            module.determineContext();\\n          }\\n          if(hardRefresh) {\\n            module.determineContainer();\\n          }\\n          module.save.positions();\\n          module.stick();\\n          settings.onReposition.call(element);\\n        },\\n\\n        supports: {\\n          sticky: function() {\\n            var\\n              $element = $('<div/>'),\\n              element = $element[0]\\n            ;\\n            $element.addClass(className.supported);\\n            return($element.css('position').match('sticky'));\\n          }\\n        },\\n\\n        save: {\\n          lastScroll: function(scroll) {\\n            module.lastScroll = scroll;\\n          },\\n          elementScroll: function(scroll) {\\n            module.elementScroll = scroll;\\n          },\\n          positions: function() {\\n            var\\n              scrollContext = {\\n                height : $scroll.height()\\n              },\\n              element = {\\n                margin: {\\n                  top    : parseInt($module.css('margin-top'), 10),\\n                  bottom : parseInt($module.css('margin-bottom'), 10),\\n                },\\n                offset : $module.offset(),\\n                width  : $module.outerWidth(),\\n                height : $module.outerHeight()\\n              },\\n              context = {\\n                offset : $context.offset(),\\n                height : $context.outerHeight()\\n              },\\n              container = {\\n                height: $container.outerHeight()\\n              }\\n            ;\\n            if( !module.is.standardScroll() ) {\\n              module.debug('Non-standard scroll. Removing scroll offset from element offset');\\n\\n              scrollContext.top  = $scroll.scrollTop();\\n              scrollContext.left = $scroll.scrollLeft();\\n\\n              element.offset.top  += scrollContext.top;\\n              context.offset.top  += scrollContext.top;\\n              element.offset.left += scrollContext.left;\\n              context.offset.left += scrollContext.left;\\n            }\\n            module.cache = {\\n              fits : ( element.height < scrollContext.height ),\\n              scrollContext : {\\n                height : scrollContext.height\\n              },\\n              element: {\\n                margin : element.margin,\\n                top    : element.offset.top - element.margin.top,\\n                left   : element.offset.left,\\n                width  : element.width,\\n                height : element.height,\\n                bottom : element.offset.top + element.height\\n              },\\n              context: {\\n                top           : context.offset.top,\\n                height        : context.height,\\n                bottom        : context.offset.top + context.height\\n              }\\n            };\\n            module.set.containerSize();\\n            module.set.size();\\n            module.stick();\\n            module.debug('Caching element positions', module.cache);\\n          }\\n        },\\n\\n        get: {\\n          direction: function(scroll) {\\n            var\\n              direction = 'down'\\n            ;\\n            scroll = scroll || $scroll.scrollTop();\\n            if(module.lastScroll !== undefined) {\\n              if(module.lastScroll < scroll) {\\n                direction = 'down';\\n              }\\n              else if(module.lastScroll > scroll) {\\n                direction = 'up';\\n              }\\n            }\\n            return direction;\\n          },\\n          scrollChange: function(scroll) {\\n            scroll = scroll || $scroll.scrollTop();\\n            return (module.lastScroll)\\n              ? (scroll - module.lastScroll)\\n              : 0\\n            ;\\n          },\\n          currentElementScroll: function() {\\n            if(module.elementScroll) {\\n              return module.elementScroll;\\n            }\\n            return ( module.is.top() )\\n              ? Math.abs(parseInt($module.css('top'), 10))    || 0\\n              : Math.abs(parseInt($module.css('bottom'), 10)) || 0\\n            ;\\n          },\\n\\n          elementScroll: function(scroll) {\\n            scroll = scroll || $scroll.scrollTop();\\n            var\\n              element        = module.cache.element,\\n              scrollContext  = module.cache.scrollContext,\\n              delta          = module.get.scrollChange(scroll),\\n              maxScroll      = (element.height - scrollContext.height + settings.offset),\\n              elementScroll  = module.get.currentElementScroll(),\\n              possibleScroll = (elementScroll + delta)\\n            ;\\n            if(module.cache.fits || possibleScroll < 0) {\\n              elementScroll = 0;\\n            }\\n            else if(possibleScroll > maxScroll ) {\\n              elementScroll = maxScroll;\\n            }\\n            else {\\n              elementScroll = possibleScroll;\\n            }\\n            return elementScroll;\\n          }\\n        },\\n\\n        remove: {\\n          lastScroll: function() {\\n            delete module.lastScroll;\\n          },\\n          elementScroll: function(scroll) {\\n            delete module.elementScroll;\\n          },\\n          offset: function() {\\n            $module.css('margin-top', '');\\n          }\\n        },\\n\\n        set: {\\n          offset: function() {\\n            module.verbose('Setting offset on element', settings.offset);\\n            $module\\n              .css('margin-top', settings.offset)\\n            ;\\n          },\\n          containerSize: function() {\\n            var\\n              tagName = $container.get(0).tagName\\n            ;\\n            if(tagName === 'HTML' || tagName == 'body') {\\n              // this can trigger for too many reasons\\n              //module.error(error.container, tagName, $module);\\n              module.determineContainer();\\n            }\\n            else {\\n              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {\\n                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);\\n                $container.css({\\n                  height: module.cache.context.height\\n                });\\n              }\\n            }\\n          },\\n          minimumSize: function() {\\n            var\\n              element   = module.cache.element\\n            ;\\n            $container\\n              .css('min-height', element.height)\\n            ;\\n          },\\n          scroll: function(scroll) {\\n            module.debug('Setting scroll on element', scroll);\\n            if(module.elementScroll == scroll) {\\n              return;\\n            }\\n            if( module.is.top() ) {\\n              $module\\n                .css('bottom', '')\\n                .css('top', -scroll)\\n              ;\\n            }\\n            if( module.is.bottom() ) {\\n              $module\\n                .css('top', '')\\n                .css('bottom', scroll)\\n              ;\\n            }\\n          },\\n          size: function() {\\n            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {\\n              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');\\n              element.style.setProperty('height', module.cache.element.height + 'px', 'important');\\n            }\\n          }\\n        },\\n\\n        is: {\\n          standardScroll: function() {\\n            return ($scroll[0] == window);\\n          },\\n          top: function() {\\n            return $module.hasClass(className.top);\\n          },\\n          bottom: function() {\\n            return $module.hasClass(className.bottom);\\n          },\\n          initialPosition: function() {\\n            return (!module.is.fixed() && !module.is.bound());\\n          },\\n          hidden: function() {\\n            return (!$module.is(':visible'));\\n          },\\n          bound: function() {\\n            return $module.hasClass(className.bound);\\n          },\\n          fixed: function() {\\n            return $module.hasClass(className.fixed);\\n          }\\n        },\\n\\n        stick: function(scroll) {\\n          var\\n            cachedPosition = scroll || $scroll.scrollTop(),\\n            cache          = module.cache,\\n            fits           = cache.fits,\\n            element        = cache.element,\\n            scrollContext  = cache.scrollContext,\\n            context        = cache.context,\\n            offset         = (module.is.bottom() && settings.pushing)\\n              ? settings.bottomOffset\\n              : settings.offset,\\n            scroll         = {\\n              top    : cachedPosition + offset,\\n              bottom : cachedPosition + offset + scrollContext.height\\n            },\\n            direction      = module.get.direction(scroll.top),\\n            elementScroll  = (fits)\\n              ? 0\\n              : module.get.elementScroll(scroll.top),\\n\\n            // shorthand\\n            doesntFit      = !fits,\\n            elementVisible = (element.height !== 0)\\n          ;\\n\\n          if(elementVisible) {\\n\\n            if( module.is.initialPosition() ) {\\n              if(scroll.top >= context.bottom) {\\n                module.debug('Initial element position is bottom of container');\\n                module.bindBottom();\\n              }\\n              else if(scroll.top > element.top) {\\n                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\\n                  module.debug('Initial element position is bottom of container');\\n                  module.bindBottom();\\n                }\\n                else {\\n                  module.debug('Initial element position is fixed');\\n                  module.fixTop();\\n                }\\n              }\\n\\n            }\\n            else if( module.is.fixed() ) {\\n\\n              // currently fixed top\\n              if( module.is.top() ) {\\n                if( scroll.top <= element.top ) {\\n                  module.debug('Fixed element reached top of container');\\n                  module.setInitialPosition();\\n                }\\n                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\\n                  module.debug('Fixed element reached bottom of container');\\n                  module.bindBottom();\\n                }\\n                // scroll element if larger than screen\\n                else if(doesntFit) {\\n                  module.set.scroll(elementScroll);\\n                  module.save.lastScroll(scroll.top);\\n                  module.save.elementScroll(elementScroll);\\n                }\\n              }\\n\\n              // currently fixed bottom\\n              else if(module.is.bottom() ) {\\n\\n                // top edge\\n                if( (scroll.bottom - element.height) <= element.top) {\\n                  module.debug('Bottom fixed rail has reached top of container');\\n                  module.setInitialPosition();\\n                }\\n                // bottom edge\\n                else if(scroll.bottom >= context.bottom) {\\n                  module.debug('Bottom fixed rail has reached bottom of container');\\n                  module.bindBottom();\\n                }\\n                // scroll element if larger than screen\\n                else if(doesntFit) {\\n                  module.set.scroll(elementScroll);\\n                  module.save.lastScroll(scroll.top);\\n                  module.save.elementScroll(elementScroll);\\n                }\\n\\n              }\\n            }\\n            else if( module.is.bottom() ) {\\n              if( scroll.top <= element.top ) {\\n                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');\\n                module.setInitialPosition();\\n              }\\n              else {\\n                if(settings.pushing) {\\n                  if(module.is.bound() && scroll.bottom <= context.bottom ) {\\n                    module.debug('Fixing bottom attached element to bottom of browser.');\\n                    module.fixBottom();\\n                  }\\n                }\\n                else {\\n                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {\\n                    module.debug('Fixing bottom attached element to top of browser.');\\n                    module.fixTop();\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n\\n        bindTop: function() {\\n          module.debug('Binding element to top of parent container');\\n          module.remove.offset();\\n          $module\\n            .css({\\n              left         : '',\\n              top          : '',\\n              marginBottom : ''\\n            })\\n            .removeClass(className.fixed)\\n            .removeClass(className.bottom)\\n            .addClass(className.bound)\\n            .addClass(className.top)\\n          ;\\n          settings.onTop.call(element);\\n          settings.onUnstick.call(element);\\n        },\\n        bindBottom: function() {\\n          module.debug('Binding element to bottom of parent container');\\n          module.remove.offset();\\n          $module\\n            .css({\\n              left         : '',\\n              top          : ''\\n            })\\n            .removeClass(className.fixed)\\n            .removeClass(className.top)\\n            .addClass(className.bound)\\n            .addClass(className.bottom)\\n          ;\\n          settings.onBottom.call(element);\\n          settings.onUnstick.call(element);\\n        },\\n\\n        setInitialPosition: function() {\\n          module.debug('Returning to initial position');\\n          module.unfix();\\n          module.unbind();\\n        },\\n\\n\\n        fixTop: function() {\\n          module.debug('Fixing element to top of page');\\n          module.set.minimumSize();\\n          module.set.offset();\\n          $module\\n            .css({\\n              left         : module.cache.element.left,\\n              bottom       : '',\\n              marginBottom : ''\\n            })\\n            .removeClass(className.bound)\\n            .removeClass(className.bottom)\\n            .addClass(className.fixed)\\n            .addClass(className.top)\\n          ;\\n          settings.onStick.call(element);\\n        },\\n\\n        fixBottom: function() {\\n          module.debug('Sticking element to bottom of page');\\n          module.set.minimumSize();\\n          module.set.offset();\\n          $module\\n            .css({\\n              left         : module.cache.element.left,\\n              bottom       : '',\\n              marginBottom : ''\\n            })\\n            .removeClass(className.bound)\\n            .removeClass(className.top)\\n            .addClass(className.fixed)\\n            .addClass(className.bottom)\\n          ;\\n          settings.onStick.call(element);\\n        },\\n\\n        unbind: function() {\\n          if( module.is.bound() ) {\\n            module.debug('Removing container bound position on element');\\n            module.remove.offset();\\n            $module\\n              .removeClass(className.bound)\\n              .removeClass(className.top)\\n              .removeClass(className.bottom)\\n            ;\\n          }\\n        },\\n\\n        unfix: function() {\\n          if( module.is.fixed() ) {\\n            module.debug('Removing fixed position on element');\\n            module.remove.offset();\\n            $module\\n              .removeClass(className.fixed)\\n              .removeClass(className.top)\\n              .removeClass(className.bottom)\\n            ;\\n            settings.onUnstick.call(element);\\n          }\\n        },\\n\\n        reset: function() {\\n          module.debug('Resetting elements position');\\n          module.unbind();\\n          module.unfix();\\n          module.resetCSS();\\n          module.remove.offset();\\n          module.remove.lastScroll();\\n        },\\n\\n        resetCSS: function() {\\n          $module\\n            .css({\\n              width  : '',\\n              height : ''\\n            })\\n          ;\\n          $container\\n            .css({\\n              height: ''\\n            })\\n          ;\\n        },\\n\\n        setting: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            settings[name] = value;\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 0);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.sticky.settings = {\\n\\n  name           : 'Sticky',\\n  namespace      : 'sticky',\\n\\n  silent         : false,\\n  debug          : false,\\n  verbose        : true,\\n  performance    : true,\\n\\n  // whether to stick in the opposite direction on scroll up\\n  pushing        : false,\\n\\n  context        : false,\\n\\n  // Context to watch scroll events\\n  scrollContext  : window,\\n\\n  // Offset to adjust scroll\\n  offset         : 0,\\n\\n  // Offset to adjust scroll when attached to bottom of screen\\n  bottomOffset   : 0,\\n\\n  jitter         : 5, // will only set container height if difference between context and container is larger than this number\\n\\n  // Whether to automatically observe changes with Mutation Observers\\n  observeChanges : false,\\n\\n  // Called when position is recalculated\\n  onReposition   : function(){},\\n\\n  // Called on each scroll\\n  onScroll       : function(){},\\n\\n  // Called when element is stuck to viewport\\n  onStick        : function(){},\\n\\n  // Called when element is unstuck from viewport\\n  onUnstick      : function(){},\\n\\n  // Called when element reaches top of context\\n  onTop          : function(){},\\n\\n  // Called when element reaches bottom of context\\n  onBottom       : function(){},\\n\\n  error         : {\\n    container      : 'Sticky element must be inside a relative container',\\n    visible        : 'Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.',\\n    method         : 'The method you called is not defined.',\\n    invalidContext : 'Context specified does not exist',\\n    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'\\n  },\\n\\n  className : {\\n    bound     : 'bound',\\n    fixed     : 'fixed',\\n    supported : 'native',\\n    top       : 'top',\\n    bottom    : 'bottom'\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Tab\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.tab = function(parameters) {\\n\\n  var\\n    // use window context if none specified\\n    $allModules     = $.isFunction(this)\\n        ? $(window)\\n        : $(this),\\n\\n    moduleSelector  = $allModules.selector || '',\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n\\n    initializedHistory = false,\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.tab.settings, parameters)\\n          : $.extend({}, $.fn.tab.settings),\\n\\n        className       = settings.className,\\n        metadata        = settings.metadata,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n\\n        eventNamespace  = '.' + settings.namespace,\\n        moduleNamespace = 'module-' + settings.namespace,\\n\\n        $module         = $(this),\\n        $context,\\n        $tabs,\\n\\n        cache           = {},\\n        firstLoad       = true,\\n        recursionDepth  = 0,\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        activeTabPath,\\n        parameterArray,\\n        module,\\n\\n        historyEvent\\n\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.debug('Initializing tab menu item', $module);\\n          module.fix.callbacks();\\n          module.determineTabs();\\n\\n          module.debug('Determining tabs', settings.context, $tabs);\\n          // set up automatic routing\\n          if(settings.auto) {\\n            module.set.auto();\\n          }\\n          module.bind.events();\\n\\n          if(settings.history && !initializedHistory) {\\n            module.initializeHistory();\\n            initializedHistory = true;\\n          }\\n\\n          module.instantiate();\\n        },\\n\\n        instantiate: function () {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.debug('Destroying tabs', $module);\\n          $module\\n            .removeData(moduleNamespace)\\n            .off(eventNamespace)\\n          ;\\n        },\\n\\n        bind: {\\n          events: function() {\\n            // if using $.tab don't add events\\n            if( !$.isWindow( element ) ) {\\n              module.debug('Attaching tab activation events to element', $module);\\n              $module\\n                .on('click' + eventNamespace, module.event.click)\\n              ;\\n            }\\n          }\\n        },\\n\\n        determineTabs: function() {\\n          var\\n            $reference\\n          ;\\n\\n          // determine tab context\\n          if(settings.context === 'parent') {\\n            if($module.closest(selector.ui).length > 0) {\\n              $reference = $module.closest(selector.ui);\\n              module.verbose('Using closest UI element as parent', $reference);\\n            }\\n            else {\\n              $reference = $module;\\n            }\\n            $context = $reference.parent();\\n            module.verbose('Determined parent element for creating context', $context);\\n          }\\n          else if(settings.context) {\\n            $context = $(settings.context);\\n            module.verbose('Using selector for tab context', settings.context, $context);\\n          }\\n          else {\\n            $context = $('body');\\n          }\\n          // find tabs\\n          if(settings.childrenOnly) {\\n            $tabs = $context.children(selector.tabs);\\n            module.debug('Searching tab context children for tabs', $context, $tabs);\\n          }\\n          else {\\n            $tabs = $context.find(selector.tabs);\\n            module.debug('Searching tab context for tabs', $context, $tabs);\\n          }\\n        },\\n\\n        fix: {\\n          callbacks: function() {\\n            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\\n              if(parameters.onTabLoad) {\\n                parameters.onLoad = parameters.onTabLoad;\\n                delete parameters.onTabLoad;\\n                module.error(error.legacyLoad, parameters.onLoad);\\n              }\\n              if(parameters.onTabInit) {\\n                parameters.onFirstLoad = parameters.onTabInit;\\n                delete parameters.onTabInit;\\n                module.error(error.legacyInit, parameters.onFirstLoad);\\n              }\\n              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\\n            }\\n          }\\n        },\\n\\n        initializeHistory: function() {\\n          module.debug('Initializing page state');\\n          if( $.address === undefined ) {\\n            module.error(error.state);\\n            return false;\\n          }\\n          else {\\n            if(settings.historyType == 'state') {\\n              module.debug('Using HTML5 to manage state');\\n              if(settings.path !== false) {\\n                $.address\\n                  .history(true)\\n                  .state(settings.path)\\n                ;\\n              }\\n              else {\\n                module.error(error.path);\\n                return false;\\n              }\\n            }\\n            $.address\\n              .bind('change', module.event.history.change)\\n            ;\\n          }\\n        },\\n\\n        event: {\\n          click: function(event) {\\n            var\\n              tabPath = $(this).data(metadata.tab)\\n            ;\\n            if(tabPath !== undefined) {\\n              if(settings.history) {\\n                module.verbose('Updating page state', event);\\n                $.address.value(tabPath);\\n              }\\n              else {\\n                module.verbose('Changing tab', event);\\n                module.changeTab(tabPath);\\n              }\\n              event.preventDefault();\\n            }\\n            else {\\n              module.debug('No tab specified');\\n            }\\n          },\\n          history: {\\n            change: function(event) {\\n              var\\n                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\\n                pageTitle = settings.templates.determineTitle(tabPath) || false\\n              ;\\n              module.performance.display();\\n              module.debug('History change event', tabPath, event);\\n              historyEvent = event;\\n              if(tabPath !== undefined) {\\n                module.changeTab(tabPath);\\n              }\\n              if(pageTitle) {\\n                $.address.title(pageTitle);\\n              }\\n            }\\n          }\\n        },\\n\\n        refresh: function() {\\n          if(activeTabPath) {\\n            module.debug('Refreshing tab', activeTabPath);\\n            module.changeTab(activeTabPath);\\n          }\\n        },\\n\\n        cache: {\\n\\n          read: function(cacheKey) {\\n            return (cacheKey !== undefined)\\n              ? cache[cacheKey]\\n              : false\\n            ;\\n          },\\n          add: function(cacheKey, content) {\\n            cacheKey = cacheKey || activeTabPath;\\n            module.debug('Adding cached content for', cacheKey);\\n            cache[cacheKey] = content;\\n          },\\n          remove: function(cacheKey) {\\n            cacheKey = cacheKey || activeTabPath;\\n            module.debug('Removing cached content for', cacheKey);\\n            delete cache[cacheKey];\\n          }\\n        },\\n\\n        set: {\\n          auto: function() {\\n            var\\n              url = (typeof settings.path == 'string')\\n                ? settings.path.replace(/\\\\/$/, '') + '/{$tab}'\\n                : '/{$tab}'\\n            ;\\n            module.verbose('Setting up automatic tab retrieval from server', url);\\n            if($.isPlainObject(settings.apiSettings)) {\\n              settings.apiSettings.url = url;\\n            }\\n            else {\\n              settings.apiSettings = {\\n                url: url\\n              };\\n            }\\n          },\\n          loading: function(tabPath) {\\n            var\\n              $tab      = module.get.tabElement(tabPath),\\n              isLoading = $tab.hasClass(className.loading)\\n            ;\\n            if(!isLoading) {\\n              module.verbose('Setting loading state for', $tab);\\n              $tab\\n                .addClass(className.loading)\\n                .siblings($tabs)\\n                  .removeClass(className.active + ' ' + className.loading)\\n              ;\\n              if($tab.length > 0) {\\n                settings.onRequest.call($tab[0], tabPath);\\n              }\\n            }\\n          },\\n          state: function(state) {\\n            $.address.value(state);\\n          }\\n        },\\n\\n        changeTab: function(tabPath) {\\n          var\\n            pushStateAvailable = (window.history && window.history.pushState),\\n            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\\n            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\\n            // only add default path if not remote content\\n            pathArray = (remoteContent && !shouldIgnoreLoad)\\n              ? module.utilities.pathToArray(tabPath)\\n              : module.get.defaultPathArray(tabPath)\\n          ;\\n          tabPath = module.utilities.arrayToPath(pathArray);\\n          $.each(pathArray, function(index, tab) {\\n            var\\n              currentPathArray   = pathArray.slice(0, index + 1),\\n              currentPath        = module.utilities.arrayToPath(currentPathArray),\\n\\n              isTab              = module.is.tab(currentPath),\\n              isLastIndex        = (index + 1 == pathArray.length),\\n\\n              $tab               = module.get.tabElement(currentPath),\\n              $anchor,\\n              nextPathArray,\\n              nextPath,\\n              isLastTab\\n            ;\\n            module.verbose('Looking for tab', tab);\\n            if(isTab) {\\n              module.verbose('Tab was found', tab);\\n              // scope up\\n              activeTabPath  = currentPath;\\n              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\\n\\n              if(isLastIndex) {\\n                isLastTab = true;\\n              }\\n              else {\\n                nextPathArray = pathArray.slice(0, index + 2);\\n                nextPath      = module.utilities.arrayToPath(nextPathArray);\\n                isLastTab     = ( !module.is.tab(nextPath) );\\n                if(isLastTab) {\\n                  module.verbose('Tab parameters found', nextPathArray);\\n                }\\n              }\\n              if(isLastTab && remoteContent) {\\n                if(!shouldIgnoreLoad) {\\n                  module.activate.navigation(currentPath);\\n                  module.fetch.content(currentPath, tabPath);\\n                }\\n                else {\\n                  module.debug('Ignoring remote content on first tab load', currentPath);\\n                  firstLoad = false;\\n                  module.cache.add(tabPath, $tab.html());\\n                  module.activate.all(currentPath);\\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\\n                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\\n                }\\n                return false;\\n              }\\n              else {\\n                module.debug('Opened local tab', currentPath);\\n                module.activate.all(currentPath);\\n                if( !module.cache.read(currentPath) ) {\\n                  module.cache.add(currentPath, true);\\n                  module.debug('First time tab loaded calling tab init');\\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\\n                }\\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\\n              }\\n\\n            }\\n            else if(tabPath.search('/') == -1 && tabPath !== '') {\\n              // look for in page anchor\\n              $anchor     = $('#' + tabPath + ', a[name=\\\"' + tabPath + '\\\"]');\\n              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\\n              $tab        = module.get.tabElement(currentPath);\\n              // if anchor exists use parent tab\\n              if($anchor && $anchor.length > 0 && currentPath) {\\n                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\\n                if( !$tab.hasClass(className.active) ) {\\n                  setTimeout(function() {\\n                    module.scrollTo($anchor);\\n                  }, 0);\\n                }\\n                module.activate.all(currentPath);\\n                if( !module.cache.read(currentPath) ) {\\n                  module.cache.add(currentPath, true);\\n                  module.debug('First time tab loaded calling tab init');\\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\\n                }\\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\\n                return false;\\n              }\\n            }\\n            else {\\n              module.error(error.missingTab, $module, $context, currentPath);\\n              return false;\\n            }\\n          });\\n        },\\n\\n        scrollTo: function($element) {\\n          var\\n            scrollOffset = ($element && $element.length > 0)\\n              ? $element.offset().top\\n              : false\\n          ;\\n          if(scrollOffset !== false) {\\n            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\\n            $(document).scrollTop(scrollOffset);\\n          }\\n        },\\n\\n        update: {\\n          content: function(tabPath, html, evaluateScripts) {\\n            var\\n              $tab = module.get.tabElement(tabPath),\\n              tab  = $tab[0]\\n            ;\\n            evaluateScripts = (evaluateScripts !== undefined)\\n              ? evaluateScripts\\n              : settings.evaluateScripts\\n            ;\\n            if(evaluateScripts) {\\n              module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\\n              $tab.html(html);\\n            }\\n            else {\\n              module.debug('Updating HTML', tabPath, html);\\n              tab.innerHTML = html;\\n            }\\n          }\\n        },\\n\\n        fetch: {\\n\\n          content: function(tabPath, fullTabPath) {\\n            var\\n              $tab        = module.get.tabElement(tabPath),\\n              apiSettings = {\\n                dataType         : 'html',\\n                encodeParameters : false,\\n                on               : 'now',\\n                cache            : settings.alwaysRefresh,\\n                headers          : {\\n                  'X-Remote': true\\n                },\\n                onSuccess : function(response) {\\n                  if(settings.cacheType == 'response') {\\n                    module.cache.add(fullTabPath, response);\\n                  }\\n                  module.update.content(tabPath, response);\\n                  if(tabPath == activeTabPath) {\\n                    module.debug('Content loaded', tabPath);\\n                    module.activate.tab(tabPath);\\n                  }\\n                  else {\\n                    module.debug('Content loaded in background', tabPath);\\n                  }\\n                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\\n                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\\n                  if(settings.cacheType != 'response') {\\n                    module.cache.add(fullTabPath, $tab.html());\\n                  }\\n                },\\n                urlData: {\\n                  tab: fullTabPath\\n                }\\n              },\\n              request         = $tab.api('get request') || false,\\n              existingRequest = ( request && request.state() === 'pending' ),\\n              requestSettings,\\n              cachedContent\\n            ;\\n\\n            fullTabPath   = fullTabPath || tabPath;\\n            cachedContent = module.cache.read(fullTabPath);\\n\\n\\n            if(settings.cache && cachedContent) {\\n              module.activate.tab(tabPath);\\n              module.debug('Adding cached content', fullTabPath);\\n              if(settings.evaluateScripts == 'once') {\\n                module.update.content(tabPath, cachedContent, false);\\n              }\\n              else {\\n                module.update.content(tabPath, cachedContent);\\n              }\\n              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\\n            }\\n            else if(existingRequest) {\\n              module.set.loading(tabPath);\\n              module.debug('Content is already loading', fullTabPath);\\n            }\\n            else if($.api !== undefined) {\\n              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\\n              module.debug('Retrieving remote content', fullTabPath, requestSettings);\\n              module.set.loading(tabPath);\\n              $tab.api(requestSettings);\\n            }\\n            else {\\n              module.error(error.api);\\n            }\\n          }\\n        },\\n\\n        activate: {\\n          all: function(tabPath) {\\n            module.activate.tab(tabPath);\\n            module.activate.navigation(tabPath);\\n          },\\n          tab: function(tabPath) {\\n            var\\n              $tab          = module.get.tabElement(tabPath),\\n              $deactiveTabs = (settings.deactivate == 'siblings')\\n                ? $tab.siblings($tabs)\\n                : $tabs.not($tab),\\n              isActive      = $tab.hasClass(className.active)\\n            ;\\n            module.verbose('Showing tab content for', $tab);\\n            if(!isActive) {\\n              $tab\\n                .addClass(className.active)\\n              ;\\n              $deactiveTabs\\n                .removeClass(className.active + ' ' + className.loading)\\n              ;\\n              if($tab.length > 0) {\\n                settings.onVisible.call($tab[0], tabPath);\\n              }\\n            }\\n          },\\n          navigation: function(tabPath) {\\n            var\\n              $navigation         = module.get.navElement(tabPath),\\n              $deactiveNavigation = (settings.deactivate == 'siblings')\\n                ? $navigation.siblings($allModules)\\n                : $allModules.not($navigation),\\n              isActive    = $navigation.hasClass(className.active)\\n            ;\\n            module.verbose('Activating tab navigation for', $navigation, tabPath);\\n            if(!isActive) {\\n              $navigation\\n                .addClass(className.active)\\n              ;\\n              $deactiveNavigation\\n                .removeClass(className.active + ' ' + className.loading)\\n              ;\\n            }\\n          }\\n        },\\n\\n        deactivate: {\\n          all: function() {\\n            module.deactivate.navigation();\\n            module.deactivate.tabs();\\n          },\\n          navigation: function() {\\n            $allModules\\n              .removeClass(className.active)\\n            ;\\n          },\\n          tabs: function() {\\n            $tabs\\n              .removeClass(className.active + ' ' + className.loading)\\n            ;\\n          }\\n        },\\n\\n        is: {\\n          tab: function(tabName) {\\n            return (tabName !== undefined)\\n              ? ( module.get.tabElement(tabName).length > 0 )\\n              : false\\n            ;\\n          }\\n        },\\n\\n        get: {\\n          initialPath: function() {\\n            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\\n          },\\n          path: function() {\\n            return $.address.value();\\n          },\\n          // adds default tabs to tab path\\n          defaultPathArray: function(tabPath) {\\n            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\\n          },\\n          defaultPath: function(tabPath) {\\n            var\\n              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\\\"' + tabPath + '/\\\"]').eq(0),\\n              defaultTab  = $defaultNav.data(metadata.tab) || false\\n            ;\\n            if( defaultTab ) {\\n              module.debug('Found default tab', defaultTab);\\n              if(recursionDepth < settings.maxDepth) {\\n                recursionDepth++;\\n                return module.get.defaultPath(defaultTab);\\n              }\\n              module.error(error.recursion);\\n            }\\n            else {\\n              module.debug('No default tabs found for', tabPath, $tabs);\\n            }\\n            recursionDepth = 0;\\n            return tabPath;\\n          },\\n          navElement: function(tabPath) {\\n            tabPath = tabPath || activeTabPath;\\n            return $allModules.filter('[data-' + metadata.tab + '=\\\"' + tabPath + '\\\"]');\\n          },\\n          tabElement: function(tabPath) {\\n            var\\n              $fullPathTab,\\n              $simplePathTab,\\n              tabPathArray,\\n              lastTab\\n            ;\\n            tabPath        = tabPath || activeTabPath;\\n            tabPathArray   = module.utilities.pathToArray(tabPath);\\n            lastTab        = module.utilities.last(tabPathArray);\\n            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\\\"' + tabPath + '\\\"]');\\n            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\\\"' + lastTab + '\\\"]');\\n            return ($fullPathTab.length > 0)\\n              ? $fullPathTab\\n              : $simplePathTab\\n            ;\\n          },\\n          tab: function() {\\n            return activeTabPath;\\n          }\\n        },\\n\\n        utilities: {\\n          filterArray: function(keepArray, removeArray) {\\n            return $.grep(keepArray, function(keepValue) {\\n              return ( $.inArray(keepValue, removeArray) == -1);\\n            });\\n          },\\n          last: function(array) {\\n            return $.isArray(array)\\n              ? array[ array.length - 1]\\n              : false\\n            ;\\n          },\\n          pathToArray: function(pathName) {\\n            if(pathName === undefined) {\\n              pathName = activeTabPath;\\n            }\\n            return typeof pathName == 'string'\\n              ? pathName.split('/')\\n              : [pathName]\\n            ;\\n          },\\n          arrayToPath: function(pathArray) {\\n            return $.isArray(pathArray)\\n              ? pathArray.join('/')\\n              : false\\n            ;\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n\\n};\\n\\n// shortcut for tabbed content with no defined navigation\\n$.tab = function() {\\n  $(window).tab.apply(this, arguments);\\n};\\n\\n$.fn.tab.settings = {\\n\\n  name            : 'Tab',\\n  namespace       : 'tab',\\n\\n  silent          : false,\\n  debug           : false,\\n  verbose         : false,\\n  performance     : true,\\n\\n  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\\n  history         : false,      // use browser history\\n  historyType     : 'hash',     // #/ or html5 state\\n  path            : false,      // base path of url\\n\\n  context         : false,      // specify a context that tabs must appear inside\\n  childrenOnly    : false,      // use only tabs that are children of context\\n  maxDepth        : 25,         // max depth a tab can be nested\\n\\n  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\\n\\n  alwaysRefresh   : false,      // load tab content new every tab click\\n  cache           : true,       // cache the content requests to pull locally\\n  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\\n  ignoreFirstLoad : false,      // don't load remote content on first load\\n\\n  apiSettings     : false,      // settings for api call\\n  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\\n\\n  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\\n  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\\n  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\\n  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\\n\\n  templates : {\\n    determineTitle: function(tabArray) {} // returns page title for path\\n  },\\n\\n  error: {\\n    api        : 'You attempted to load content without API module',\\n    method     : 'The method you called is not defined',\\n    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\\n    noContent  : 'The tab you specified is missing a content url.',\\n    path       : 'History enabled, but no path was specified',\\n    recursion  : 'Max recursive depth reached',\\n    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\\n    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\\n    state      : 'History requires Asual\\\\'s Address library <https://github.com/asual/jquery-address>'\\n  },\\n\\n  metadata : {\\n    tab    : 'tab',\\n    loaded : 'loaded',\\n    promise: 'promise'\\n  },\\n\\n  className   : {\\n    loading : 'loading',\\n    active  : 'active'\\n  },\\n\\n  selector    : {\\n    tabs : '.ui.tab',\\n    ui   : '.ui'\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Transition\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.transition = function() {\\n  var\\n    $allModules     = $(this),\\n    moduleSelector  = $allModules.selector || '',\\n\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    moduleArguments = arguments,\\n    query           = moduleArguments[0],\\n    queryArguments  = [].slice.call(arguments, 1),\\n    methodInvoked   = (typeof query === 'string'),\\n\\n    requestAnimationFrame = window.requestAnimationFrame\\n      || window.mozRequestAnimationFrame\\n      || window.webkitRequestAnimationFrame\\n      || window.msRequestAnimationFrame\\n      || function(callback) { setTimeout(callback, 0); },\\n\\n    returnedValue\\n  ;\\n  $allModules\\n    .each(function(index) {\\n      var\\n        $module  = $(this),\\n        element  = this,\\n\\n        // set at run time\\n        settings,\\n        instance,\\n\\n        error,\\n        className,\\n        metadata,\\n        animationEnd,\\n        animationName,\\n\\n        namespace,\\n        moduleNamespace,\\n        eventNamespace,\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n\\n          // get full settings\\n          settings        = module.get.settings.apply(element, moduleArguments);\\n\\n          // shorthand\\n          className       = settings.className;\\n          error           = settings.error;\\n          metadata        = settings.metadata;\\n\\n          // define namespace\\n          eventNamespace  = '.' + settings.namespace;\\n          moduleNamespace = 'module-' + settings.namespace;\\n          instance        = $module.data(moduleNamespace) || module;\\n\\n          // get vendor specific events\\n          animationEnd    = module.get.animationEndEvent();\\n\\n          if(methodInvoked) {\\n            methodInvoked = module.invoke(query);\\n          }\\n\\n          // method not invoked, lets run an animation\\n          if(methodInvoked === false) {\\n            module.verbose('Converted arguments into settings object', settings);\\n            if(settings.interval) {\\n              module.delay(settings.animate);\\n            }\\n            else  {\\n              module.animate();\\n            }\\n            module.instantiate();\\n          }\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, instance)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module for', element);\\n          $module\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          module.verbose('Refreshing display type on next animation');\\n          delete module.displayType;\\n        },\\n\\n        forceRepaint: function() {\\n          module.verbose('Forcing element repaint');\\n          var\\n            $parentElement = $module.parent(),\\n            $nextElement = $module.next()\\n          ;\\n          if($nextElement.length === 0) {\\n            $module.detach().appendTo($parentElement);\\n          }\\n          else {\\n            $module.detach().insertBefore($nextElement);\\n          }\\n        },\\n\\n        repaint: function() {\\n          module.verbose('Repainting element');\\n          var\\n            fakeAssignment = element.offsetWidth\\n          ;\\n        },\\n\\n        delay: function(interval) {\\n          var\\n            direction = module.get.animationDirection(),\\n            shouldReverse,\\n            delay\\n          ;\\n          if(!direction) {\\n            direction = module.can.transition()\\n              ? module.get.direction()\\n              : 'static'\\n            ;\\n          }\\n          interval = (interval !== undefined)\\n            ? interval\\n            : settings.interval\\n          ;\\n          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);\\n          delay = (shouldReverse || settings.reverse == true)\\n            ? ($allModules.length - index) * settings.interval\\n            : index * settings.interval\\n          ;\\n          module.debug('Delaying animation by', delay);\\n          setTimeout(module.animate, delay);\\n        },\\n\\n        animate: function(overrideSettings) {\\n          settings = overrideSettings || settings;\\n          if(!module.is.supported()) {\\n            module.error(error.support);\\n            return false;\\n          }\\n          module.debug('Preparing animation', settings.animation);\\n          if(module.is.animating()) {\\n            if(settings.queue) {\\n              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {\\n                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);\\n              }\\n              else {\\n                module.queue(settings.animation);\\n              }\\n              return false;\\n            }\\n            else if(!settings.allowRepeats && module.is.occurring()) {\\n              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);\\n              return false;\\n            }\\n            else {\\n              module.debug('New animation started, completing previous early', settings.animation);\\n              instance.complete();\\n            }\\n          }\\n          if( module.can.animate() ) {\\n            module.set.animating(settings.animation);\\n          }\\n          else {\\n            module.error(error.noAnimation, settings.animation, element);\\n          }\\n        },\\n\\n        reset: function() {\\n          module.debug('Resetting animation to beginning conditions');\\n          module.remove.animationCallbacks();\\n          module.restore.conditions();\\n          module.remove.animating();\\n        },\\n\\n        queue: function(animation) {\\n          module.debug('Queueing animation of', animation);\\n          module.queuing = true;\\n          $module\\n            .one(animationEnd + '.queue' + eventNamespace, function() {\\n              module.queuing = false;\\n              module.repaint();\\n              module.animate.apply(this, settings);\\n            })\\n          ;\\n        },\\n\\n        complete: function (event) {\\n          module.debug('Animation complete', settings.animation);\\n          module.remove.completeCallback();\\n          module.remove.failSafe();\\n          if(!module.is.looping()) {\\n            if( module.is.outward() ) {\\n              module.verbose('Animation is outward, hiding element');\\n              module.restore.conditions();\\n              module.hide();\\n            }\\n            else if( module.is.inward() ) {\\n              module.verbose('Animation is outward, showing element');\\n              module.restore.conditions();\\n              module.show();\\n            }\\n            else {\\n              module.verbose('Static animation completed');\\n              module.restore.conditions();\\n              settings.onComplete.call(element);\\n            }\\n          }\\n        },\\n\\n        force: {\\n          visible: function() {\\n            var\\n              style          = $module.attr('style'),\\n              userStyle      = module.get.userStyle(),\\n              displayType    = module.get.displayType(),\\n              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',\\n              currentDisplay = $module.css('display'),\\n              emptyStyle     = (style === undefined || style === '')\\n            ;\\n            if(currentDisplay !== displayType) {\\n              module.verbose('Overriding default display to show element', displayType);\\n              $module\\n                .attr('style', overrideStyle)\\n              ;\\n            }\\n            else if(emptyStyle) {\\n              $module.removeAttr('style');\\n            }\\n          },\\n          hidden: function() {\\n            var\\n              style          = $module.attr('style'),\\n              currentDisplay = $module.css('display'),\\n              emptyStyle     = (style === undefined || style === '')\\n            ;\\n            if(currentDisplay !== 'none' && !module.is.hidden()) {\\n              module.verbose('Overriding default display to hide element');\\n              $module\\n                .css('display', 'none')\\n              ;\\n            }\\n            else if(emptyStyle) {\\n              $module\\n                .removeAttr('style')\\n              ;\\n            }\\n          }\\n        },\\n\\n        has: {\\n          direction: function(animation) {\\n            var\\n              hasDirection = false\\n            ;\\n            animation = animation || settings.animation;\\n            if(typeof animation === 'string') {\\n              animation = animation.split(' ');\\n              $.each(animation, function(index, word){\\n                if(word === className.inward || word === className.outward) {\\n                  hasDirection = true;\\n                }\\n              });\\n            }\\n            return hasDirection;\\n          },\\n          inlineDisplay: function() {\\n            var\\n              style = $module.attr('style') || ''\\n            ;\\n            return $.isArray(style.match(/display.*?;/, ''));\\n          }\\n        },\\n\\n        set: {\\n          animating: function(animation) {\\n            var\\n              animationClass,\\n              direction\\n            ;\\n            // remove previous callbacks\\n            module.remove.completeCallback();\\n\\n            // determine exact animation\\n            animation      = animation || settings.animation;\\n            animationClass = module.get.animationClass(animation);\\n\\n            // save animation class in cache to restore class names\\n            module.save.animation(animationClass);\\n\\n            // override display if necessary so animation appears visibly\\n            module.force.visible();\\n\\n            module.remove.hidden();\\n            module.remove.direction();\\n\\n            module.start.animation(animationClass);\\n\\n          },\\n          duration: function(animationName, duration) {\\n            duration = duration || settings.duration;\\n            duration = (typeof duration == 'number')\\n              ? duration + 'ms'\\n              : duration\\n            ;\\n            if(duration || duration === 0) {\\n              module.verbose('Setting animation duration', duration);\\n              $module\\n                .css({\\n                  'animation-duration':  duration\\n                })\\n              ;\\n            }\\n          },\\n          direction: function(direction) {\\n            direction = direction || module.get.direction();\\n            if(direction == className.inward) {\\n              module.set.inward();\\n            }\\n            else {\\n              module.set.outward();\\n            }\\n          },\\n          looping: function() {\\n            module.debug('Transition set to loop');\\n            $module\\n              .addClass(className.looping)\\n            ;\\n          },\\n          hidden: function() {\\n            $module\\n              .addClass(className.transition)\\n              .addClass(className.hidden)\\n            ;\\n          },\\n          inward: function() {\\n            module.debug('Setting direction to inward');\\n            $module\\n              .removeClass(className.outward)\\n              .addClass(className.inward)\\n            ;\\n          },\\n          outward: function() {\\n            module.debug('Setting direction to outward');\\n            $module\\n              .removeClass(className.inward)\\n              .addClass(className.outward)\\n            ;\\n          },\\n          visible: function() {\\n            $module\\n              .addClass(className.transition)\\n              .addClass(className.visible)\\n            ;\\n          }\\n        },\\n\\n        start: {\\n          animation: function(animationClass) {\\n            animationClass = animationClass || module.get.animationClass();\\n            module.debug('Starting tween', animationClass);\\n            $module\\n              .addClass(animationClass)\\n              .one(animationEnd + '.complete' + eventNamespace, module.complete)\\n            ;\\n            if(settings.useFailSafe) {\\n              module.add.failSafe();\\n            }\\n            module.set.duration(settings.duration);\\n            settings.onStart.call(element);\\n          }\\n        },\\n\\n        save: {\\n          animation: function(animation) {\\n            if(!module.cache) {\\n              module.cache = {};\\n            }\\n            module.cache.animation = animation;\\n          },\\n          displayType: function(displayType) {\\n            if(displayType !== 'none') {\\n              $module.data(metadata.displayType, displayType);\\n            }\\n          },\\n          transitionExists: function(animation, exists) {\\n            $.fn.transition.exists[animation] = exists;\\n            module.verbose('Saving existence of transition', animation, exists);\\n          }\\n        },\\n\\n        restore: {\\n          conditions: function() {\\n            var\\n              animation = module.get.currentAnimation()\\n            ;\\n            if(animation) {\\n              $module\\n                .removeClass(animation)\\n              ;\\n              module.verbose('Removing animation class', module.cache);\\n            }\\n            module.remove.duration();\\n          }\\n        },\\n\\n        add: {\\n          failSafe: function() {\\n            var\\n              duration = module.get.duration()\\n            ;\\n            module.timer = setTimeout(function() {\\n              $module.triggerHandler(animationEnd);\\n            }, duration + settings.failSafeDelay);\\n            module.verbose('Adding fail safe timer', module.timer);\\n          }\\n        },\\n\\n        remove: {\\n          animating: function() {\\n            $module.removeClass(className.animating);\\n          },\\n          animationCallbacks: function() {\\n            module.remove.queueCallback();\\n            module.remove.completeCallback();\\n          },\\n          queueCallback: function() {\\n            $module.off('.queue' + eventNamespace);\\n          },\\n          completeCallback: function() {\\n            $module.off('.complete' + eventNamespace);\\n          },\\n          display: function() {\\n            $module.css('display', '');\\n          },\\n          direction: function() {\\n            $module\\n              .removeClass(className.inward)\\n              .removeClass(className.outward)\\n            ;\\n          },\\n          duration: function() {\\n            $module\\n              .css('animation-duration', '')\\n            ;\\n          },\\n          failSafe: function() {\\n            module.verbose('Removing fail safe timer', module.timer);\\n            if(module.timer) {\\n              clearTimeout(module.timer);\\n            }\\n          },\\n          hidden: function() {\\n            $module.removeClass(className.hidden);\\n          },\\n          visible: function() {\\n            $module.removeClass(className.visible);\\n          },\\n          looping: function() {\\n            module.debug('Transitions are no longer looping');\\n            if( module.is.looping() ) {\\n              module.reset();\\n              $module\\n                .removeClass(className.looping)\\n              ;\\n            }\\n          },\\n          transition: function() {\\n            $module\\n              .removeClass(className.visible)\\n              .removeClass(className.hidden)\\n            ;\\n          }\\n        },\\n        get: {\\n          settings: function(animation, duration, onComplete) {\\n            // single settings object\\n            if(typeof animation == 'object') {\\n              return $.extend(true, {}, $.fn.transition.settings, animation);\\n            }\\n            // all arguments provided\\n            else if(typeof onComplete == 'function') {\\n              return $.extend({}, $.fn.transition.settings, {\\n                animation  : animation,\\n                onComplete : onComplete,\\n                duration   : duration\\n              });\\n            }\\n            // only duration provided\\n            else if(typeof duration == 'string' || typeof duration == 'number') {\\n              return $.extend({}, $.fn.transition.settings, {\\n                animation : animation,\\n                duration  : duration\\n              });\\n            }\\n            // duration is actually settings object\\n            else if(typeof duration == 'object') {\\n              return $.extend({}, $.fn.transition.settings, duration, {\\n                animation : animation\\n              });\\n            }\\n            // duration is actually callback\\n            else if(typeof duration == 'function') {\\n              return $.extend({}, $.fn.transition.settings, {\\n                animation  : animation,\\n                onComplete : duration\\n              });\\n            }\\n            // only animation provided\\n            else {\\n              return $.extend({}, $.fn.transition.settings, {\\n                animation : animation\\n              });\\n            }\\n          },\\n          animationClass: function(animation) {\\n            var\\n              animationClass = animation || settings.animation,\\n              directionClass = (module.can.transition() && !module.has.direction())\\n                ? module.get.direction() + ' '\\n                : ''\\n            ;\\n            return className.animating + ' '\\n              + className.transition + ' '\\n              + directionClass\\n              + animationClass\\n            ;\\n          },\\n          currentAnimation: function() {\\n            return (module.cache && module.cache.animation !== undefined)\\n              ? module.cache.animation\\n              : false\\n            ;\\n          },\\n          currentDirection: function() {\\n            return module.is.inward()\\n              ? className.inward\\n              : className.outward\\n            ;\\n          },\\n          direction: function() {\\n            return module.is.hidden() || !module.is.visible()\\n              ? className.inward\\n              : className.outward\\n            ;\\n          },\\n          animationDirection: function(animation) {\\n            var\\n              direction\\n            ;\\n            animation = animation || settings.animation;\\n            if(typeof animation === 'string') {\\n              animation = animation.split(' ');\\n              // search animation name for out/in class\\n              $.each(animation, function(index, word){\\n                if(word === className.inward) {\\n                  direction = className.inward;\\n                }\\n                else if(word === className.outward) {\\n                  direction = className.outward;\\n                }\\n              });\\n            }\\n            // return found direction\\n            if(direction) {\\n              return direction;\\n            }\\n            return false;\\n          },\\n          duration: function(duration) {\\n            duration = duration || settings.duration;\\n            if(duration === false) {\\n              duration = $module.css('animation-duration') || 0;\\n            }\\n            return (typeof duration === 'string')\\n              ? (duration.indexOf('ms') > -1)\\n                ? parseFloat(duration)\\n                : parseFloat(duration) * 1000\\n              : duration\\n            ;\\n          },\\n          displayType: function() {\\n            if(settings.displayType) {\\n              return settings.displayType;\\n            }\\n            if($module.data(metadata.displayType) === undefined) {\\n              // create fake element to determine display state\\n              module.can.transition(true);\\n            }\\n            return $module.data(metadata.displayType);\\n          },\\n          userStyle: function(style) {\\n            style = style || $module.attr('style') || '';\\n            return style.replace(/display.*?;/, '');\\n          },\\n          transitionExists: function(animation) {\\n            return $.fn.transition.exists[animation];\\n          },\\n          animationStartEvent: function() {\\n            var\\n              element     = document.createElement('div'),\\n              animations  = {\\n                'animation'       :'animationstart',\\n                'OAnimation'      :'oAnimationStart',\\n                'MozAnimation'    :'mozAnimationStart',\\n                'WebkitAnimation' :'webkitAnimationStart'\\n              },\\n              animation\\n            ;\\n            for(animation in animations){\\n              if( element.style[animation] !== undefined ){\\n                return animations[animation];\\n              }\\n            }\\n            return false;\\n          },\\n          animationEndEvent: function() {\\n            var\\n              element     = document.createElement('div'),\\n              animations  = {\\n                'animation'       :'animationend',\\n                'OAnimation'      :'oAnimationEnd',\\n                'MozAnimation'    :'mozAnimationEnd',\\n                'WebkitAnimation' :'webkitAnimationEnd'\\n              },\\n              animation\\n            ;\\n            for(animation in animations){\\n              if( element.style[animation] !== undefined ){\\n                return animations[animation];\\n              }\\n            }\\n            return false;\\n          }\\n\\n        },\\n\\n        can: {\\n          transition: function(forced) {\\n            var\\n              animation         = settings.animation,\\n              transitionExists  = module.get.transitionExists(animation),\\n              elementClass,\\n              tagName,\\n              $clone,\\n              currentAnimation,\\n              inAnimation,\\n              directionExists,\\n              displayType\\n            ;\\n            if( transitionExists === undefined || forced) {\\n              module.verbose('Determining whether animation exists');\\n              elementClass = $module.attr('class');\\n              tagName      = $module.prop('tagName');\\n\\n              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);\\n              currentAnimation = $clone\\n                .addClass(animation)\\n                .removeClass(className.inward)\\n                .removeClass(className.outward)\\n                .addClass(className.animating)\\n                .addClass(className.transition)\\n                .css('animationName')\\n              ;\\n              inAnimation = $clone\\n                .addClass(className.inward)\\n                .css('animationName')\\n              ;\\n              displayType = $clone\\n                .attr('class', elementClass)\\n                .removeAttr('style')\\n                .removeClass(className.hidden)\\n                .removeClass(className.visible)\\n                .show()\\n                .css('display')\\n              ;\\n              module.verbose('Determining final display state', displayType);\\n              module.save.displayType(displayType);\\n\\n              $clone.remove();\\n              if(currentAnimation != inAnimation) {\\n                module.debug('Direction exists for animation', animation);\\n                directionExists = true;\\n              }\\n              else if(currentAnimation == 'none' || !currentAnimation) {\\n                module.debug('No animation defined in css', animation);\\n                return;\\n              }\\n              else {\\n                module.debug('Static animation found', animation, displayType);\\n                directionExists = false;\\n              }\\n              module.save.transitionExists(animation, directionExists);\\n            }\\n            return (transitionExists !== undefined)\\n              ? transitionExists\\n              : directionExists\\n            ;\\n          },\\n          animate: function() {\\n            // can transition does not return a value if animation does not exist\\n            return (module.can.transition() !== undefined);\\n          }\\n        },\\n\\n        is: {\\n          animating: function() {\\n            return $module.hasClass(className.animating);\\n          },\\n          inward: function() {\\n            return $module.hasClass(className.inward);\\n          },\\n          outward: function() {\\n            return $module.hasClass(className.outward);\\n          },\\n          looping: function() {\\n            return $module.hasClass(className.looping);\\n          },\\n          occurring: function(animation) {\\n            animation = animation || settings.animation;\\n            animation = '.' + animation.replace(' ', '.');\\n            return ( $module.filter(animation).length > 0 );\\n          },\\n          visible: function() {\\n            return $module.is(':visible');\\n          },\\n          hidden: function() {\\n            return $module.css('visibility') === 'hidden';\\n          },\\n          supported: function() {\\n            return(animationEnd !== false);\\n          }\\n        },\\n\\n        hide: function() {\\n          module.verbose('Hiding element');\\n          if( module.is.animating() ) {\\n            module.reset();\\n          }\\n          element.blur(); // IE will trigger focus change if element is not blurred before hiding\\n          module.remove.display();\\n          module.remove.visible();\\n          module.set.hidden();\\n          module.force.hidden();\\n          settings.onHide.call(element);\\n          settings.onComplete.call(element);\\n          // module.repaint();\\n        },\\n\\n        show: function(display) {\\n          module.verbose('Showing element', display);\\n          module.remove.hidden();\\n          module.set.visible();\\n          module.force.visible();\\n          settings.onShow.call(element);\\n          settings.onComplete.call(element);\\n          // module.repaint();\\n        },\\n\\n        toggle: function() {\\n          if( module.is.visible() ) {\\n            module.hide();\\n          }\\n          else {\\n            module.show();\\n          }\\n        },\\n\\n        stop: function() {\\n          module.debug('Stopping current animation');\\n          $module.triggerHandler(animationEnd);\\n        },\\n\\n        stopAll: function() {\\n          module.debug('Stopping all animation');\\n          module.remove.queueCallback();\\n          $module.triggerHandler(animationEnd);\\n        },\\n\\n        clear: {\\n          queue: function() {\\n            module.debug('Clearing animation queue');\\n            module.remove.queueCallback();\\n          }\\n        },\\n\\n        enable: function() {\\n          module.verbose('Starting animation');\\n          $module.removeClass(className.disabled);\\n        },\\n\\n        disable: function() {\\n          module.debug('Stopping animation');\\n          $module.addClass(className.disabled);\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if($allModules.length > 1) {\\n              title += ' ' + '(' + $allModules.length + ')';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        // modified for transition to return invoke success\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return (found !== undefined)\\n            ? found\\n            : false\\n          ;\\n        }\\n      };\\n      module.initialize();\\n    })\\n  ;\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n// Records if CSS transition is available\\n$.fn.transition.exists = {};\\n\\n$.fn.transition.settings = {\\n\\n  // module info\\n  name          : 'Transition',\\n\\n  // hide all output from this component regardless of other settings\\n  silent        : false,\\n\\n  // debug content outputted to console\\n  debug         : false,\\n\\n  // verbose debug output\\n  verbose       : false,\\n\\n  // performance data output\\n  performance   : true,\\n\\n  // event namespace\\n  namespace     : 'transition',\\n\\n  // delay between animations in group\\n  interval      : 0,\\n\\n  // whether group animations should be reversed\\n  reverse       : 'auto',\\n\\n  // animation callback event\\n  onStart       : function() {},\\n  onComplete    : function() {},\\n  onShow        : function() {},\\n  onHide        : function() {},\\n\\n  // whether timeout should be used to ensure callback fires in cases animationend does not\\n  useFailSafe   : true,\\n\\n  // delay in ms for fail safe\\n  failSafeDelay : 100,\\n\\n  // whether EXACT animation can occur twice in a row\\n  allowRepeats  : false,\\n\\n  // Override final display type on visible\\n  displayType   : false,\\n\\n  // animation duration\\n  animation     : 'fade',\\n  duration      : false,\\n\\n  // new animations will occur after previous ones\\n  queue         : true,\\n\\n  metadata : {\\n    displayType: 'display'\\n  },\\n\\n  className   : {\\n    animating  : 'animating',\\n    disabled   : 'disabled',\\n    hidden     : 'hidden',\\n    inward     : 'in',\\n    loading    : 'loading',\\n    looping    : 'looping',\\n    outward    : 'out',\\n    transition : 'transition',\\n    visible    : 'visible'\\n  },\\n\\n  // possible errors\\n  error: {\\n    noAnimation : 'Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.',\\n    repeated    : 'That animation is already occurring, cancelling repeated animation',\\n    method      : 'The method you called is not defined',\\n    support     : 'This browser does not support CSS animations'\\n  }\\n\\n};\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - API\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nvar\\n  window = (typeof window != 'undefined' && window.Math == Math)\\n    ? window\\n    : (typeof self != 'undefined' && self.Math == Math)\\n      ? self\\n      : Function('return this')()\\n;\\n\\n$.api = $.fn.api = function(parameters) {\\n\\n  var\\n    // use window context if none specified\\n    $allModules     = $.isFunction(this)\\n        ? $(window)\\n        : $(this),\\n    moduleSelector = $allModules.selector || '',\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n\\n    returnedValue\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings          = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.api.settings, parameters)\\n          : $.extend({}, $.fn.api.settings),\\n\\n        // internal aliases\\n        namespace       = settings.namespace,\\n        metadata        = settings.metadata,\\n        selector        = settings.selector,\\n        error           = settings.error,\\n        className       = settings.className,\\n\\n        // define namespaces for modules\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        // element that creates request\\n        $module         = $(this),\\n        $form           = $module.closest(selector.form),\\n\\n        // context used for state\\n        $context        = (settings.stateContext)\\n          ? $(settings.stateContext)\\n          : $module,\\n\\n        // request details\\n        ajaxSettings,\\n        requestSettings,\\n        url,\\n        data,\\n        requestStartTime,\\n\\n        // standard module\\n        element         = this,\\n        context         = $context[0],\\n        instance        = $module.data(moduleNamespace),\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          if(!methodInvoked) {\\n            module.bind.events();\\n          }\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, instance)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module for', element);\\n          $module\\n            .removeData(moduleNamespace)\\n            .off(eventNamespace)\\n          ;\\n        },\\n\\n        bind: {\\n          events: function() {\\n            var\\n              triggerEvent = module.get.event()\\n            ;\\n            if( triggerEvent ) {\\n              module.verbose('Attaching API events to element', triggerEvent);\\n              $module\\n                .on(triggerEvent + eventNamespace, module.event.trigger)\\n              ;\\n            }\\n            else if(settings.on == 'now') {\\n              module.debug('Querying API endpoint immediately');\\n              module.query();\\n            }\\n          }\\n        },\\n\\n        decode: {\\n          json: function(response) {\\n            if(response !== undefined && typeof response == 'string') {\\n              try {\\n               response = JSON.parse(response);\\n              }\\n              catch(e) {\\n                // isnt json string\\n              }\\n            }\\n            return response;\\n          }\\n        },\\n\\n        read: {\\n          cachedResponse: function(url) {\\n            var\\n              response\\n            ;\\n            if(window.Storage === undefined) {\\n              module.error(error.noStorage);\\n              return;\\n            }\\n            response = sessionStorage.getItem(url);\\n            module.debug('Using cached response', url, response);\\n            response = module.decode.json(response);\\n            return response;\\n          }\\n        },\\n        write: {\\n          cachedResponse: function(url, response) {\\n            if(response && response === '') {\\n              module.debug('Response empty, not caching', response);\\n              return;\\n            }\\n            if(window.Storage === undefined) {\\n              module.error(error.noStorage);\\n              return;\\n            }\\n            if( $.isPlainObject(response) ) {\\n              response = JSON.stringify(response);\\n            }\\n            sessionStorage.setItem(url, response);\\n            module.verbose('Storing cached response for url', url, response);\\n          }\\n        },\\n\\n        query: function() {\\n\\n          if(module.is.disabled()) {\\n            module.debug('Element is disabled API request aborted');\\n            return;\\n          }\\n\\n          if(module.is.loading()) {\\n            if(settings.interruptRequests) {\\n              module.debug('Interrupting previous request');\\n              module.abort();\\n            }\\n            else {\\n              module.debug('Cancelling request, previous request is still pending');\\n              return;\\n            }\\n          }\\n\\n          // pass element metadata to url (value, text)\\n          if(settings.defaultData) {\\n            $.extend(true, settings.urlData, module.get.defaultData());\\n          }\\n\\n          // Add form content\\n          if(settings.serializeForm) {\\n            settings.data = module.add.formData(settings.data);\\n          }\\n\\n          // call beforesend and get any settings changes\\n          requestSettings = module.get.settings();\\n\\n          // check if before send cancelled request\\n          if(requestSettings === false) {\\n            module.cancelled = true;\\n            module.error(error.beforeSend);\\n            return;\\n          }\\n          else {\\n            module.cancelled = false;\\n          }\\n\\n          // get url\\n          url = module.get.templatedURL();\\n\\n          if(!url && !module.is.mocked()) {\\n            module.error(error.missingURL);\\n            return;\\n          }\\n\\n          // replace variables\\n          url = module.add.urlData( url );\\n          // missing url parameters\\n          if( !url && !module.is.mocked()) {\\n            return;\\n          }\\n\\n          requestSettings.url = settings.base + url;\\n\\n          // look for jQuery ajax parameters in settings\\n          ajaxSettings = $.extend(true, {}, settings, {\\n            type       : settings.method || settings.type,\\n            data       : data,\\n            url        : settings.base + url,\\n            beforeSend : settings.beforeXHR,\\n            success    : function() {},\\n            failure    : function() {},\\n            complete   : function() {}\\n          });\\n\\n          module.debug('Querying URL', ajaxSettings.url);\\n          module.verbose('Using AJAX settings', ajaxSettings);\\n          if(settings.cache === 'local' && module.read.cachedResponse(url)) {\\n            module.debug('Response returned from local cache');\\n            module.request = module.create.request();\\n            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);\\n            return;\\n          }\\n\\n          if( !settings.throttle ) {\\n            module.debug('Sending request', data, ajaxSettings.method);\\n            module.send.request();\\n          }\\n          else {\\n            if(!settings.throttleFirstRequest && !module.timer) {\\n              module.debug('Sending request', data, ajaxSettings.method);\\n              module.send.request();\\n              module.timer = setTimeout(function(){}, settings.throttle);\\n            }\\n            else {\\n              module.debug('Throttling request', settings.throttle);\\n              clearTimeout(module.timer);\\n              module.timer = setTimeout(function() {\\n                if(module.timer) {\\n                  delete module.timer;\\n                }\\n                module.debug('Sending throttled request', data, ajaxSettings.method);\\n                module.send.request();\\n              }, settings.throttle);\\n            }\\n          }\\n\\n        },\\n\\n        should: {\\n          removeError: function() {\\n            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );\\n          }\\n        },\\n\\n        is: {\\n          disabled: function() {\\n            return ($module.filter(selector.disabled).length > 0);\\n          },\\n          expectingJSON: function() {\\n            return settings.dataType === 'json' || settings.dataType === 'jsonp';\\n          },\\n          form: function() {\\n            return $module.is('form') || $context.is('form');\\n          },\\n          mocked: function() {\\n            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);\\n          },\\n          input: function() {\\n            return $module.is('input');\\n          },\\n          loading: function() {\\n            return (module.request)\\n              ? (module.request.state() == 'pending')\\n              : false\\n            ;\\n          },\\n          abortedRequest: function(xhr) {\\n            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {\\n              module.verbose('XHR request determined to be aborted');\\n              return true;\\n            }\\n            else {\\n              module.verbose('XHR request was not aborted');\\n              return false;\\n            }\\n          },\\n          validResponse: function(response) {\\n            if( (!module.is.expectingJSON()) || !$.isFunction(settings.successTest) ) {\\n              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);\\n              return true;\\n            }\\n            module.debug('Checking JSON returned success', settings.successTest, response);\\n            if( settings.successTest(response) ) {\\n              module.debug('Response passed success test', response);\\n              return true;\\n            }\\n            else {\\n              module.debug('Response failed success test', response);\\n              return false;\\n            }\\n          }\\n        },\\n\\n        was: {\\n          cancelled: function() {\\n            return (module.cancelled || false);\\n          },\\n          succesful: function() {\\n            return (module.request && module.request.state() == 'resolved');\\n          },\\n          failure: function() {\\n            return (module.request && module.request.state() == 'rejected');\\n          },\\n          complete: function() {\\n            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );\\n          }\\n        },\\n\\n        add: {\\n          urlData: function(url, urlData) {\\n            var\\n              requiredVariables,\\n              optionalVariables\\n            ;\\n            if(url) {\\n              requiredVariables = url.match(settings.regExp.required);\\n              optionalVariables = url.match(settings.regExp.optional);\\n              urlData           = urlData || settings.urlData;\\n              if(requiredVariables) {\\n                module.debug('Looking for required URL variables', requiredVariables);\\n                $.each(requiredVariables, function(index, templatedString) {\\n                  var\\n                    // allow legacy {$var} style\\n                    variable = (templatedString.indexOf('$') !== -1)\\n                      ? templatedString.substr(2, templatedString.length - 3)\\n                      : templatedString.substr(1, templatedString.length - 2),\\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\\n                      ? urlData[variable]\\n                      : ($module.data(variable) !== undefined)\\n                        ? $module.data(variable)\\n                        : ($context.data(variable) !== undefined)\\n                          ? $context.data(variable)\\n                          : urlData[variable]\\n                  ;\\n                  // remove value\\n                  if(value === undefined) {\\n                    module.error(error.requiredParameter, variable, url);\\n                    url = false;\\n                    return false;\\n                  }\\n                  else {\\n                    module.verbose('Found required variable', variable, value);\\n                    value = (settings.encodeParameters)\\n                      ? module.get.urlEncodedValue(value)\\n                      : value\\n                    ;\\n                    url = url.replace(templatedString, value);\\n                  }\\n                });\\n              }\\n              if(optionalVariables) {\\n                module.debug('Looking for optional URL variables', requiredVariables);\\n                $.each(optionalVariables, function(index, templatedString) {\\n                  var\\n                    // allow legacy {/$var} style\\n                    variable = (templatedString.indexOf('$') !== -1)\\n                      ? templatedString.substr(3, templatedString.length - 4)\\n                      : templatedString.substr(2, templatedString.length - 3),\\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\\n                      ? urlData[variable]\\n                      : ($module.data(variable) !== undefined)\\n                        ? $module.data(variable)\\n                        : ($context.data(variable) !== undefined)\\n                          ? $context.data(variable)\\n                          : urlData[variable]\\n                  ;\\n                  // optional replacement\\n                  if(value !== undefined) {\\n                    module.verbose('Optional variable Found', variable, value);\\n                    url = url.replace(templatedString, value);\\n                  }\\n                  else {\\n                    module.verbose('Optional variable not found', variable);\\n                    // remove preceding slash if set\\n                    if(url.indexOf('/' + templatedString) !== -1) {\\n                      url = url.replace('/' + templatedString, '');\\n                    }\\n                    else {\\n                      url = url.replace(templatedString, '');\\n                    }\\n                  }\\n                });\\n              }\\n            }\\n            return url;\\n          },\\n          formData: function(data) {\\n            var\\n              canSerialize = ($.fn.serializeObject !== undefined),\\n              formData     = (canSerialize)\\n                ? $form.serializeObject()\\n                : $form.serialize(),\\n              hasOtherData\\n            ;\\n            data         = data || settings.data;\\n            hasOtherData = $.isPlainObject(data);\\n\\n            if(hasOtherData) {\\n              if(canSerialize) {\\n                module.debug('Extending existing data with form data', data, formData);\\n                data = $.extend(true, {}, data, formData);\\n              }\\n              else {\\n                module.error(error.missingSerialize);\\n                module.debug('Cant extend data. Replacing data with form data', data, formData);\\n                data = formData;\\n              }\\n            }\\n            else {\\n              module.debug('Adding form data', formData);\\n              data = formData;\\n            }\\n            return data;\\n          }\\n        },\\n\\n        send: {\\n          request: function() {\\n            module.set.loading();\\n            module.request = module.create.request();\\n            if( module.is.mocked() ) {\\n              module.mockedXHR = module.create.mockedXHR();\\n            }\\n            else {\\n              module.xhr = module.create.xhr();\\n            }\\n            settings.onRequest.call(context, module.request, module.xhr);\\n          }\\n        },\\n\\n        event: {\\n          trigger: function(event) {\\n            module.query();\\n            if(event.type == 'submit' || event.type == 'click') {\\n              event.preventDefault();\\n            }\\n          },\\n          xhr: {\\n            always: function() {\\n              // nothing special\\n            },\\n            done: function(response, textStatus, xhr) {\\n              var\\n                context            = this,\\n                elapsedTime        = (new Date().getTime() - requestStartTime),\\n                timeLeft           = (settings.loadingDuration - elapsedTime),\\n                translatedResponse = ( $.isFunction(settings.onResponse) )\\n                  ? module.is.expectingJSON()\\n                    ? settings.onResponse.call(context, $.extend(true, {}, response))\\n                    : settings.onResponse.call(context, response)\\n                  : false\\n              ;\\n              timeLeft = (timeLeft > 0)\\n                ? timeLeft\\n                : 0\\n              ;\\n              if(translatedResponse) {\\n                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);\\n                response = translatedResponse;\\n              }\\n              if(timeLeft > 0) {\\n                module.debug('Response completed early delaying state change by', timeLeft);\\n              }\\n              setTimeout(function() {\\n                if( module.is.validResponse(response) ) {\\n                  module.request.resolveWith(context, [response, xhr]);\\n                }\\n                else {\\n                  module.request.rejectWith(context, [xhr, 'invalid']);\\n                }\\n              }, timeLeft);\\n            },\\n            fail: function(xhr, status, httpMessage) {\\n              var\\n                context     = this,\\n                elapsedTime = (new Date().getTime() - requestStartTime),\\n                timeLeft    = (settings.loadingDuration - elapsedTime)\\n              ;\\n              timeLeft = (timeLeft > 0)\\n                ? timeLeft\\n                : 0\\n              ;\\n              if(timeLeft > 0) {\\n                module.debug('Response completed early delaying state change by', timeLeft);\\n              }\\n              setTimeout(function() {\\n                if( module.is.abortedRequest(xhr) ) {\\n                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);\\n                }\\n                else {\\n                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);\\n                }\\n              }, timeLeft);\\n            }\\n          },\\n          request: {\\n            done: function(response, xhr) {\\n              module.debug('Successful API Response', response);\\n              if(settings.cache === 'local' && url) {\\n                module.write.cachedResponse(url, response);\\n                module.debug('Saving server response locally', module.cache);\\n              }\\n              settings.onSuccess.call(context, response, $module, xhr);\\n            },\\n            complete: function(firstParameter, secondParameter) {\\n              var\\n                xhr,\\n                response\\n              ;\\n              // have to guess callback parameters based on request success\\n              if( module.was.succesful() ) {\\n                response = firstParameter;\\n                xhr      = secondParameter;\\n              }\\n              else {\\n                xhr      = firstParameter;\\n                response = module.get.responseFromXHR(xhr);\\n              }\\n              module.remove.loading();\\n              settings.onComplete.call(context, response, $module, xhr);\\n            },\\n            fail: function(xhr, status, httpMessage) {\\n              var\\n                // pull response from xhr if available\\n                response     = module.get.responseFromXHR(xhr),\\n                errorMessage = module.get.errorFromRequest(response, status, httpMessage)\\n              ;\\n              if(status == 'aborted') {\\n                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);\\n                settings.onAbort.call(context, status, $module, xhr);\\n                return true;\\n              }\\n              else if(status == 'invalid') {\\n                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);\\n              }\\n              else if(status == 'error') {\\n                if(xhr !== undefined) {\\n                  module.debug('XHR produced a server error', status, httpMessage);\\n                  // make sure we have an error to display to console\\n                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\\n                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);\\n                  }\\n                  settings.onError.call(context, errorMessage, $module, xhr);\\n                }\\n              }\\n\\n              if(settings.errorDuration && status !== 'aborted') {\\n                module.debug('Adding error state');\\n                module.set.error();\\n                if( module.should.removeError() ) {\\n                  setTimeout(module.remove.error, settings.errorDuration);\\n                }\\n              }\\n              module.debug('API Request failed', errorMessage, xhr);\\n              settings.onFailure.call(context, response, $module, xhr);\\n            }\\n          }\\n        },\\n\\n        create: {\\n\\n          request: function() {\\n            // api request promise\\n            return $.Deferred()\\n              .always(module.event.request.complete)\\n              .done(module.event.request.done)\\n              .fail(module.event.request.fail)\\n            ;\\n          },\\n\\n          mockedXHR: function () {\\n            var\\n              // xhr does not simulate these properties of xhr but must return them\\n              textStatus     = false,\\n              status         = false,\\n              httpMessage    = false,\\n              responder      = settings.mockResponse      || settings.response,\\n              asyncResponder = settings.mockResponseAsync || settings.responseAsync,\\n              asyncCallback,\\n              response,\\n              mockedXHR\\n            ;\\n\\n            mockedXHR = $.Deferred()\\n              .always(module.event.xhr.complete)\\n              .done(module.event.xhr.done)\\n              .fail(module.event.xhr.fail)\\n            ;\\n\\n            if(responder) {\\n              if( $.isFunction(responder) ) {\\n                module.debug('Using specified synchronous callback', responder);\\n                response = responder.call(context, requestSettings);\\n              }\\n              else {\\n                module.debug('Using settings specified response', responder);\\n                response = responder;\\n              }\\n              // simulating response\\n              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\\n            }\\n            else if( $.isFunction(asyncResponder) ) {\\n              asyncCallback = function(response) {\\n                module.debug('Async callback returned response', response);\\n\\n                if(response) {\\n                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\\n                }\\n                else {\\n                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);\\n                }\\n              };\\n              module.debug('Using specified async response callback', asyncResponder);\\n              asyncResponder.call(context, requestSettings, asyncCallback);\\n            }\\n            return mockedXHR;\\n          },\\n\\n          xhr: function() {\\n            var\\n              xhr\\n            ;\\n            // ajax request promise\\n            xhr = $.ajax(ajaxSettings)\\n              .always(module.event.xhr.always)\\n              .done(module.event.xhr.done)\\n              .fail(module.event.xhr.fail)\\n            ;\\n            module.verbose('Created server request', xhr, ajaxSettings);\\n            return xhr;\\n          }\\n        },\\n\\n        set: {\\n          error: function() {\\n            module.verbose('Adding error state to element', $context);\\n            $context.addClass(className.error);\\n          },\\n          loading: function() {\\n            module.verbose('Adding loading state to element', $context);\\n            $context.addClass(className.loading);\\n            requestStartTime = new Date().getTime();\\n          }\\n        },\\n\\n        remove: {\\n          error: function() {\\n            module.verbose('Removing error state from element', $context);\\n            $context.removeClass(className.error);\\n          },\\n          loading: function() {\\n            module.verbose('Removing loading state from element', $context);\\n            $context.removeClass(className.loading);\\n          }\\n        },\\n\\n        get: {\\n          responseFromXHR: function(xhr) {\\n            return $.isPlainObject(xhr)\\n              ? (module.is.expectingJSON())\\n                ? module.decode.json(xhr.responseText)\\n                : xhr.responseText\\n              : false\\n            ;\\n          },\\n          errorFromRequest: function(response, status, httpMessage) {\\n            return ($.isPlainObject(response) && response.error !== undefined)\\n              ? response.error // use json error message\\n              : (settings.error[status] !== undefined) // use server error message\\n                ? settings.error[status]\\n                : httpMessage\\n            ;\\n          },\\n          request: function() {\\n            return module.request || false;\\n          },\\n          xhr: function() {\\n            return module.xhr || false;\\n          },\\n          settings: function() {\\n            var\\n              runSettings\\n            ;\\n            runSettings = settings.beforeSend.call(context, settings);\\n            if(runSettings) {\\n              if(runSettings.success !== undefined) {\\n                module.debug('Legacy success callback detected', runSettings);\\n                module.error(error.legacyParameters, runSettings.success);\\n                runSettings.onSuccess = runSettings.success;\\n              }\\n              if(runSettings.failure !== undefined) {\\n                module.debug('Legacy failure callback detected', runSettings);\\n                module.error(error.legacyParameters, runSettings.failure);\\n                runSettings.onFailure = runSettings.failure;\\n              }\\n              if(runSettings.complete !== undefined) {\\n                module.debug('Legacy complete callback detected', runSettings);\\n                module.error(error.legacyParameters, runSettings.complete);\\n                runSettings.onComplete = runSettings.complete;\\n              }\\n            }\\n            if(runSettings === undefined) {\\n              module.error(error.noReturnedValue);\\n            }\\n            if(runSettings === false) {\\n              return runSettings;\\n            }\\n            return (runSettings !== undefined)\\n              ? $.extend(true, {}, runSettings)\\n              : $.extend(true, {}, settings)\\n            ;\\n          },\\n          urlEncodedValue: function(value) {\\n            var\\n              decodedValue   = window.decodeURIComponent(value),\\n              encodedValue   = window.encodeURIComponent(value),\\n              alreadyEncoded = (decodedValue !== value)\\n            ;\\n            if(alreadyEncoded) {\\n              module.debug('URL value is already encoded, avoiding double encoding', value);\\n              return value;\\n            }\\n            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);\\n            return encodedValue;\\n          },\\n          defaultData: function() {\\n            var\\n              data = {}\\n            ;\\n            if( !$.isWindow(element) ) {\\n              if( module.is.input() ) {\\n                data.value = $module.val();\\n              }\\n              else if( module.is.form() ) {\\n\\n              }\\n              else {\\n                data.text = $module.text();\\n              }\\n            }\\n            return data;\\n          },\\n          event: function() {\\n            if( $.isWindow(element) || settings.on == 'now' ) {\\n              module.debug('API called without element, no events attached');\\n              return false;\\n            }\\n            else if(settings.on == 'auto') {\\n              if( $module.is('input') ) {\\n                return (element.oninput !== undefined)\\n                  ? 'input'\\n                  : (element.onpropertychange !== undefined)\\n                    ? 'propertychange'\\n                    : 'keyup'\\n                ;\\n              }\\n              else if( $module.is('form') ) {\\n                return 'submit';\\n              }\\n              else {\\n                return 'click';\\n              }\\n            }\\n            else {\\n              return settings.on;\\n            }\\n          },\\n          templatedURL: function(action) {\\n            action = action || $module.data(metadata.action) || settings.action || false;\\n            url    = $module.data(metadata.url) || settings.url || false;\\n            if(url) {\\n              module.debug('Using specified url', url);\\n              return url;\\n            }\\n            if(action) {\\n              module.debug('Looking up url for action', action, settings.api);\\n              if(settings.api[action] === undefined && !module.is.mocked()) {\\n                module.error(error.missingAction, settings.action, settings.api);\\n                return;\\n              }\\n              url = settings.api[action];\\n            }\\n            else if( module.is.form() ) {\\n              url = $module.attr('action') || $context.attr('action') || false;\\n              module.debug('No url or action specified, defaulting to form action', url);\\n            }\\n            return url;\\n          }\\n        },\\n\\n        abort: function() {\\n          var\\n            xhr = module.get.xhr()\\n          ;\\n          if( xhr && xhr.state() !== 'resolved') {\\n            module.debug('Cancelling API request');\\n            xhr.abort();\\n          }\\n        },\\n\\n        // reset state\\n        reset: function() {\\n          module.remove.error();\\n          module.remove.loading();\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                //'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.api.settings = {\\n\\n  name              : 'API',\\n  namespace         : 'api',\\n\\n  debug             : false,\\n  verbose           : false,\\n  performance       : true,\\n\\n  // object containing all templates endpoints\\n  api               : {},\\n\\n  // whether to cache responses\\n  cache             : true,\\n\\n  // whether new requests should abort previous requests\\n  interruptRequests : true,\\n\\n  // event binding\\n  on                : 'auto',\\n\\n  // context for applying state classes\\n  stateContext      : false,\\n\\n  // duration for loading state\\n  loadingDuration   : 0,\\n\\n  // whether to hide errors after a period of time\\n  hideError         : 'auto',\\n\\n  // duration for error state\\n  errorDuration     : 2000,\\n\\n  // whether parameters should be encoded with encodeURIComponent\\n  encodeParameters  : true,\\n\\n  // API action to use\\n  action            : false,\\n\\n  // templated URL to use\\n  url               : false,\\n\\n  // base URL to apply to all endpoints\\n  base              : '',\\n\\n  // data that will\\n  urlData           : {},\\n\\n  // whether to add default data to url data\\n  defaultData          : true,\\n\\n  // whether to serialize closest form\\n  serializeForm        : false,\\n\\n  // how long to wait before request should occur\\n  throttle             : 0,\\n\\n  // whether to throttle first request or only repeated\\n  throttleFirstRequest : true,\\n\\n  // standard ajax settings\\n  method            : 'get',\\n  data              : {},\\n  dataType          : 'json',\\n\\n  // mock response\\n  mockResponse      : false,\\n  mockResponseAsync : false,\\n\\n  // aliases for mock\\n  response          : false,\\n  responseAsync     : false,\\n\\n  // callbacks before request\\n  beforeSend  : function(settings) { return settings; },\\n  beforeXHR   : function(xhr) {},\\n  onRequest   : function(promise, xhr) {},\\n\\n  // after request\\n  onResponse  : false, // function(response) { },\\n\\n  // response was successful, if JSON passed validation\\n  onSuccess   : function(response, $module) {},\\n\\n  // request finished without aborting\\n  onComplete  : function(response, $module) {},\\n\\n  // failed JSON success test\\n  onFailure   : function(response, $module) {},\\n\\n  // server error\\n  onError     : function(errorMessage, $module) {},\\n\\n  // request aborted\\n  onAbort     : function(errorMessage, $module) {},\\n\\n  successTest : false,\\n\\n  // errors\\n  error : {\\n    beforeSend        : 'The before send function has aborted the request',\\n    error             : 'There was an error with your request',\\n    exitConditions    : 'API Request Aborted. Exit conditions met',\\n    JSONParse         : 'JSON could not be parsed during error handling',\\n    legacyParameters  : 'You are using legacy API success callback names',\\n    method            : 'The method you called is not defined',\\n    missingAction     : 'API action used but no url was defined',\\n    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',\\n    missingURL        : 'No URL specified for api event',\\n    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',\\n    noStorage         : 'Caching responses locally requires session storage',\\n    parseError        : 'There was an error parsing your request',\\n    requiredParameter : 'Missing a required URL parameter: ',\\n    statusMessage     : 'Server gave an error: ',\\n    timeout           : 'Your request timed out'\\n  },\\n\\n  regExp  : {\\n    required : /\\\\{\\\\$*[A-z0-9]+\\\\}/g,\\n    optional : /\\\\{\\\\/\\\\$*[A-z0-9]+\\\\}/g,\\n  },\\n\\n  className: {\\n    loading : 'loading',\\n    error   : 'error'\\n  },\\n\\n  selector: {\\n    disabled : '.disabled',\\n    form      : 'form'\\n  },\\n\\n  metadata: {\\n    action  : 'action',\\n    url     : 'url'\\n  }\\n};\\n\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - State\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.state = function(parameters) {\\n  var\\n    $allModules     = $(this),\\n\\n    moduleSelector  = $allModules.selector || '',\\n\\n    hasTouch        = ('ontouchstart' in document.documentElement),\\n    time            = new Date().getTime(),\\n    performance     = [],\\n\\n    query           = arguments[0],\\n    methodInvoked   = (typeof query == 'string'),\\n    queryArguments  = [].slice.call(arguments, 1),\\n\\n    returnedValue\\n  ;\\n  $allModules\\n    .each(function() {\\n      var\\n        settings          = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.state.settings, parameters)\\n          : $.extend({}, $.fn.state.settings),\\n\\n        error           = settings.error,\\n        metadata        = settings.metadata,\\n        className       = settings.className,\\n        namespace       = settings.namespace,\\n        states          = settings.states,\\n        text            = settings.text,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = namespace + '-module',\\n\\n        $module         = $(this),\\n\\n        element         = this,\\n        instance        = $module.data(moduleNamespace),\\n\\n        module\\n      ;\\n      module = {\\n\\n        initialize: function() {\\n          module.verbose('Initializing module');\\n\\n          // allow module to guess desired state based on element\\n          if(settings.automatic) {\\n            module.add.defaults();\\n          }\\n\\n          // bind events with delegated events\\n          if(settings.context && moduleSelector !== '') {\\n            $(settings.context)\\n              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\\n              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\\n              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\\n            ;\\n          }\\n          else {\\n            $module\\n              .on('mouseenter' + eventNamespace, module.change.text)\\n              .on('mouseleave' + eventNamespace, module.reset.text)\\n              .on('click'      + eventNamespace, module.toggle.state)\\n            ;\\n          }\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.verbose('Storing instance of module', module);\\n          instance = module;\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module', instance);\\n          $module\\n            .off(eventNamespace)\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        refresh: function() {\\n          module.verbose('Refreshing selector cache');\\n          $module = $(element);\\n        },\\n\\n        add: {\\n          defaults: function() {\\n            var\\n              userStates = parameters && $.isPlainObject(parameters.states)\\n                ? parameters.states\\n                : {}\\n            ;\\n            $.each(settings.defaults, function(type, typeStates) {\\n              if( module.is[type] !== undefined && module.is[type]() ) {\\n                module.verbose('Adding default states', type, element);\\n                $.extend(settings.states, typeStates, userStates);\\n              }\\n            });\\n          }\\n        },\\n\\n        is: {\\n\\n          active: function() {\\n            return $module.hasClass(className.active);\\n          },\\n          loading: function() {\\n            return $module.hasClass(className.loading);\\n          },\\n          inactive: function() {\\n            return !( $module.hasClass(className.active) );\\n          },\\n          state: function(state) {\\n            if(className[state] === undefined) {\\n              return false;\\n            }\\n            return $module.hasClass( className[state] );\\n          },\\n\\n          enabled: function() {\\n            return !( $module.is(settings.filter.active) );\\n          },\\n          disabled: function() {\\n            return ( $module.is(settings.filter.active) );\\n          },\\n          textEnabled: function() {\\n            return !( $module.is(settings.filter.text) );\\n          },\\n\\n          // definitions for automatic type detection\\n          button: function() {\\n            return $module.is('.button:not(a, .submit)');\\n          },\\n          input: function() {\\n            return $module.is('input');\\n          },\\n          progress: function() {\\n            return $module.is('.ui.progress');\\n          }\\n        },\\n\\n        allow: function(state) {\\n          module.debug('Now allowing state', state);\\n          states[state] = true;\\n        },\\n        disallow: function(state) {\\n          module.debug('No longer allowing', state);\\n          states[state] = false;\\n        },\\n\\n        allows: function(state) {\\n          return states[state] || false;\\n        },\\n\\n        enable: function() {\\n          $module.removeClass(className.disabled);\\n        },\\n\\n        disable: function() {\\n          $module.addClass(className.disabled);\\n        },\\n\\n        setState: function(state) {\\n          if(module.allows(state)) {\\n            $module.addClass( className[state] );\\n          }\\n        },\\n\\n        removeState: function(state) {\\n          if(module.allows(state)) {\\n            $module.removeClass( className[state] );\\n          }\\n        },\\n\\n        toggle: {\\n          state: function() {\\n            var\\n              apiRequest,\\n              requestCancelled\\n            ;\\n            if( module.allows('active') && module.is.enabled() ) {\\n              module.refresh();\\n              if($.fn.api !== undefined) {\\n                apiRequest       = $module.api('get request');\\n                requestCancelled = $module.api('was cancelled');\\n                if( requestCancelled ) {\\n                  module.debug('API Request cancelled by beforesend');\\n                  settings.activateTest   = function(){ return false; };\\n                  settings.deactivateTest = function(){ return false; };\\n                }\\n                else if(apiRequest) {\\n                  module.listenTo(apiRequest);\\n                  return;\\n                }\\n              }\\n              module.change.state();\\n            }\\n          }\\n        },\\n\\n        listenTo: function(apiRequest) {\\n          module.debug('API request detected, waiting for state signal', apiRequest);\\n          if(apiRequest) {\\n            if(text.loading) {\\n              module.update.text(text.loading);\\n            }\\n            $.when(apiRequest)\\n              .then(function() {\\n                if(apiRequest.state() == 'resolved') {\\n                  module.debug('API request succeeded');\\n                  settings.activateTest   = function(){ return true; };\\n                  settings.deactivateTest = function(){ return true; };\\n                }\\n                else {\\n                  module.debug('API request failed');\\n                  settings.activateTest   = function(){ return false; };\\n                  settings.deactivateTest = function(){ return false; };\\n                }\\n                module.change.state();\\n              })\\n            ;\\n          }\\n        },\\n\\n        // checks whether active/inactive state can be given\\n        change: {\\n\\n          state: function() {\\n            module.debug('Determining state change direction');\\n            // inactive to active change\\n            if( module.is.inactive() ) {\\n              module.activate();\\n            }\\n            else {\\n              module.deactivate();\\n            }\\n            if(settings.sync) {\\n              module.sync();\\n            }\\n            settings.onChange.call(element);\\n          },\\n\\n          text: function() {\\n            if( module.is.textEnabled() ) {\\n              if(module.is.disabled() ) {\\n                module.verbose('Changing text to disabled text', text.hover);\\n                module.update.text(text.disabled);\\n              }\\n              else if( module.is.active() ) {\\n                if(text.hover) {\\n                  module.verbose('Changing text to hover text', text.hover);\\n                  module.update.text(text.hover);\\n                }\\n                else if(text.deactivate) {\\n                  module.verbose('Changing text to deactivating text', text.deactivate);\\n                  module.update.text(text.deactivate);\\n                }\\n              }\\n              else {\\n                if(text.hover) {\\n                  module.verbose('Changing text to hover text', text.hover);\\n                  module.update.text(text.hover);\\n                }\\n                else if(text.activate){\\n                  module.verbose('Changing text to activating text', text.activate);\\n                  module.update.text(text.activate);\\n                }\\n              }\\n            }\\n          }\\n\\n        },\\n\\n        activate: function() {\\n          if( settings.activateTest.call(element) ) {\\n            module.debug('Setting state to active');\\n            $module\\n              .addClass(className.active)\\n            ;\\n            module.update.text(text.active);\\n            settings.onActivate.call(element);\\n          }\\n        },\\n\\n        deactivate: function() {\\n          if( settings.deactivateTest.call(element) ) {\\n            module.debug('Setting state to inactive');\\n            $module\\n              .removeClass(className.active)\\n            ;\\n            module.update.text(text.inactive);\\n            settings.onDeactivate.call(element);\\n          }\\n        },\\n\\n        sync: function() {\\n          module.verbose('Syncing other buttons to current state');\\n          if( module.is.active() ) {\\n            $allModules\\n              .not($module)\\n                .state('activate');\\n          }\\n          else {\\n            $allModules\\n              .not($module)\\n                .state('deactivate')\\n            ;\\n          }\\n        },\\n\\n        get: {\\n          text: function() {\\n            return (settings.selector.text)\\n              ? $module.find(settings.selector.text).text()\\n              : $module.html()\\n            ;\\n          },\\n          textFor: function(state) {\\n            return text[state] || false;\\n          }\\n        },\\n\\n        flash: {\\n          text: function(text, duration, callback) {\\n            var\\n              previousText = module.get.text()\\n            ;\\n            module.debug('Flashing text message', text, duration);\\n            text     = text     || settings.text.flash;\\n            duration = duration || settings.flashDuration;\\n            callback = callback || function() {};\\n            module.update.text(text);\\n            setTimeout(function(){\\n              module.update.text(previousText);\\n              callback.call(element);\\n            }, duration);\\n          }\\n        },\\n\\n        reset: {\\n          // on mouseout sets text to previous value\\n          text: function() {\\n            var\\n              activeText   = text.active   || $module.data(metadata.storedText),\\n              inactiveText = text.inactive || $module.data(metadata.storedText)\\n            ;\\n            if( module.is.textEnabled() ) {\\n              if( module.is.active() && activeText) {\\n                module.verbose('Resetting active text', activeText);\\n                module.update.text(activeText);\\n              }\\n              else if(inactiveText) {\\n                module.verbose('Resetting inactive text', activeText);\\n                module.update.text(inactiveText);\\n              }\\n            }\\n          }\\n        },\\n\\n        update: {\\n          text: function(text) {\\n            var\\n              currentText = module.get.text()\\n            ;\\n            if(text && text !== currentText) {\\n              module.debug('Updating text', text);\\n              if(settings.selector.text) {\\n                $module\\n                  .data(metadata.storedText, text)\\n                  .find(settings.selector.text)\\n                    .text(text)\\n                ;\\n              }\\n              else {\\n                $module\\n                  .data(metadata.storedText, text)\\n                  .html(text)\\n                ;\\n              }\\n            }\\n            else {\\n              module.debug('Text is already set, ignoring update', text);\\n            }\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          module.debug('Changing setting', name, value);\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            if($.isPlainObject(settings[name])) {\\n              $.extend(true, settings[name], value);\\n            }\\n            else {\\n              settings[name] = value;\\n            }\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.state.settings = {\\n\\n  // module info\\n  name           : 'State',\\n\\n  // debug output\\n  debug          : false,\\n\\n  // verbose debug output\\n  verbose        : false,\\n\\n  // namespace for events\\n  namespace      : 'state',\\n\\n  // debug data includes performance\\n  performance    : true,\\n\\n  // callback occurs on state change\\n  onActivate     : function() {},\\n  onDeactivate   : function() {},\\n  onChange       : function() {},\\n\\n  // state test functions\\n  activateTest   : function() { return true; },\\n  deactivateTest : function() { return true; },\\n\\n  // whether to automatically map default states\\n  automatic      : true,\\n\\n  // activate / deactivate changes all elements instantiated at same time\\n  sync           : false,\\n\\n  // default flash text duration, used for temporarily changing text of an element\\n  flashDuration  : 1000,\\n\\n  // selector filter\\n  filter     : {\\n    text   : '.loading, .disabled',\\n    active : '.disabled'\\n  },\\n\\n  context    : false,\\n\\n  // error\\n  error: {\\n    beforeSend : 'The before send function has cancelled state change',\\n    method     : 'The method you called is not defined.'\\n  },\\n\\n  // metadata\\n  metadata: {\\n    promise    : 'promise',\\n    storedText : 'stored-text'\\n  },\\n\\n  // change class on state\\n  className: {\\n    active   : 'active',\\n    disabled : 'disabled',\\n    error    : 'error',\\n    loading  : 'loading',\\n    success  : 'success',\\n    warning  : 'warning'\\n  },\\n\\n  selector: {\\n    // selector for text node\\n    text: false\\n  },\\n\\n  defaults : {\\n    input: {\\n      disabled : true,\\n      loading  : true,\\n      active   : true\\n    },\\n    button: {\\n      disabled : true,\\n      loading  : true,\\n      active   : true,\\n    },\\n    progress: {\\n      active   : true,\\n      success  : true,\\n      warning  : true,\\n      error    : true\\n    }\\n  },\\n\\n  states     : {\\n    active   : true,\\n    disabled : true,\\n    error    : true,\\n    loading  : true,\\n    success  : true,\\n    warning  : true\\n  },\\n\\n  text     : {\\n    disabled   : false,\\n    flash      : false,\\n    hover      : false,\\n    active     : false,\\n    inactive   : false,\\n    activate   : false,\\n    deactivate : false\\n  }\\n\\n};\\n\\n\\n\\n})( jQuery, window, document );\\n\\n/*!\\n * # Semantic UI 2.2.4 - Visibility\\n * http://github.com/semantic-org/semantic-ui/\\n *\\n *\\n * Released under the MIT license\\n * http://opensource.org/licenses/MIT\\n *\\n */\\n\\n;(function ($, window, document, undefined) {\\n\\n\\\"use strict\\\";\\n\\nwindow = (typeof window != 'undefined' && window.Math == Math)\\n  ? window\\n  : (typeof self != 'undefined' && self.Math == Math)\\n    ? self\\n    : Function('return this')()\\n;\\n\\n$.fn.visibility = function(parameters) {\\n  var\\n    $allModules    = $(this),\\n    moduleSelector = $allModules.selector || '',\\n\\n    time           = new Date().getTime(),\\n    performance    = [],\\n\\n    query          = arguments[0],\\n    methodInvoked  = (typeof query == 'string'),\\n    queryArguments = [].slice.call(arguments, 1),\\n    returnedValue,\\n\\n    moduleCount    = $allModules.length,\\n    loadedCount    = 0\\n  ;\\n\\n  $allModules\\n    .each(function() {\\n      var\\n        settings        = ( $.isPlainObject(parameters) )\\n          ? $.extend(true, {}, $.fn.visibility.settings, parameters)\\n          : $.extend({}, $.fn.visibility.settings),\\n\\n        className       = settings.className,\\n        namespace       = settings.namespace,\\n        error           = settings.error,\\n        metadata        = settings.metadata,\\n\\n        eventNamespace  = '.' + namespace,\\n        moduleNamespace = 'module-' + namespace,\\n\\n        $window         = $(window),\\n\\n        $module         = $(this),\\n        $context        = $(settings.context),\\n\\n        $placeholder,\\n\\n        selector        = $module.selector || '',\\n        instance        = $module.data(moduleNamespace),\\n\\n        requestAnimationFrame = window.requestAnimationFrame\\n          || window.mozRequestAnimationFrame\\n          || window.webkitRequestAnimationFrame\\n          || window.msRequestAnimationFrame\\n          || function(callback) { setTimeout(callback, 0); },\\n\\n        element         = this,\\n        disabled        = false,\\n\\n        contextObserver,\\n        observer,\\n        module\\n      ;\\n\\n      module = {\\n\\n        initialize: function() {\\n          module.debug('Initializing', settings);\\n\\n          module.setup.cache();\\n\\n          if( module.should.trackChanges() ) {\\n\\n            if(settings.type == 'image') {\\n              module.setup.image();\\n            }\\n            if(settings.type == 'fixed') {\\n              module.setup.fixed();\\n            }\\n\\n            if(settings.observeChanges) {\\n              module.observeChanges();\\n            }\\n            module.bind.events();\\n          }\\n\\n          module.save.position();\\n          if( !module.is.visible() ) {\\n            module.error(error.visible, $module);\\n          }\\n\\n          if(settings.initialCheck) {\\n            module.checkVisibility();\\n          }\\n          module.instantiate();\\n        },\\n\\n        instantiate: function() {\\n          module.debug('Storing instance', module);\\n          $module\\n            .data(moduleNamespace, module)\\n          ;\\n          instance = module;\\n        },\\n\\n        destroy: function() {\\n          module.verbose('Destroying previous module');\\n          if(observer) {\\n            observer.disconnect();\\n          }\\n          if(contextObserver) {\\n            contextObserver.disconnect();\\n          }\\n          $window\\n            .off('load'   + eventNamespace, module.event.load)\\n            .off('resize' + eventNamespace, module.event.resize)\\n          ;\\n          $context\\n            .off('scroll'       + eventNamespace, module.event.scroll)\\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\\n          ;\\n          if(settings.type == 'fixed') {\\n            module.resetFixed();\\n            module.remove.placeholder();\\n          }\\n          $module\\n            .off(eventNamespace)\\n            .removeData(moduleNamespace)\\n          ;\\n        },\\n\\n        observeChanges: function() {\\n          if('MutationObserver' in window) {\\n            contextObserver = new MutationObserver(module.event.contextChanged);\\n            observer        = new MutationObserver(module.event.changed);\\n            contextObserver.observe(document, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            observer.observe(element, {\\n              childList : true,\\n              subtree   : true\\n            });\\n            module.debug('Setting up mutation observer', observer);\\n          }\\n        },\\n\\n        bind: {\\n          events: function() {\\n            module.verbose('Binding visibility events to scroll and resize');\\n            if(settings.refreshOnLoad) {\\n              $window\\n                .on('load'   + eventNamespace, module.event.load)\\n              ;\\n            }\\n            $window\\n              .on('resize' + eventNamespace, module.event.resize)\\n            ;\\n            // pub/sub pattern\\n            $context\\n              .off('scroll'      + eventNamespace)\\n              .on('scroll'       + eventNamespace, module.event.scroll)\\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\\n            ;\\n          }\\n        },\\n\\n        event: {\\n          changed: function(mutations) {\\n            module.verbose('DOM tree modified, updating visibility calculations');\\n            module.timer = setTimeout(function() {\\n              module.verbose('DOM tree modified, updating sticky menu');\\n              module.refresh();\\n            }, 100);\\n          },\\n          contextChanged: function(mutations) {\\n            [].forEach.call(mutations, function(mutation) {\\n              if(mutation.removedNodes) {\\n                [].forEach.call(mutation.removedNodes, function(node) {\\n                  if(node == element || $(node).find(element).length > 0) {\\n                    module.debug('Element removed from DOM, tearing down events');\\n                    module.destroy();\\n                  }\\n                });\\n              }\\n            });\\n          },\\n          resize: function() {\\n            module.debug('Window resized');\\n            if(settings.refreshOnResize) {\\n              requestAnimationFrame(module.refresh);\\n            }\\n          },\\n          load: function() {\\n            module.debug('Page finished loading');\\n            requestAnimationFrame(module.refresh);\\n          },\\n          // publishes scrollchange event on one scroll\\n          scroll: function() {\\n            if(settings.throttle) {\\n              clearTimeout(module.timer);\\n              module.timer = setTimeout(function() {\\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\\n              }, settings.throttle);\\n            }\\n            else {\\n              requestAnimationFrame(function() {\\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\\n              });\\n            }\\n          },\\n          // subscribes to scrollchange\\n          scrollchange: function(event, scrollPosition) {\\n            module.checkVisibility(scrollPosition);\\n          },\\n        },\\n\\n        precache: function(images, callback) {\\n          if (!(images instanceof Array)) {\\n            images = [images];\\n          }\\n          var\\n            imagesLength  = images.length,\\n            loadedCounter = 0,\\n            cache         = [],\\n            cacheImage    = document.createElement('img'),\\n            handleLoad    = function() {\\n              loadedCounter++;\\n              if (loadedCounter >= images.length) {\\n                if ($.isFunction(callback)) {\\n                  callback();\\n                }\\n              }\\n            }\\n          ;\\n          while (imagesLength--) {\\n            cacheImage         = document.createElement('img');\\n            cacheImage.onload  = handleLoad;\\n            cacheImage.onerror = handleLoad;\\n            cacheImage.src     = images[imagesLength];\\n            cache.push(cacheImage);\\n          }\\n        },\\n\\n        enableCallbacks: function() {\\n          module.debug('Allowing callbacks to occur');\\n          disabled = false;\\n        },\\n\\n        disableCallbacks: function() {\\n          module.debug('Disabling all callbacks temporarily');\\n          disabled = true;\\n        },\\n\\n        should: {\\n          trackChanges: function() {\\n            if(methodInvoked) {\\n              module.debug('One time query, no need to bind events');\\n              return false;\\n            }\\n            module.debug('Callbacks being attached');\\n            return true;\\n          }\\n        },\\n\\n        setup: {\\n          cache: function() {\\n            module.cache = {\\n              occurred : {},\\n              screen   : {},\\n              element  : {},\\n            };\\n          },\\n          image: function() {\\n            var\\n              src = $module.data(metadata.src)\\n            ;\\n            if(src) {\\n              module.verbose('Lazy loading image', src);\\n              settings.once           = true;\\n              settings.observeChanges = false;\\n\\n              // show when top visible\\n              settings.onOnScreen = function() {\\n                module.debug('Image on screen', element);\\n                module.precache(src, function() {\\n                  module.set.image(src, function() {\\n                    loadedCount++;\\n                    if(loadedCount == moduleCount) {\\n                      settings.onAllLoaded.call(this);\\n                    }\\n                    settings.onLoad.call(this);\\n                  });\\n                });\\n              };\\n            }\\n          },\\n          fixed: function() {\\n            module.debug('Setting up fixed');\\n            settings.once           = false;\\n            settings.observeChanges = false;\\n            settings.initialCheck   = true;\\n            settings.refreshOnLoad  = true;\\n            if(!parameters.transition) {\\n              settings.transition = false;\\n            }\\n            module.create.placeholder();\\n            module.debug('Added placeholder', $placeholder);\\n            settings.onTopPassed = function() {\\n              module.debug('Element passed, adding fixed position', $module);\\n              module.show.placeholder();\\n              module.set.fixed();\\n              if(settings.transition) {\\n                if($.fn.transition !== undefined) {\\n                  $module.transition(settings.transition, settings.duration);\\n                }\\n              }\\n            };\\n            settings.onTopPassedReverse = function() {\\n              module.debug('Element returned to position, removing fixed', $module);\\n              module.hide.placeholder();\\n              module.remove.fixed();\\n            };\\n          }\\n        },\\n\\n        create: {\\n          placeholder: function() {\\n            module.verbose('Creating fixed position placeholder');\\n            $placeholder = $module\\n              .clone(false)\\n              .css('display', 'none')\\n              .addClass(className.placeholder)\\n              .insertAfter($module)\\n            ;\\n          }\\n        },\\n\\n        show: {\\n          placeholder: function() {\\n            module.verbose('Showing placeholder');\\n            $placeholder\\n              .css('display', 'block')\\n              .css('visibility', 'hidden')\\n            ;\\n          }\\n        },\\n        hide: {\\n          placeholder: function() {\\n            module.verbose('Hiding placeholder');\\n            $placeholder\\n              .css('display', 'none')\\n              .css('visibility', '')\\n            ;\\n          }\\n        },\\n\\n        set: {\\n          fixed: function() {\\n            module.verbose('Setting element to fixed position');\\n            $module\\n              .addClass(className.fixed)\\n              .css({\\n                position : 'fixed',\\n                top      : settings.offset + 'px',\\n                left     : 'auto',\\n                zIndex   : settings.zIndex\\n              })\\n            ;\\n            settings.onFixed.call(element);\\n          },\\n          image: function(src, callback) {\\n            $module\\n              .attr('src', src)\\n            ;\\n            if(settings.transition) {\\n              if( $.fn.transition !== undefined ) {\\n                $module.transition(settings.transition, settings.duration, callback);\\n              }\\n              else {\\n                $module.fadeIn(settings.duration, callback);\\n              }\\n            }\\n            else {\\n              $module.show();\\n            }\\n          }\\n        },\\n\\n        is: {\\n          onScreen: function() {\\n            var\\n              calculations   = module.get.elementCalculations()\\n            ;\\n            return calculations.onScreen;\\n          },\\n          offScreen: function() {\\n            var\\n              calculations   = module.get.elementCalculations()\\n            ;\\n            return calculations.offScreen;\\n          },\\n          visible: function() {\\n            if(module.cache && module.cache.element) {\\n              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);\\n            }\\n            return false;\\n          }\\n        },\\n\\n        refresh: function() {\\n          module.debug('Refreshing constants (width/height)');\\n          if(settings.type == 'fixed') {\\n            module.resetFixed();\\n          }\\n          module.reset();\\n          module.save.position();\\n          if(settings.checkOnRefresh) {\\n            module.checkVisibility();\\n          }\\n          settings.onRefresh.call(element);\\n        },\\n\\n        resetFixed: function () {\\n          module.remove.fixed();\\n          module.remove.occurred();\\n        },\\n\\n        reset: function() {\\n          module.verbose('Resetting all cached values');\\n          if( $.isPlainObject(module.cache) ) {\\n            module.cache.screen = {};\\n            module.cache.element = {};\\n          }\\n        },\\n\\n        checkVisibility: function(scroll) {\\n          module.verbose('Checking visibility of element', module.cache.element);\\n\\n          if( !disabled && module.is.visible() ) {\\n\\n            // save scroll position\\n            module.save.scroll(scroll);\\n\\n            // update calculations derived from scroll\\n            module.save.calculations();\\n\\n            // percentage\\n            module.passed();\\n\\n            // reverse (must be first)\\n            module.passingReverse();\\n            module.topVisibleReverse();\\n            module.bottomVisibleReverse();\\n            module.topPassedReverse();\\n            module.bottomPassedReverse();\\n\\n            // one time\\n            module.onScreen();\\n            module.offScreen();\\n            module.passing();\\n            module.topVisible();\\n            module.bottomVisible();\\n            module.topPassed();\\n            module.bottomPassed();\\n\\n            // on update callback\\n            if(settings.onUpdate) {\\n              settings.onUpdate.call(element, module.get.elementCalculations());\\n            }\\n          }\\n        },\\n\\n        passed: function(amount, newCallback) {\\n          var\\n            calculations   = module.get.elementCalculations(),\\n            amountInPixels\\n          ;\\n          // assign callback\\n          if(amount && newCallback) {\\n            settings.onPassed[amount] = newCallback;\\n          }\\n          else if(amount !== undefined) {\\n            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);\\n          }\\n          else if(calculations.passing) {\\n            $.each(settings.onPassed, function(amount, callback) {\\n              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {\\n                module.execute(callback, amount);\\n              }\\n              else if(!settings.once) {\\n                module.remove.occurred(callback);\\n              }\\n            });\\n          }\\n        },\\n\\n        onScreen: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onOnScreen,\\n            callbackName = 'onScreen'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for onScreen', newCallback);\\n            settings.onOnScreen = newCallback;\\n          }\\n          if(calculations.onScreen) {\\n            module.execute(callback, callbackName);\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback !== undefined) {\\n            return calculations.onOnScreen;\\n          }\\n        },\\n\\n        offScreen: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onOffScreen,\\n            callbackName = 'offScreen'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for offScreen', newCallback);\\n            settings.onOffScreen = newCallback;\\n          }\\n          if(calculations.offScreen) {\\n            module.execute(callback, callbackName);\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback !== undefined) {\\n            return calculations.onOffScreen;\\n          }\\n        },\\n\\n        passing: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onPassing,\\n            callbackName = 'passing'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for passing', newCallback);\\n            settings.onPassing = newCallback;\\n          }\\n          if(calculations.passing) {\\n            module.execute(callback, callbackName);\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback !== undefined) {\\n            return calculations.passing;\\n          }\\n        },\\n\\n\\n        topVisible: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onTopVisible,\\n            callbackName = 'topVisible'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for top visible', newCallback);\\n            settings.onTopVisible = newCallback;\\n          }\\n          if(calculations.topVisible) {\\n            module.execute(callback, callbackName);\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return calculations.topVisible;\\n          }\\n        },\\n\\n        bottomVisible: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onBottomVisible,\\n            callbackName = 'bottomVisible'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for bottom visible', newCallback);\\n            settings.onBottomVisible = newCallback;\\n          }\\n          if(calculations.bottomVisible) {\\n            module.execute(callback, callbackName);\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return calculations.bottomVisible;\\n          }\\n        },\\n\\n        topPassed: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onTopPassed,\\n            callbackName = 'topPassed'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for top passed', newCallback);\\n            settings.onTopPassed = newCallback;\\n          }\\n          if(calculations.topPassed) {\\n            module.execute(callback, callbackName);\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return calculations.topPassed;\\n          }\\n        },\\n\\n        bottomPassed: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onBottomPassed,\\n            callbackName = 'bottomPassed'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for bottom passed', newCallback);\\n            settings.onBottomPassed = newCallback;\\n          }\\n          if(calculations.bottomPassed) {\\n            module.execute(callback, callbackName);\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return calculations.bottomPassed;\\n          }\\n        },\\n\\n        passingReverse: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onPassingReverse,\\n            callbackName = 'passingReverse'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for passing reverse', newCallback);\\n            settings.onPassingReverse = newCallback;\\n          }\\n          if(!calculations.passing) {\\n            if(module.get.occurred('passing')) {\\n              module.execute(callback, callbackName);\\n            }\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback !== undefined) {\\n            return !calculations.passing;\\n          }\\n        },\\n\\n\\n        topVisibleReverse: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onTopVisibleReverse,\\n            callbackName = 'topVisibleReverse'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for top visible reverse', newCallback);\\n            settings.onTopVisibleReverse = newCallback;\\n          }\\n          if(!calculations.topVisible) {\\n            if(module.get.occurred('topVisible')) {\\n              module.execute(callback, callbackName);\\n            }\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return !calculations.topVisible;\\n          }\\n        },\\n\\n        bottomVisibleReverse: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onBottomVisibleReverse,\\n            callbackName = 'bottomVisibleReverse'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for bottom visible reverse', newCallback);\\n            settings.onBottomVisibleReverse = newCallback;\\n          }\\n          if(!calculations.bottomVisible) {\\n            if(module.get.occurred('bottomVisible')) {\\n              module.execute(callback, callbackName);\\n            }\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return !calculations.bottomVisible;\\n          }\\n        },\\n\\n        topPassedReverse: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onTopPassedReverse,\\n            callbackName = 'topPassedReverse'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for top passed reverse', newCallback);\\n            settings.onTopPassedReverse = newCallback;\\n          }\\n          if(!calculations.topPassed) {\\n            if(module.get.occurred('topPassed')) {\\n              module.execute(callback, callbackName);\\n            }\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return !calculations.onTopPassed;\\n          }\\n        },\\n\\n        bottomPassedReverse: function(newCallback) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            callback     = newCallback || settings.onBottomPassedReverse,\\n            callbackName = 'bottomPassedReverse'\\n          ;\\n          if(newCallback) {\\n            module.debug('Adding callback for bottom passed reverse', newCallback);\\n            settings.onBottomPassedReverse = newCallback;\\n          }\\n          if(!calculations.bottomPassed) {\\n            if(module.get.occurred('bottomPassed')) {\\n              module.execute(callback, callbackName);\\n            }\\n          }\\n          else if(!settings.once) {\\n            module.remove.occurred(callbackName);\\n          }\\n          if(newCallback === undefined) {\\n            return !calculations.bottomPassed;\\n          }\\n        },\\n\\n        execute: function(callback, callbackName) {\\n          var\\n            calculations = module.get.elementCalculations(),\\n            screen       = module.get.screenCalculations()\\n          ;\\n          callback = callback || false;\\n          if(callback) {\\n            if(settings.continuous) {\\n              module.debug('Callback being called continuously', callbackName, calculations);\\n              callback.call(element, calculations, screen);\\n            }\\n            else if(!module.get.occurred(callbackName)) {\\n              module.debug('Conditions met', callbackName, calculations);\\n              callback.call(element, calculations, screen);\\n            }\\n          }\\n          module.save.occurred(callbackName);\\n        },\\n\\n        remove: {\\n          fixed: function() {\\n            module.debug('Removing fixed position');\\n            $module\\n              .removeClass(className.fixed)\\n              .css({\\n                position : '',\\n                top      : '',\\n                left     : '',\\n                zIndex   : ''\\n              })\\n            ;\\n            settings.onUnfixed.call(element);\\n          },\\n          placeholder: function() {\\n            module.debug('Removing placeholder content');\\n            if($placeholder) {\\n              $placeholder.remove();\\n            }\\n          },\\n          occurred: function(callback) {\\n            if(callback) {\\n              var\\n                occurred = module.cache.occurred\\n              ;\\n              if(occurred[callback] !== undefined && occurred[callback] === true) {\\n                module.debug('Callback can now be called again', callback);\\n                module.cache.occurred[callback] = false;\\n              }\\n            }\\n            else {\\n              module.cache.occurred = {};\\n            }\\n          }\\n        },\\n\\n        save: {\\n          calculations: function() {\\n            module.verbose('Saving all calculations necessary to determine positioning');\\n            module.save.direction();\\n            module.save.screenCalculations();\\n            module.save.elementCalculations();\\n          },\\n          occurred: function(callback) {\\n            if(callback) {\\n              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {\\n                module.verbose('Saving callback occurred', callback);\\n                module.cache.occurred[callback] = true;\\n              }\\n            }\\n          },\\n          scroll: function(scrollPosition) {\\n            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;\\n            module.cache.scroll = scrollPosition;\\n          },\\n          direction: function() {\\n            var\\n              scroll     = module.get.scroll(),\\n              lastScroll = module.get.lastScroll(),\\n              direction\\n            ;\\n            if(scroll > lastScroll && lastScroll) {\\n              direction = 'down';\\n            }\\n            else if(scroll < lastScroll && lastScroll) {\\n              direction = 'up';\\n            }\\n            else {\\n              direction = 'static';\\n            }\\n            module.cache.direction = direction;\\n            return module.cache.direction;\\n          },\\n          elementPosition: function() {\\n            var\\n              element = module.cache.element,\\n              screen  = module.get.screenSize()\\n            ;\\n            module.verbose('Saving element position');\\n            // (quicker than $.extend)\\n            element.fits          = (element.height < screen.height);\\n            element.offset        = $module.offset();\\n            element.width         = $module.outerWidth();\\n            element.height        = $module.outerHeight();\\n            // store\\n            module.cache.element = element;\\n            return element;\\n          },\\n          elementCalculations: function() {\\n            var\\n              screen     = module.get.screenCalculations(),\\n              element    = module.get.elementPosition()\\n            ;\\n            // offset\\n            if(settings.includeMargin) {\\n              element.margin        = {};\\n              element.margin.top    = parseInt($module.css('margin-top'), 10);\\n              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);\\n              element.top    = element.offset.top - element.margin.top;\\n              element.bottom = element.offset.top + element.height + element.margin.bottom;\\n            }\\n            else {\\n              element.top    = element.offset.top;\\n              element.bottom = element.offset.top + element.height;\\n            }\\n\\n            // visibility\\n            element.topVisible       = (screen.bottom >= element.top);\\n            element.topPassed        = (screen.top >= element.top);\\n            element.bottomVisible    = (screen.bottom >= element.bottom);\\n            element.bottomPassed     = (screen.top >= element.bottom);\\n            element.pixelsPassed     = 0;\\n            element.percentagePassed = 0;\\n\\n            // meta calculations\\n            element.onScreen  = (element.topVisible && !element.bottomPassed);\\n            element.passing   = (element.topPassed && !element.bottomPassed);\\n            element.offScreen = (!element.onScreen);\\n\\n            // passing calculations\\n            if(element.passing) {\\n              element.pixelsPassed     = (screen.top - element.top);\\n              element.percentagePassed = (screen.top - element.top) / element.height;\\n            }\\n            module.cache.element = element;\\n            module.verbose('Updated element calculations', element);\\n            return element;\\n          },\\n          screenCalculations: function() {\\n            var\\n              scroll = module.get.scroll()\\n            ;\\n            module.save.direction();\\n            module.cache.screen.top    = scroll;\\n            module.cache.screen.bottom = scroll + module.cache.screen.height;\\n            return module.cache.screen;\\n          },\\n          screenSize: function() {\\n            module.verbose('Saving window position');\\n            module.cache.screen = {\\n              height: $context.height()\\n            };\\n          },\\n          position: function() {\\n            module.save.screenSize();\\n            module.save.elementPosition();\\n          }\\n        },\\n\\n        get: {\\n          pixelsPassed: function(amount) {\\n            var\\n              element = module.get.elementCalculations()\\n            ;\\n            if(amount.search('%') > -1) {\\n              return ( element.height * (parseInt(amount, 10) / 100) );\\n            }\\n            return parseInt(amount, 10);\\n          },\\n          occurred: function(callback) {\\n            return (module.cache.occurred !== undefined)\\n              ? module.cache.occurred[callback] || false\\n              : false\\n            ;\\n          },\\n          direction: function() {\\n            if(module.cache.direction === undefined) {\\n              module.save.direction();\\n            }\\n            return module.cache.direction;\\n          },\\n          elementPosition: function() {\\n            if(module.cache.element === undefined) {\\n              module.save.elementPosition();\\n            }\\n            return module.cache.element;\\n          },\\n          elementCalculations: function() {\\n            if(module.cache.element === undefined) {\\n              module.save.elementCalculations();\\n            }\\n            return module.cache.element;\\n          },\\n          screenCalculations: function() {\\n            if(module.cache.screen === undefined) {\\n              module.save.screenCalculations();\\n            }\\n            return module.cache.screen;\\n          },\\n          screenSize: function() {\\n            if(module.cache.screen === undefined) {\\n              module.save.screenSize();\\n            }\\n            return module.cache.screen;\\n          },\\n          scroll: function() {\\n            if(module.cache.scroll === undefined) {\\n              module.save.scroll();\\n            }\\n            return module.cache.scroll;\\n          },\\n          lastScroll: function() {\\n            if(module.cache.screen === undefined) {\\n              module.debug('First scroll event, no last scroll could be found');\\n              return false;\\n            }\\n            return module.cache.screen.top;\\n          }\\n        },\\n\\n        setting: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, settings, name);\\n          }\\n          else if(value !== undefined) {\\n            settings[name] = value;\\n          }\\n          else {\\n            return settings[name];\\n          }\\n        },\\n        internal: function(name, value) {\\n          if( $.isPlainObject(name) ) {\\n            $.extend(true, module, name);\\n          }\\n          else if(value !== undefined) {\\n            module[name] = value;\\n          }\\n          else {\\n            return module[name];\\n          }\\n        },\\n        debug: function() {\\n          if(!settings.silent && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.debug.apply(console, arguments);\\n            }\\n          }\\n        },\\n        verbose: function() {\\n          if(!settings.silent && settings.verbose && settings.debug) {\\n            if(settings.performance) {\\n              module.performance.log(arguments);\\n            }\\n            else {\\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\\n              module.verbose.apply(console, arguments);\\n            }\\n          }\\n        },\\n        error: function() {\\n          if(!settings.silent) {\\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\\n            module.error.apply(console, arguments);\\n          }\\n        },\\n        performance: {\\n          log: function(message) {\\n            var\\n              currentTime,\\n              executionTime,\\n              previousTime\\n            ;\\n            if(settings.performance) {\\n              currentTime   = new Date().getTime();\\n              previousTime  = time || currentTime;\\n              executionTime = currentTime - previousTime;\\n              time          = currentTime;\\n              performance.push({\\n                'Name'           : message[0],\\n                'Arguments'      : [].slice.call(message, 1) || '',\\n                'Element'        : element,\\n                'Execution Time' : executionTime\\n              });\\n            }\\n            clearTimeout(module.performance.timer);\\n            module.performance.timer = setTimeout(module.performance.display, 500);\\n          },\\n          display: function() {\\n            var\\n              title = settings.name + ':',\\n              totalTime = 0\\n            ;\\n            time = false;\\n            clearTimeout(module.performance.timer);\\n            $.each(performance, function(index, data) {\\n              totalTime += data['Execution Time'];\\n            });\\n            title += ' ' + totalTime + 'ms';\\n            if(moduleSelector) {\\n              title += ' \\\\'' + moduleSelector + '\\\\'';\\n            }\\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\\n              console.groupCollapsed(title);\\n              if(console.table) {\\n                console.table(performance);\\n              }\\n              else {\\n                $.each(performance, function(index, data) {\\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\\n                });\\n              }\\n              console.groupEnd();\\n            }\\n            performance = [];\\n          }\\n        },\\n        invoke: function(query, passedArguments, context) {\\n          var\\n            object = instance,\\n            maxDepth,\\n            found,\\n            response\\n          ;\\n          passedArguments = passedArguments || queryArguments;\\n          context         = element         || context;\\n          if(typeof query == 'string' && object !== undefined) {\\n            query    = query.split(/[\\\\. ]/);\\n            maxDepth = query.length - 1;\\n            $.each(query, function(depth, value) {\\n              var camelCaseValue = (depth != maxDepth)\\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\\n                : query\\n              ;\\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\\n                object = object[camelCaseValue];\\n              }\\n              else if( object[camelCaseValue] !== undefined ) {\\n                found = object[camelCaseValue];\\n                return false;\\n              }\\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\\n                object = object[value];\\n              }\\n              else if( object[value] !== undefined ) {\\n                found = object[value];\\n                return false;\\n              }\\n              else {\\n                module.error(error.method, query);\\n                return false;\\n              }\\n            });\\n          }\\n          if ( $.isFunction( found ) ) {\\n            response = found.apply(context, passedArguments);\\n          }\\n          else if(found !== undefined) {\\n            response = found;\\n          }\\n          if($.isArray(returnedValue)) {\\n            returnedValue.push(response);\\n          }\\n          else if(returnedValue !== undefined) {\\n            returnedValue = [returnedValue, response];\\n          }\\n          else if(response !== undefined) {\\n            returnedValue = response;\\n          }\\n          return found;\\n        }\\n      };\\n\\n      if(methodInvoked) {\\n        if(instance === undefined) {\\n          module.initialize();\\n        }\\n        instance.save.scroll();\\n        instance.save.calculations();\\n        module.invoke(query);\\n      }\\n      else {\\n        if(instance !== undefined) {\\n          instance.invoke('destroy');\\n        }\\n        module.initialize();\\n      }\\n    })\\n  ;\\n\\n  return (returnedValue !== undefined)\\n    ? returnedValue\\n    : this\\n  ;\\n};\\n\\n$.fn.visibility.settings = {\\n\\n  name                   : 'Visibility',\\n  namespace              : 'visibility',\\n\\n  debug                  : false,\\n  verbose                : false,\\n  performance            : true,\\n\\n  // whether to use mutation observers to follow changes\\n  observeChanges         : true,\\n\\n  // check position immediately on init\\n  initialCheck           : true,\\n\\n  // whether to refresh calculations after all page images load\\n  refreshOnLoad          : true,\\n\\n  // whether to refresh calculations after page resize event\\n  refreshOnResize        : true,\\n\\n  // should call callbacks on refresh event (resize, etc)\\n  checkOnRefresh         : true,\\n\\n  // callback should only occur one time\\n  once                   : true,\\n\\n  // callback should fire continuously whe evaluates to true\\n  continuous             : false,\\n\\n  // offset to use with scroll top\\n  offset                 : 0,\\n\\n  // whether to include margin in elements position\\n  includeMargin          : false,\\n\\n  // scroll context for visibility checks\\n  context                : window,\\n\\n  // visibility check delay in ms (defaults to animationFrame)\\n  throttle               : false,\\n\\n  // special visibility type (image, fixed)\\n  type                   : false,\\n\\n  // z-index to use with visibility 'fixed'\\n  zIndex                 : '10',\\n\\n  // image only animation settings\\n  transition             : 'fade in',\\n  duration               : 1000,\\n\\n  // array of callbacks for percentage\\n  onPassed               : {},\\n\\n  // standard callbacks\\n  onOnScreen             : false,\\n  onOffScreen            : false,\\n  onPassing              : false,\\n  onTopVisible           : false,\\n  onBottomVisible        : false,\\n  onTopPassed            : false,\\n  onBottomPassed         : false,\\n\\n  // reverse callbacks\\n  onPassingReverse       : false,\\n  onTopVisibleReverse    : false,\\n  onBottomVisibleReverse : false,\\n  onTopPassedReverse     : false,\\n  onBottomPassedReverse  : false,\\n\\n  // special callbacks for image\\n  onLoad                 : function() {},\\n  onAllLoaded            : function() {},\\n\\n  // special callbacks for fixed position\\n  onFixed                : function() {},\\n  onUnfixed              : function() {},\\n\\n  // utility callbacks\\n  onUpdate               : false, // disabled by default for performance\\n  onRefresh              : function(){},\\n\\n  metadata : {\\n    src: 'src'\\n  },\\n\\n  className: {\\n    fixed       : 'fixed',\\n    placeholder : 'placeholder'\\n  },\\n\\n  error : {\\n    method  : 'The method you called is not defined.',\\n    visible : 'Element is hidden, you must call refresh after element becomes visible'\\n  }\\n\\n};\\n\\n})( jQuery, window, document );\\n\\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/semantic-ui/dist/semantic.js\\n ** module id = 1\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/semantic-ui/dist/semantic.js?\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"jquery\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"jquery\\\"\\n ** module id = 2\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22jquery%22?\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"react\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"react\\\"\\n ** module id = 3\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22react%22?\");\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"react-dom\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"react-dom\\\"\\n ** module id = 4\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22react-dom%22?\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"react-router\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"react-router\\\"\\n ** module id = 5\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22react-router%22?\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"history\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"history\\\"\\n ** module id = 6\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22history%22?\");\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _App = __webpack_require__(8);\\n\\nvar _App2 = _interopRequireDefault(_App);\\n\\nvar _IndexApp = __webpack_require__(9);\\n\\nvar _IndexApp2 = _interopRequireDefault(_IndexApp);\\n\\nvar _WelcomeApp = __webpack_require__(31);\\n\\nvar _WelcomeApp2 = _interopRequireDefault(_WelcomeApp);\\n\\nvar _TimerApp = __webpack_require__(33);\\n\\nvar _TimerApp2 = _interopRequireDefault(_TimerApp);\\n\\nvar _TaskApp = __webpack_require__(39);\\n\\nvar _TaskApp2 = _interopRequireDefault(_TaskApp);\\n\\nvar _ToastyApp = __webpack_require__(45);\\n\\nvar _ToastyApp2 = _interopRequireDefault(_ToastyApp);\\n\\nvar _ExportApp = __webpack_require__(47);\\n\\nvar _ExportApp2 = _interopRequireDefault(_ExportApp);\\n\\nvar _TaskManagementApp = __webpack_require__(52);\\n\\nvar _TaskManagementApp2 = _interopRequireDefault(_TaskManagementApp);\\n\\nvar _SettingApp = __webpack_require__(56);\\n\\nvar _SettingApp2 = _interopRequireDefault(_SettingApp);\\n\\nvar _AboutApp = __webpack_require__(58);\\n\\nvar _AboutApp2 = _interopRequireDefault(_AboutApp);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _react2.default.createElement(\\n  _reactRouter.Route,\\n  { path: '/', component: _App2.default },\\n  _react2.default.createElement(_reactRouter.IndexRoute, { component: _WelcomeApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'index', path: '/home', component: _IndexApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'timer', path: '/timer', component: _TimerApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'task', path: '/task', component: _TaskApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'toasty', path: '/toasty', component: _ToastyApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'export', path: '/export', component: _ExportApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'setting', path: '/setting', component: _SettingApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'about', path: '/about', component: _AboutApp2.default }),\\n  _react2.default.createElement(_reactRouter.Route, { name: 'taskManagement', path: '/taskManagement', component: _TaskManagementApp2.default })\\n);\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/routes.jsx\\n ** module id = 7\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/routes.jsx?\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(4);\\n\\nvar _reactDom2 = _interopRequireDefault(_reactDom);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar App = function (_React$Component) {\\n  _inherits(App, _React$Component);\\n\\n  function App(props) {\\n    _classCallCheck(this, App);\\n\\n    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\\n  }\\n\\n  _createClass(App, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      this.adjustHeightForBeauty();\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        { className: 'site' },\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'main-container', ref: 'main' },\\n          this.props.children\\n        )\\n      );\\n    }\\n  }, {\\n    key: 'adjustHeightForBeauty',\\n    value: function adjustHeightForBeauty() {\\n      var mainSectionHeight = (0, _jquery2.default)(window).height();\\n      (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.main)).css('min-height', mainSectionHeight);\\n    }\\n  }]);\\n\\n  return App;\\n}(_react2.default.Component);\\n\\nApp.defaultProps = {\\n  displayName: 'App'\\n};\\nexports.default = App;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/App.jsx\\n ** module id = 8\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/App.jsx?\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _IndexSite = __webpack_require__(10);\\n\\nvar _IndexSite2 = _interopRequireDefault(_IndexSite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar IndexApp = function (_React$Component) {\\n  _inherits(IndexApp, _React$Component);\\n\\n  function IndexApp(props, context) {\\n    _classCallCheck(this, IndexApp);\\n\\n    return _possibleConstructorReturn(this, (IndexApp.__proto__ || Object.getPrototypeOf(IndexApp)).call(this, props));\\n  }\\n\\n  _createClass(IndexApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_IndexSite2.default, null);\\n    }\\n  }]);\\n\\n  return IndexApp;\\n}(_react2.default.Component);\\n\\nIndexApp.defaultProps = {\\n  displayName: 'IndexSite'\\n};\\nexports.default = IndexApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/IndexApp.jsx\\n ** module id = 9\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/IndexApp.jsx?\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nvar _StatusChart = __webpack_require__(23);\\n\\nvar _StatusChart2 = _interopRequireDefault(_StatusChart);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nvar _Toasty = __webpack_require__(29);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar IndexSite = function (_BaseSite) {\\n  _inherits(IndexSite, _BaseSite);\\n\\n  function IndexSite(props) {\\n    _classCallCheck(this, IndexSite);\\n\\n    return _possibleConstructorReturn(this, (IndexSite.__proto__ || Object.getPrototypeOf(IndexSite)).call(this, props));\\n  }\\n\\n  _createClass(IndexSite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('home');\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(IndexSite.prototype.__proto__ || Object.getPrototypeOf(IndexSite.prototype), 'componentDidMount', this).call(this);\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(_MenuBar2.default, { ref: 'menuBar', visible: true }),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'ui one column center aligned grid' },\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide' },\\n            _react2.default.createElement(\\n              'h4',\\n              { className: 'ui horizontal inverted divider' },\\n              _lang.CurrentLanguage.index.title\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fifteen wide' },\\n            _react2.default.createElement(\\n              _reactRouter.Link,\\n              { to: '/timer', className: 'ui circular icon button red massive play-button' },\\n              _react2.default.createElement('i', { className: 'power icon' })\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide' },\\n            _react2.default.createElement(\\n              'h4',\\n              { className: 'ui horizontal inverted divider' },\\n              'Status'\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fifteen wide' },\\n            _react2.default.createElement(_StatusChart2.default, null)\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return IndexSite;\\n}(_BaseSite3.default);\\n\\nIndexSite.defaultProps = {\\n  displayName: 'IndexSite'\\n};\\nexports.default = IndexSite;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/IndexSite.jsx\\n ** module id = 10\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/IndexSite.jsx?\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\teval(\"\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar currentLanguage = navigator.language.replace(\\\"-\\\", \\\"\\\");\\n\\nvar Languages = exports.Languages = {\\n  enUS: {\\n    index: {\\n      title: \\\"Let's go\\\",\\n      emptyTaskStatus: \\\"You should start some task\\\",\\n      buttons: {\\n        start: \\\"Start\\\",\\n        status: \\\"Status\\\"\\n      },\\n      chart: {\\n        titleX: \\\"Day\\\",\\n        titleY: \\\"Min\\\"\\n      }\\n    },\\n    welcome: {\\n      title: \\\"Welcome\\\",\\n      loading: \\\"Please wait while the app starts up\\\"\\n    },\\n    setting: {\\n      title: \\\"Settings\\\",\\n      buttons: {\\n        save: \\\"Save\\\",\\n        clearDatabase: \\\"Clear database\\\"\\n      },\\n      interval: {\\n        default: \\\"Time per cycle\\\",\\n        wait: \\\"Time to waiting a new cycle\\\"\\n      },\\n      message: {\\n        success: \\\"The settings updated with successfully!\\\",\\n        clearDatabase: \\\"The database was cleaned!\\\",\\n        clearDatabaseConfirm: \\\"Are you sure to clean database?\\\"\\n      }\\n    },\\n    closeTask: {\\n      title: \\\"Did you finish task ?\\\"\\n    },\\n    timer: {\\n      title: \\\"Tasks\\\",\\n      filter: {\\n        onlyOpenedTask: \\\"Not completed\\\",\\n        placeHolderTask: \\\"Select a task\\\"\\n      },\\n      form: {\\n        taskName: \\\"Task name\\\"\\n      },\\n      buttons: {\\n        addTask: \\\"New task\\\"\\n      },\\n      taskList: {\\n        columns: {\\n          name: {\\n            label: \\\"Name\\\"\\n          }\\n        }\\n      }\\n    },\\n    taskManagement: {\\n      title: \\\"Task\\\",\\n      filter: {\\n        onlyOpenedTask: \\\"Only task not completed yet\\\",\\n        placeHolderTask: \\\"Select a task\\\"\\n      },\\n      form: {\\n        taskName: \\\"Name\\\"\\n      },\\n      messages: {\\n        taskUpdated: \\\"The task updated successfully\\\",\\n        taskDeleted: \\\"The task deleted successfully\\\",\\n        confirmTaskDelete: \\\"Do you want to remove the task {task}?\\\"\\n      }\\n    },\\n    exportFile: {\\n      title: \\\"Export\\\"\\n    },\\n    buttons: {\\n      yes: \\\"Yes\\\",\\n      no: \\\"No\\\",\\n      cancel: \\\"Cancel\\\",\\n      save: \\\"Save\\\"\\n    },\\n    alert: {\\n      timeOver: { title: \\\"Take a break\\\", message: \\\"For {{min}} minutes!\\\" },\\n      stopped: { title: \\\"Interruption\\\", message: \\\"You stopped your cycle!\\\" },\\n      started: { title: \\\"Keep your focus\\\", message: \\\"For longer {{min}} minutes!\\\" },\\n      continueTask: {\\n        title: \\\"There is a started task, Do you would continue this task or cancel?\\\"\\n      }\\n    },\\n    about: {\\n      title: 'About',\\n      message: 'Great thanks to download and use this app, if you would like to contribute, report an issue or upgrade project, please access our repository on GitHub!',\\n      poweredby: 'Coisa de Programador',\\n      site: 'http://www.coisadeprogramador.com.br'\\n    },\\n    grid: {\\n      empty: 'Oops! No data could be found'\\n    }\\n  },\\n  ptBR: {\\n    welcome: {\\n      title: \\\"Bem vindo\\\",\\n      loading: \\\"Espere um pouco enquanto a aplicação inicia\\\"\\n    },\\n    index: {\\n      title: \\\"Vamos começar ?\\\",\\n      emptyTaskStatus: \\\"Nenhuma atividade encontrada\\\",\\n      buttons: {\\n        start: \\\"Iniciar\\\",\\n        status: \\\"Status\\\"\\n      },\\n      chart: {\\n        titleX: \\\"Dia\\\",\\n        titleY: \\\"Minutos\\\"\\n      }\\n\\n    },\\n    setting: {\\n      title: \\\"Configurações\\\",\\n      buttons: {\\n        save: \\\"Salvar\\\",\\n        clearDatabase: \\\"Apagar dados\\\"\\n      },\\n      interval: {\\n        default: \\\"Tempo para um ciclo\\\",\\n        wait: \\\"Tempo de espera para um novo ciclo\\\"\\n      },\\n      message: {\\n        success: \\\"Configurações alteradas com sucesso!\\\",\\n        clearDatabase: \\\"Dados apagados!\\\",\\n        clearDatabaseConfirm: \\\"Deseja limpar o banco de dados?\\\"\\n      }\\n    },\\n    closeTask: {\\n      title: \\\"Terminou a tarefa ?\\\"\\n    },\\n    timer: {\\n      title: \\\"Atividades\\\",\\n      filter: {\\n        onlyOpenedTask: \\\"Somente atividades não finalizadas\\\",\\n        placeHolderTask: \\\"Selecione uma atividade\\\"\\n      },\\n      form: {\\n        taskName: \\\"Nome da tarefa\\\"\\n      },\\n      buttons: {\\n        addTask: \\\"Nova tarefa\\\"\\n      },\\n      taskList: {\\n        columns: {\\n          name: {\\n            label: \\\"Nome\\\"\\n          }\\n        }\\n      }\\n    },\\n    taskManagement: {\\n      title: \\\"Tarefas\\\",\\n      filter: {\\n        placeHolderTask: \\\"Selecione uma atividade\\\",\\n        onlyOpenedTask: \\\"Somente atividades não finalizadas\\\"\\n      },\\n      form: {\\n        taskName: \\\"Nome\\\"\\n      },\\n      messages: {\\n        taskUpdated: \\\"A tarefa foi atualizada\\\",\\n        taskDeleted: \\\"A tarefa foi deletada\\\"\\n      }\\n    },\\n    exportFile: {\\n      title: \\\"Exportar\\\"\\n    },\\n    buttons: {\\n      yes: \\\"Sim\\\",\\n      no: \\\"No\\\",\\n      cancel: \\\"Cancelar\\\",\\n      save: \\\"Salvar\\\"\\n    },\\n    alert: {\\n      timeOver: { title: \\\"Hora do descanso\\\", message: \\\"Descanse por longos {{min}} minutos!\\\" },\\n      stopped: { title: \\\"Parou\\\", message: \\\"Seu ciclo foi parado!\\\" },\\n      started: { title: \\\"Começou\\\", message: \\\"Fique focado por {{min}} minutos!\\\" }\\n    },\\n    about: {\\n      title: 'Sobre',\\n      message: 'Muito obrigado por baixar e utilizar este aplicativo, se você deseja contribuir, reportar problemas, sugerir melhorias, por favor acesse nosso repositório no GitHub!',\\n      poweredby: 'Coisa de Programador',\\n      site: 'http://www.coisadeprogramador.com.br'\\n    },\\n    grid: {\\n      empty: 'Oops! Nenhum resultado encontrado.'\\n    }\\n  }\\n};\\n\\nvar CurrentLanguage = exports.CurrentLanguage = Languages[currentLanguage];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/config/lang.es6.js\\n ** module id = 11\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/config/lang.es6.js?\");\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _q = __webpack_require__(13);\\n\\nvar _q2 = _interopRequireDefault(_q);\\n\\nvar _SettingStore = __webpack_require__(14);\\n\\nvar _TaskStore = __webpack_require__(19);\\n\\nvar _TaskLogStore = __webpack_require__(20);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar Dexie = __webpack_require__(21);\\nDexie.debug = true;\\n\\nvar db = new Dexie('TimeTuning');\\n\\ndb.version(1).stores({\\n  setting: \\\"++id, interval, wait, createAt, modified\\\",\\n  task: \\\"++id, name, started, completed, createAt, modified\\\",\\n  taskLog: \\\"++id, task, timer, createAt, modified\\\"\\n});\\n\\nexports.default = {\\n  db: db,\\n  stores: {\\n    setting: new _SettingStore.SettingStore(db),\\n    task: new _TaskStore.TaskStore(db),\\n    taskLog: new _TaskLogStore.TaskLogStore(db)\\n  },\\n  clearDatabase: function clearDatabase() {\\n    return db.transaction('rw', db.taskLog, db.task, function () {\\n      return [db.taskLog.clear(), db.task.clear()];;\\n    });\\n  }\\n};\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/stores/StoreContext.es6.js\\n ** module id = 12\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/stores/StoreContext.es6.js?\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"q\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"q\\\"\\n ** module id = 13\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22q%22?\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SettingStore = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _q = __webpack_require__(13);\\n\\nvar _q2 = _interopRequireDefault(_q);\\n\\nvar _BaseStore2 = __webpack_require__(15);\\n\\nvar _Session = __webpack_require__(16);\\n\\nvar _Setting = __webpack_require__(17);\\n\\nvar _Setting2 = _interopRequireDefault(_Setting);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar SETTING_KEY = 'tuningtimer.setting';\\n\\nvar SettingStore = exports.SettingStore = function (_BaseStore) {\\n  _inherits(SettingStore, _BaseStore);\\n\\n  function SettingStore(databases) {\\n    _classCallCheck(this, SettingStore);\\n\\n    return _possibleConstructorReturn(this, (SettingStore.__proto__ || Object.getPrototypeOf(SettingStore)).call(this, databases, 'setting'));\\n  }\\n\\n  _createClass(SettingStore, [{\\n    key: 'get',\\n    value: function get(id) {\\n      return this.first();\\n    }\\n  }, {\\n    key: 'update',\\n    value: function update(model) {\\n      var _this2 = this;\\n\\n      return _get(SettingStore.prototype.__proto__ || Object.getPrototypeOf(SettingStore.prototype), 'update', this).call(this, model).then(function (setting) {\\n        _this2.setCurrent(model);\\n        return model;\\n      });\\n    }\\n  }, {\\n    key: 'load',\\n    value: function load() {\\n      var _this3 = this;\\n\\n      return this.get().then(function (setting) {\\n        _this3.setCurrent(setting);\\n        return setting;\\n      });\\n    }\\n  }, {\\n    key: 'preload',\\n    value: function preload() {\\n      var _this4 = this;\\n\\n      var currentSetting = this.current();\\n\\n      if (currentSetting) {\\n        return this.load();\\n      }\\n\\n      return this.count().then(function (count) {\\n        if (count > 0) {\\n          return _this4.load();\\n        }\\n\\n        var currentSetting = new _Setting2.default();\\n\\n        return _this4.create(currentSetting).then(function (setting) {\\n          currentSetting = new _Setting2.default();\\n          _this4.setCurrent(currentSetting);\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'setCurrent',\\n    value: function setCurrent(setting) {\\n      if (setting) {\\n        _Session.SessionLocalHelper.create(SETTING_KEY, setting);\\n      }\\n    }\\n  }, {\\n    key: 'current',\\n    value: function current() {\\n      return _Session.SessionLocalHelper.get(SETTING_KEY);\\n    }\\n  }]);\\n\\n  return SettingStore;\\n}(_BaseStore2.BaseStore);\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/stores/SettingStore.es6.js\\n ** module id = 14\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/stores/SettingStore.es6.js?\");\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.BaseStore = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _q = __webpack_require__(13);\\n\\nvar _q2 = _interopRequireDefault(_q);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar BaseStore = exports.BaseStore = function () {\\n  function BaseStore(db, dbContextName) {\\n    _classCallCheck(this, BaseStore);\\n\\n    this.dbContext = db;\\n    this.db = db[dbContextName];\\n  }\\n\\n  _createClass(BaseStore, [{\\n    key: 'transaction',\\n    value: function transaction() {\\n      return this.dbContext.transaction.apply(this, arguments);\\n    }\\n  }, {\\n    key: 'count',\\n    value: function count() {\\n      return this.db.count().catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }, {\\n    key: 'first',\\n    value: function first() {\\n      return this.db.toCollection().first().catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }, {\\n    key: 'all',\\n    value: function all() {\\n      return this.db.toCollection().toArray().catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }, {\\n    key: 'get',\\n    value: function get(id) {\\n      return this.db.filter(function (x) {\\n        return x.id === id;\\n      }).toArray().catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }, {\\n    key: 'create',\\n    value: function create(model) {\\n      delete model.id;\\n\\n      return this.db.add(model).catch(function (err) {\\n        throw err;\\n      }).then(function () {\\n        return model;\\n      });\\n    }\\n  }, {\\n    key: 'update',\\n    value: function update(model) {\\n      var id = model.id;\\n\\n      delete model.id;\\n\\n      return this.db.update(id, model).catch(function (err) {\\n        throw err;\\n      }).then(function () {\\n        model.id = id;\\n        return model;\\n      });\\n    }\\n  }, {\\n    key: 'remove',\\n    value: function remove(id) {\\n      return this.db.delete(id).catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }, {\\n    key: 'removeAll',\\n    value: function removeAll() {\\n      return this.db.clear().catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }]);\\n\\n  return BaseStore;\\n}();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/stores/BaseStore.es6.js\\n ** module id = 15\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/stores/BaseStore.es6.js?\");\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\teval(\"\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar _SessionHelper = exports._SessionHelper = function () {\\n  function _SessionHelper(context) {\\n    _classCallCheck(this, _SessionHelper);\\n\\n    this.context = context;\\n  }\\n\\n  _createClass(_SessionHelper, [{\\n    key: \\\"create\\\",\\n    value: function create(key, value) {\\n      if (typeof value !== \\\"string\\\") {\\n        value = JSON.stringify(value);\\n      }\\n\\n      this.context.setItem(key, value);\\n    }\\n  }, {\\n    key: \\\"remove\\\",\\n    value: function remove(key) {\\n      this.context.setItem(key, undefined);\\n    }\\n  }, {\\n    key: \\\"get\\\",\\n    value: function get(key) {\\n      var value;\\n      var valueAsJson = this.context.getItem(key);\\n\\n      if (valueAsJson && valueAsJson !== 'undefined') {\\n        value = JSON.parse(valueAsJson);\\n      }\\n\\n      return value;\\n    }\\n  }]);\\n\\n  return _SessionHelper;\\n}();\\n\\nvar SessionHelper = exports.SessionHelper = new _SessionHelper(window.sessionStorage);\\nvar SessionLocalHelper = exports.SessionLocalHelper = new _SessionHelper(window.localStorage);\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/helpers/Session.es6.js\\n ** module id = 16\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/helpers/Session.es6.js?\");\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar extend = __webpack_require__(18)._extend;\\n\\nvar SettingModel = function SettingModel(args) {\\n  _classCallCheck(this, SettingModel);\\n\\n  args = args || {};\\n\\n  this.id = 'config';\\n  this.interval = 20;\\n  this.wait = 5;\\n  this.createAt = new Date();\\n  this.modified = null;\\n\\n  extend(this, args);\\n};\\n\\nexports.default = SettingModel;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/models/Setting.es6.js\\n ** module id = 17\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/models/Setting.es6.js?\");\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"util\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"util\\\"\\n ** module id = 18\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22util%22?\");\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.TaskStore = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _q = __webpack_require__(13);\\n\\nvar _q2 = _interopRequireDefault(_q);\\n\\nvar _BaseStore2 = __webpack_require__(15);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskStore = exports.TaskStore = function (_BaseStore) {\\n  _inherits(TaskStore, _BaseStore);\\n\\n  function TaskStore(databases) {\\n    _classCallCheck(this, TaskStore);\\n\\n    return _possibleConstructorReturn(this, (TaskStore.__proto__ || Object.getPrototypeOf(TaskStore)).call(this, databases, 'task'));\\n  }\\n\\n  _createClass(TaskStore, [{\\n    key: 'findByContent',\\n    value: function findByContent(name, completed, limit) {\\n      if (typeof completed !== \\\"boolean\\\") {\\n        completed = false;\\n      }\\n\\n      var query = this.db.where('name').startsWithIgnoreCase(name).filter(function (x) {\\n        return x.completed === completed;\\n      });\\n\\n      if (typeof limit == \\\"number\\\") {\\n        query = query.limit(limit);\\n      }\\n\\n      return query.toArray().catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }]);\\n\\n  return TaskStore;\\n}(_BaseStore2.BaseStore);\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/stores/TaskStore.es6.js\\n ** module id = 19\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/stores/TaskStore.es6.js?\");\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.TaskLogStore = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _q = __webpack_require__(13);\\n\\nvar _q2 = _interopRequireDefault(_q);\\n\\nvar _BaseStore2 = __webpack_require__(15);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskLogStore = exports.TaskLogStore = function (_BaseStore) {\\n  _inherits(TaskLogStore, _BaseStore);\\n\\n  function TaskLogStore(databases) {\\n    _classCallCheck(this, TaskLogStore);\\n\\n    return _possibleConstructorReturn(this, (TaskLogStore.__proto__ || Object.getPrototypeOf(TaskLogStore)).call(this, databases, 'taskLog'));\\n  }\\n\\n  _createClass(TaskLogStore, [{\\n    key: 'filterByDate',\\n    value: function filterByDate(start, end) {\\n      return this.db.where('createAt').between(start, end).toArray();\\n    }\\n  }, {\\n    key: 'updateTask',\\n    value: function updateTask(model) {\\n      return this.db.filter(function (x) {\\n        return x.task.id === model.id;\\n      }).modify({ task: model });\\n    }\\n  }]);\\n\\n  return TaskLogStore;\\n}(_BaseStore2.BaseStore);\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/stores/TaskLogStore.es6.js\\n ** module id = 20\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/stores/TaskLogStore.es6.js?\");\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"dexie\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"dexie\\\"\\n ** module id = 21\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22dexie%22?\");\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(4);\\n\\nvar _reactDom2 = _interopRequireDefault(_reactDom);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar MenuBar = function (_React$Component) {\\n  _inherits(MenuBar, _React$Component);\\n\\n  function MenuBar(props, context) {\\n    _classCallCheck(this, MenuBar);\\n\\n    var _this = _possibleConstructorReturn(this, (MenuBar.__proto__ || Object.getPrototypeOf(MenuBar)).call(this, props));\\n\\n    _this.toggleSidebar = _this.toggleSidebar.bind(_this);\\n    _this.hideSidebar = _this.hideSidebar.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(MenuBar, [{\\n    key: 'toggleSidebar',\\n    value: function toggleSidebar() {\\n      var bar = this.getSidebar();\\n      bar.sidebar({\\n        overlay: true\\n      }).sidebar('toggle');\\n    }\\n  }, {\\n    key: 'hideSidebar',\\n    value: function hideSidebar() {\\n      var bar = this.getSidebar();\\n      bar.sidebar({\\n        overlay: true\\n      }).sidebar('hide');\\n    }\\n  }, {\\n    key: 'getSidebar',\\n    value: function getSidebar() {\\n      return (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.bar));\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      (0, _jquery2.default)('.ui.sidebar').sidebar({\\n        exclusive: true\\n      });\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var template;\\n\\n      if (this.props.visible === true) {\\n        template = _react2.default.createElement(\\n          'div',\\n          null,\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'ui top fixed compact menu inverted' },\\n            _react2.default.createElement(\\n              _reactRouter.Link,\\n              { to: '/', className: 'item logo' },\\n              _react2.default.createElement('img', { src: 'images/icon.png' })\\n            ),\\n            _react2.default.createElement(\\n              _reactRouter.Link,\\n              { to: '/export', className: 'item' },\\n              _react2.default.createElement('i', { className: 'download icon' })\\n            ),\\n            _react2.default.createElement(\\n              _reactRouter.Link,\\n              { to: '/taskManagement', className: 'item' },\\n              _react2.default.createElement('i', { className: 'search icon' })\\n            ),\\n            _react2.default.createElement(\\n              _reactRouter.Link,\\n              { to: '/setting', className: 'item' },\\n              _react2.default.createElement('i', { className: 'setting icon' })\\n            ),\\n            _react2.default.createElement(\\n              _reactRouter.Link,\\n              { to: '/about', className: 'item' },\\n              _react2.default.createElement('i', { className: 'help icon' })\\n            )\\n          )\\n        );\\n      }\\n\\n      return template;\\n    }\\n  }]);\\n\\n  return MenuBar;\\n}(_react2.default.Component);\\n\\n;\\n\\nMenuBar.contextTypes = {\\n  router: _react2.default.PropTypes.object\\n};\\n\\nexports.default = MenuBar;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/common/MenuBar.jsx\\n ** module id = 22\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/common/MenuBar.jsx?\");\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _moment = __webpack_require__(24);\\n\\nvar _moment2 = _interopRequireDefault(_moment);\\n\\nvar _reactD = __webpack_require__(25);\\n\\nvar _reactD2 = _interopRequireDefault(_reactD);\\n\\nvar _d = __webpack_require__(26);\\n\\nvar _d2 = _interopRequireDefault(_d);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar BarChart = _reactD2.default.BarChart;\\n\\nvar StatusChart = function (_React$Component) {\\n  _inherits(StatusChart, _React$Component);\\n\\n  function StatusChart(props, context) {\\n    _classCallCheck(this, StatusChart);\\n\\n    var _this = _possibleConstructorReturn(this, (StatusChart.__proto__ || Object.getPrototypeOf(StatusChart)).call(this, props));\\n\\n    _this.context = context;\\n\\n    _this.state = {\\n      logs: [],\\n      xScale: null,\\n      xScaleBrush: null\\n    };\\n\\n    _this.getTaskData = _this.getTaskData.bind(_this);\\n    _this.startChart = _this.startChart.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(StatusChart, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      this.getTaskData();\\n    }\\n  }, {\\n    key: 'getTaskData',\\n    value: function getTaskData() {\\n      var _this2 = this;\\n\\n      var start = (0, _moment2.default)().startOf('day').subtract(3, 'month');\\n      var end = (0, _moment2.default)();\\n\\n      _StoreContext2.default.stores.taskLog.filterByDate(start.toDate(), end.toDate()).then(function (logs) {\\n        _this2.state.logs = logs;\\n\\n        var data = {\\n          name: 'dia',\\n          values: []\\n        };\\n\\n        var logsSummary = {};\\n\\n        logs.forEach(function (log) {\\n          var label = (0, _moment2.default)(log.createAt).format('ddd');\\n\\n          if (!logsSummary[label]) {\\n            logsSummary[label] = 0;\\n          }\\n\\n          logsSummary[label] += log.timer;\\n        });\\n\\n        Object.keys(logsSummary).map(function (key, index) {\\n          data.values.push({\\n            x: key,\\n            y: logsSummary[key]\\n          });\\n        });\\n\\n        _this2.startChart([data]);\\n      });\\n    }\\n  }, {\\n    key: 'startChart',\\n    value: function startChart(data) {\\n      this.state.data = data;\\n\\n      this.setState({\\n        data: data\\n      });\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var template;\\n\\n      var data = this.state.data;\\n      var colors = _d2.default.scale.ordinal().range([\\\"#607D8B\\\", \\\"#CFD8DC\\\"]);\\n\\n      if (this.state.logs && data && data[0].values.length > 0) {\\n\\n        template = _react2.default.createElement(BarChart, {\\n          data: data,\\n          width: 350,\\n          height: 200,\\n          fill: '#3182bd',\\n          colors: colors,\\n          yAxisLabel: _lang.CurrentLanguage.index.chart.titleY,\\n          xAxisLabel: _lang.CurrentLanguage.index.chart.titleX,\\n          gridHorizontal: true\\n        });\\n      } else {\\n        template = _react2.default.createElement(\\n          'div',\\n          null,\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'ui pointing red basic label' },\\n            _lang.CurrentLanguage.index.emptyTaskStatus\\n          )\\n        );\\n      }\\n\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        template\\n      );\\n    }\\n  }]);\\n\\n  return StatusChart;\\n}(_react2.default.Component);\\n\\n;\\n\\nexports.default = StatusChart;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/index/StatusChart.jsx\\n ** module id = 23\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/index/StatusChart.jsx?\");\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"moment\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"moment\\\"\\n ** module id = 24\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22moment%22?\");\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"react-d3\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"react-d3\\\"\\n ** module id = 25\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22react-d3%22?\");\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"d3\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"d3\\\"\\n ** module id = 26\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22d3%22?\");\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(4);\\n\\nvar _reactDom2 = _interopRequireDefault(_reactDom);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar shell = __webpack_require__(28).shell;\\n\\nvar BaseSite = function (_React$Component) {\\n  _inherits(BaseSite, _React$Component);\\n\\n  function BaseSite(props) {\\n    _classCallCheck(this, BaseSite);\\n\\n    var _this = _possibleConstructorReturn(this, (BaseSite.__proto__ || Object.getPrototypeOf(BaseSite)).call(this, props));\\n\\n    _this.setting = _StoreContext2.default.stores.setting.current();\\n    return _this;\\n  }\\n\\n  _createClass(BaseSite, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      var _this2 = this;\\n\\n      (0, _jquery2.default)('a[href^=\\\"http://\\\"]').unbind('click.site').bind('click.site', function (e) {\\n        _this2.openBrowser(e);\\n      });\\n    }\\n  }, {\\n    key: 'bindBodyClass',\\n    value: function bindBodyClass(className) {\\n      (0, _jquery2.default)('body').attr('class', className);\\n      (0, _jquery2.default)('.main-container').attr('class', 'main-container');\\n    }\\n  }, {\\n    key: 'openBrowser',\\n    value: function openBrowser(event) {\\n      event.preventDefault();\\n      shell.openExternal(event.target.href);\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        'Not implemented'\\n      );\\n    }\\n  }]);\\n\\n  return BaseSite;\\n}(_react2.default.Component);\\n\\nexports.default = BaseSite;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/BaseSite.jsx\\n ** module id = 27\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/BaseSite.jsx?\");\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"electron\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"electron\\\"\\n ** module id = 28\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22electron%22?\");\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Toasty = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _path = __webpack_require__(30);\\n\\nvar _path2 = _interopRequireDefault(_path);\\n\\nvar _electron = __webpack_require__(28);\\n\\nvar _electron2 = _interopRequireDefault(_electron);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\n/* eslint-disable */\\nvar _require$remote = __webpack_require__(28).remote;\\n\\nvar BrowserWindow = _require$remote.BrowserWindow;\\nvar electronScreen = _require$remote.screen;\\nvar _electronScreen$getPr = electronScreen.getPrimaryDisplay().size;\\nvar width = _electronScreen$getPr.width;\\nvar height = _electronScreen$getPr.height;\\n\\nvar app = __webpack_require__(28).remote.app;\\n\\nvar toastyWindow = void 0;\\n\\nvar toastyWidth = 200;\\nvar toastyHeight = 200;\\nvar x = width - (toastyWidth + 50);\\nvar y = height - (toastyHeight + 50);\\n\\nvar Toasty = exports.Toasty = function () {\\n  function Toasty() {\\n    _classCallCheck(this, Toasty);\\n  }\\n\\n  _createClass(Toasty, null, [{\\n    key: 'load',\\n    value: function load(imageType) {\\n      this.closeWindow();\\n\\n      if (toastyWindow) {\\n        toastyWindow.reload();\\n        toastyWindow.hide();\\n      } else {\\n        toastyWindow = new BrowserWindow({\\n          width: toastyWidth,\\n          height: toastyHeight,\\n          x: x,\\n          y: y,\\n          frame: false,\\n          movable: false,\\n          minimizable: false,\\n          maximizable: false,\\n          alwaysOnTop: true\\n        });\\n\\n        console.log('file://' + app.getAppPath() + '/main.html#/toasty?imageType=' + imageType);\\n        toastyWindow.loadURL('file://' + app.getAppPath() + '/main.html#/toasty?imageType=' + imageType);\\n      }\\n\\n      Toasty.animate(6);\\n      Toasty.close(7);\\n    }\\n  }, {\\n    key: 'animate',\\n    value: function animate(timeout) {\\n      timeout = timeout || 0;\\n      var timeoutMs = timeout * 1000;\\n\\n      setTimeout(function () {\\n        Toasty.close();\\n      }, timeoutMs);\\n    }\\n  }, {\\n    key: 'close',\\n    value: function close(timeout) {\\n      timeout = timeout || 0;\\n      var timeoutMs = timeout * 1000;\\n\\n      if (toastyWindow) {\\n        setTimeout(function () {\\n          if (toastyWindow) {\\n            toastyWindow.destroy();\\n            toastyWindow = undefined;\\n          }\\n        }, timeoutMs);\\n      }\\n    }\\n  }, {\\n    key: 'closeWindow',\\n    value: function closeWindow(id) {\\n      var windows = BrowserWindow.getAllWindows();\\n      windows.shift();\\n\\n      windows.forEach(function (w) {\\n        return w.close();\\n      });\\n    }\\n  }]);\\n\\n  return Toasty;\\n}();\\n\\n;\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/helpers/Toasty.es6.js\\n ** module id = 29\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/helpers/Toasty.es6.js?\");\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"path\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"path\\\"\\n ** module id = 30\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22path%22?\");\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _WelcomeSite = __webpack_require__(32);\\n\\nvar _WelcomeSite2 = _interopRequireDefault(_WelcomeSite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar WelcomeApp = function (_React$Component) {\\n  _inherits(WelcomeApp, _React$Component);\\n\\n  function WelcomeApp(props, context) {\\n    _classCallCheck(this, WelcomeApp);\\n\\n    return _possibleConstructorReturn(this, (WelcomeApp.__proto__ || Object.getPrototypeOf(WelcomeApp)).call(this, props));\\n  }\\n\\n  _createClass(WelcomeApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_WelcomeSite2.default, { location: this.props.location });\\n    }\\n  }]);\\n\\n  return WelcomeApp;\\n}(_react2.default.Component);\\n\\nWelcomeApp.defaultProps = {\\n  displayName: 'WelcomeSite'\\n};\\nexports.default = WelcomeApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/WelcomeApp.jsx\\n ** module id = 31\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/WelcomeApp.jsx?\");\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _Setting = __webpack_require__(17);\\n\\nvar _Setting2 = _interopRequireDefault(_Setting);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar WelcomeSite = function (_BaseSite) {\\n  _inherits(WelcomeSite, _BaseSite);\\n\\n  function WelcomeSite(props) {\\n    _classCallCheck(this, WelcomeSite);\\n\\n    var _this = _possibleConstructorReturn(this, (WelcomeSite.__proto__ || Object.getPrototypeOf(WelcomeSite)).call(this, props));\\n\\n    _this.init = _this.init.bind(_this);\\n    _this.goHome = _this.goHome.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(WelcomeSite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('welcome');\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(WelcomeSite.prototype.__proto__ || Object.getPrototypeOf(WelcomeSite.prototype), 'componentDidMount', this).call(this);\\n      this.init();\\n    }\\n  }, {\\n    key: 'init',\\n    value: function init() {\\n      var _this2 = this;\\n\\n      var setting = _StoreContext2.default.stores.setting.current();\\n\\n      if (setting) {\\n        return this.goHome();\\n      }\\n\\n      _StoreContext2.default.stores.setting.preload().then(function (setting) {\\n        setTimeout(function () {\\n          _this2.goHome();\\n        }, 1000);\\n      }).catch(function (err) {\\n        throw err;\\n      });\\n    }\\n  }, {\\n    key: 'goHome',\\n    value: function goHome() {\\n      this.context.router.push('/home');\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'ui one column center aligned grid' },\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fifteen wide' },\\n            _react2.default.createElement('img', { src: 'images/logo.png', className: 'logo' })\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fifteen wide' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'ui black massive label welcome-header' },\\n              _lang.CurrentLanguage.welcome.title\\n            ),\\n            _react2.default.createElement(\\n              'p',\\n              null,\\n              _lang.CurrentLanguage.welcome.loading\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fifteen wide welcome-loading' },\\n            _react2.default.createElement('div', { className: 'ui active inline large loader' })\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return WelcomeSite;\\n}(_BaseSite3.default);\\n\\nWelcomeSite.defaultProps = {\\n  displayName: 'WelcomeSite'\\n};\\n;\\n\\nWelcomeSite.contextTypes = {\\n  router: function router() {\\n    return _react2.default.PropTypes.func.isRequired;\\n  }\\n};\\n\\nexports.default = WelcomeSite;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/WelcomeSite.jsx\\n ** module id = 32\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/WelcomeSite.jsx?\");\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _TimerSite = __webpack_require__(34);\\n\\nvar _TimerSite2 = _interopRequireDefault(_TimerSite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TimerApp = function (_React$Component) {\\n  _inherits(TimerApp, _React$Component);\\n\\n  function TimerApp(props, context) {\\n    _classCallCheck(this, TimerApp);\\n\\n    return _possibleConstructorReturn(this, (TimerApp.__proto__ || Object.getPrototypeOf(TimerApp)).call(this, props));\\n  }\\n\\n  _createClass(TimerApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_TimerSite2.default, null);\\n    }\\n  }]);\\n\\n  return TimerApp;\\n}(_react2.default.Component);\\n\\nTimerApp.defaultProps = {\\n  displayName: 'TimerSite'\\n};\\nexports.default = TimerApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/TimerApp.jsx\\n ** module id = 33\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/TimerApp.jsx?\");\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _TaskList = __webpack_require__(35);\\n\\nvar _TaskList2 = _interopRequireDefault(_TaskList);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nvar _CreateTask = __webpack_require__(37);\\n\\nvar _CreateTask2 = _interopRequireDefault(_CreateTask);\\n\\nvar _lang = __webpack_require__(11);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TimerSite = function (_BaseSite) {\\n  _inherits(TimerSite, _BaseSite);\\n\\n  function TimerSite(props) {\\n    _classCallCheck(this, TimerSite);\\n\\n    var _this = _possibleConstructorReturn(this, (TimerSite.__proto__ || Object.getPrototypeOf(TimerSite)).call(this, props));\\n\\n    _this.state = {};\\n    _this.state = _this.getStoreState();\\n    _this.searchTasks = _this.searchTasks.bind(_this);\\n    _this.eventSearchTasks = _this.eventSearchTasks.bind(_this);\\n    _this.changeTaskStatus = _this.changeTaskStatus.bind(_this);\\n    _this.showCreateTask = _this.showCreateTask.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(TimerSite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('timer');\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(TimerSite.prototype.__proto__ || Object.getPrototypeOf(TimerSite.prototype), 'componentDidMount', this).call(this);\\n\\n      this.bindSearchTasks();\\n    }\\n  }, {\\n    key: 'getStoreState',\\n    value: function getStoreState() {\\n      return {\\n        init: this.state.init || false,\\n        task: this.state.task || '',\\n        tasks: this.state.tasks || [],\\n        filter: this.state.filter || {\\n          onlyOpenedTask: true\\n        }\\n      };\\n    }\\n  }, {\\n    key: 'onStoreChange',\\n    value: function onStoreChange() {\\n      var newState = this.getStoreState();\\n      this.setState(newState);\\n    }\\n  }, {\\n    key: 'eventSearchTasks',\\n    value: function eventSearchTasks(e) {\\n      this.state.task = e.target.value;\\n      this.bindSearchTasks();\\n      return true;\\n    }\\n  }, {\\n    key: 'searchTasks',\\n    value: function searchTasks() {\\n      return _StoreContext2.default.stores.task.findByContent(this.state.task, !this.state.filter.onlyOpenedTask);\\n    }\\n  }, {\\n    key: 'bindSearchTasks',\\n    value: function bindSearchTasks() {\\n      var _this2 = this;\\n\\n      this.searchTasks().then(function (tasks) {\\n        _this2.state.tasks = tasks;\\n        _this2.onStoreChange();\\n      });\\n    }\\n  }, {\\n    key: 'changeTaskStatus',\\n    value: function changeTaskStatus(e) {\\n      this.state.filter.onlyOpenedTask = e.target.checked;\\n      this.bindSearchTasks();\\n      return true;\\n    }\\n  }, {\\n    key: 'showCreateTask',\\n    value: function showCreateTask(e) {\\n      this.refs.createTaskModal.show();\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var template = _react2.default.createElement(\\n        'div',\\n        { className: 'ui grid center aligned ' },\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'fourteen wide column' },\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'ui breadcrumb' },\\n            _react2.default.createElement(\\n              _reactRouter.Link,\\n              { to: '/', className: 'section' },\\n              'Home'\\n            ),\\n            _react2.default.createElement('i', { className: 'right chevron icon divider' }),\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'active section' },\\n              _lang.CurrentLanguage.timer.title\\n            )\\n          )\\n        ),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'fourteen wide column' },\\n          _react2.default.createElement(\\n            'form',\\n            { className: 'ui form' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'field' },\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'ui fluid icon input small' },\\n                _react2.default.createElement('input', { ref: 'task', placeholder: _lang.CurrentLanguage.timer.filter.placeHolderTask, onChange: this.eventSearchTasks, type: 'text', value: this.state.task }),\\n                _react2.default.createElement('i', { className: 'search icon' })\\n              )\\n            ),\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'field' },\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'ui toggle checkbox small' },\\n                _react2.default.createElement('input', { name: 'onlyOpenedTask', checked: this.state.filter.onlyOpenedTask, type: 'checkbox', onChange: this.changeTaskStatus }),\\n                _react2.default.createElement(\\n                  'label',\\n                  null,\\n                  _lang.CurrentLanguage.timer.filter.onlyOpenedTask\\n                )\\n              )\\n            ),\\n            _react2.default.createElement(\\n              'button',\\n              { type: 'button', className: 'ui green icon button small', title: _lang.CurrentLanguage.timer.buttons.addTask, onClick: this.showCreateTask },\\n              _react2.default.createElement('i', { className: 'add icon' }),\\n              'Nova atividade'\\n            )\\n          )\\n        ),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'fourteen wide column' },\\n          _react2.default.createElement(_TaskList2.default, { tasks: this.state.tasks })\\n        )\\n      );\\n\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(_MenuBar2.default, { visible: true }),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'pusher' },\\n          template,\\n          _react2.default.createElement(_CreateTask2.default, { ref: 'createTaskModal' })\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return TimerSite;\\n}(_BaseSite3.default);\\n\\nTimerSite.defaultProps = {\\n  displayName: 'TimerSite'\\n};\\nexports.default = TimerSite;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/TimerSite.jsx\\n ** module id = 34\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/TimerSite.jsx?\");\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _griddleReact = __webpack_require__(36);\\n\\nvar _griddleReact2 = _interopRequireDefault(_griddleReact);\\n\\nvar _lang = __webpack_require__(11);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskList = function (_React$Component) {\\n  _inherits(TaskList, _React$Component);\\n\\n  function TaskList(props, context) {\\n    _classCallCheck(this, TaskList);\\n\\n    var _this = _possibleConstructorReturn(this, (TaskList.__proto__ || Object.getPrototypeOf(TaskList)).call(this, props));\\n\\n    _this.state = {\\n      tasks: [],\\n      columns: [{\\n        columnName: 'name',\\n        displayName: _lang.CurrentLanguage.timer.taskList.columns.name.label,\\n        order: 1,\\n        locked: false,\\n        visible: true\\n      }]\\n    };\\n\\n    _this.play = _this.play.bind(_this);\\n    _this.selectTask = _this.selectTask.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(TaskList, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.prepareComponentState(this.props);\\n    }\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {\\n      this.prepareComponentState(nextProps);\\n    }\\n  }, {\\n    key: 'prepareComponentState',\\n    value: function prepareComponentState(props) {\\n      this.setState({\\n        tasks: props.tasks || []\\n      });\\n    }\\n  }, {\\n    key: 'selectTask',\\n    value: function selectTask(gridRow, event) {\\n      var task = gridRow.props.data;\\n      this.play(task);\\n    }\\n  }, {\\n    key: 'play',\\n    value: function play(task) {\\n      this.context.router.push({\\n        pathname: '/task',\\n        state: {\\n          task: task\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      if (this.state.tasks.length == 0) {\\n        return _react2.default.createElement('div', null);\\n      }\\n\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(_griddleReact2.default, { results: this.state.tasks,\\n          tableClassName: 'ui very basic selectable table small',\\n          columnMetadata: this.state.columns,\\n          columns: [\\\"name\\\"],\\n          resultsPerPage: 5,\\n          uniqueIdentifier: 'id',\\n          useGriddleStyles: false,\\n          noDataMessage: _lang.CurrentLanguage.grid.empty,\\n          onRowClick: this.selectTask })\\n      );\\n    }\\n  }]);\\n\\n  return TaskList;\\n}(_react2.default.Component);\\n\\n;\\n\\nTaskList.contextTypes = {\\n  router: _react2.default.PropTypes.object\\n};\\n\\nexports.default = TaskList;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/timer/TaskList.jsx\\n ** module id = 35\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/timer/TaskList.jsx?\");\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"griddle-react\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"griddle-react\\\"\\n ** module id = 36\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22griddle-react%22?\");\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"/* WEBPACK VAR INJECTION */(function($) {'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _Task = __webpack_require__(38);\\n\\nvar _Task2 = _interopRequireDefault(_Task);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar CreateTask = function (_React$Component) {\\n  _inherits(CreateTask, _React$Component);\\n\\n  function CreateTask(props, context) {\\n    _classCallCheck(this, CreateTask);\\n\\n    var _this = _possibleConstructorReturn(this, (CreateTask.__proto__ || Object.getPrototypeOf(CreateTask)).call(this, props));\\n\\n    _this.state = {\\n      task: {}\\n    };\\n\\n    _this.saveTask = _this.saveTask.bind(_this);\\n    _this.show = _this.show.bind(_this);\\n    _this.callbacks = {\\n      change: {\\n        taskName: function taskName(e) {\\n          _this.eventChange(e, function (v) {\\n            _this.state.task.name = v;\\n          });\\n        }\\n      }\\n    };\\n    return _this;\\n  }\\n\\n  _createClass(CreateTask, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.prepareComponentState(this.props);\\n      this.prepareForm();\\n    }\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {\\n      this.prepareComponentState(nextProps);\\n    }\\n  }, {\\n    key: 'prepareComponentState',\\n    value: function prepareComponentState(props) {\\n      this.setState({\\n        task: props.task || {}\\n      });\\n    }\\n  }, {\\n    key: 'bindState',\\n    value: function bindState(task) {\\n      this.state.task = task;\\n      this.setState(this.state);\\n    }\\n  }, {\\n    key: 'prepareForm',\\n    value: function prepareForm() {\\n      $(this.refs.form).form({\\n        fields: {\\n          taskName: 'empty'\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'show',\\n    value: function show() {\\n      $(this.refs.modal).modal({\\n        detachable: false\\n      }).modal('show');\\n    }\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      $(this.refs.modal).modal('hide');\\n    }\\n  }, {\\n    key: 'saveTask',\\n    value: function saveTask(e) {\\n      var _this2 = this;\\n\\n      _StoreContext2.default.stores.task.create(new _Task2.default(this.state.task)).then(function (task) {\\n        _this2.hide();\\n        _this2.redirect(task);\\n      });\\n    }\\n  }, {\\n    key: 'redirect',\\n    value: function redirect(task) {\\n      this.context.router.push({\\n        pathname: '/task',\\n        state: {\\n          task: task\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'getStoreState',\\n    value: function getStoreState() {\\n      return {\\n        task: this.state.task || {}\\n      };\\n    }\\n  }, {\\n    key: 'onStoreChange',\\n    value: function onStoreChange() {\\n      var newState = this.getStoreState();\\n      this.setState(newState);\\n    }\\n  }, {\\n    key: 'eventChange',\\n    value: function eventChange(e, callback) {\\n      callback(e.target.value);\\n      this.onStoreChange();\\n      return true;\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        { ref: 'modal', className: 'ui modal' },\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'header' },\\n          _lang.CurrentLanguage.timer.title\\n        ),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'content' },\\n          _react2.default.createElement(\\n            'form',\\n            { className: 'ui form', ref: 'form' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'field' },\\n              _react2.default.createElement(\\n                'label',\\n                null,\\n                _lang.CurrentLanguage.timer.form.taskName\\n              ),\\n              _react2.default.createElement('input', { type: 'text', placeholder: '', value: this.state.task.name, onChange: this.callbacks.change.taskName })\\n            )\\n          )\\n        ),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'actions' },\\n          _react2.default.createElement(\\n            'button',\\n            { type: 'submit', className: 'ui button green', onClick: this.saveTask },\\n            _lang.CurrentLanguage.buttons.save\\n          ),\\n          _react2.default.createElement(\\n            'button',\\n            { className: 'ui cancel button red' },\\n            _lang.CurrentLanguage.buttons.cancel\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return CreateTask;\\n}(_react2.default.Component);\\n\\n;\\n\\nCreateTask.contextTypes = {\\n  router: _react2.default.PropTypes.object\\n};\\n\\nexports.default = CreateTask;\\nmodule.exports = exports['default'];\\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/timer/CreateTask.jsx\\n ** module id = 37\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/timer/CreateTask.jsx?\");\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar extend = __webpack_require__(18)._extend;\\n\\nvar TaskModel = function TaskModel(args) {\\n  _classCallCheck(this, TaskModel);\\n\\n  args = args || {};\\n\\n  this.id = undefined;\\n  this.name = '';\\n  this.createAt = new Date();\\n  this.modified = null;\\n  this.started = false;\\n  this.completed = false;\\n\\n  extend(this, args);\\n};\\n\\nexports.default = TaskModel;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/models/Task.es6.js\\n ** module id = 38\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/models/Task.es6.js?\");\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _TaskSite = __webpack_require__(40);\\n\\nvar _TaskSite2 = _interopRequireDefault(_TaskSite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskApp = function (_React$Component) {\\n  _inherits(TaskApp, _React$Component);\\n\\n  function TaskApp(props, context) {\\n    _classCallCheck(this, TaskApp);\\n\\n    return _possibleConstructorReturn(this, (TaskApp.__proto__ || Object.getPrototypeOf(TaskApp)).call(this, props));\\n  }\\n\\n  _createClass(TaskApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_TaskSite2.default, { location: this.props.location });\\n    }\\n  }]);\\n\\n  return TaskApp;\\n}(_react2.default.Component);\\n\\nTaskApp.defaultProps = {\\n  displayName: 'TaskSite'\\n};\\nexports.default = TaskApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/TaskApp.jsx\\n ** module id = 39\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/TaskApp.jsx?\");\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _Task = __webpack_require__(38);\\n\\nvar _Task2 = _interopRequireDefault(_Task);\\n\\nvar _TaskLog = __webpack_require__(41);\\n\\nvar _TaskLog2 = _interopRequireDefault(_TaskLog);\\n\\nvar _TaskList = __webpack_require__(35);\\n\\nvar _TaskList2 = _interopRequireDefault(_TaskList);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nvar _Timer = __webpack_require__(42);\\n\\nvar _Toasty = __webpack_require__(29);\\n\\nvar _Window = __webpack_require__(43);\\n\\nvar _Notify = __webpack_require__(44);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskSite = function (_BaseSite) {\\n  _inherits(TaskSite, _BaseSite);\\n\\n  function TaskSite(props, context) {\\n    _classCallCheck(this, TaskSite);\\n\\n    var _this = _possibleConstructorReturn(this, (TaskSite.__proto__ || Object.getPrototypeOf(TaskSite)).call(this, props));\\n\\n    var timer = new _Timer.Timer(_this.setting.interval * 60, _Timer.TIMER_SETTINGS.interval);\\n\\n    _this.context = context;\\n    _this.state = {\\n      timer: timer,\\n      task: _this.props.location.state.task,\\n      history: undefined\\n    };\\n\\n    _this.state.maxCounter = timer.maxCounter;\\n\\n    _this.startTimer = _this.startTimer.bind(_this);\\n    _this.stopTimer = _this.stopTimer.bind(_this);\\n    _this.pauseTimer = _this.pauseTimer.bind(_this);\\n    _this.setTaskStatusStyle = _this.setTaskStatusStyle.bind(_this);\\n    _this.incrementMaxCounter = _this.incrementMaxCounter.bind(_this);\\n    _this.decrementMaxCounter = _this.decrementMaxCounter.bind(_this);\\n    _this.showCloseTaskModal = _this.showCloseTaskModal.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(TaskSite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('task');\\n      this.loadCurrentTimer();\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(TaskSite.prototype.__proto__ || Object.getPrototypeOf(TaskSite.prototype), 'componentDidMount', this).call(this);\\n      this.setTaskStatusStyle();\\n    }\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {}\\n  }, {\\n    key: 'loadCurrentTimer',\\n    value: function loadCurrentTimer() {\\n      var timer = this.state.timer.getCurrentTimer();\\n      var history = this.state.timer.getCurrentTimerHistory();\\n\\n      if (history) {\\n        this.state.history = history;\\n      }\\n\\n      if (timer) {\\n        this.state.timer = timer;\\n\\n        if (this.state.timer.status === _Timer.TIMERSTATUS.STARTED) {\\n          var resultContinueStartedTask = confirm(_lang.CurrentLanguage.alert.continueTask.title);\\n\\n          if (resultContinueStartedTask === true) {\\n            this.startNewTimer(this.state.timer.counter);\\n          } else {\\n            this.state.history = undefined;\\n            this.state.timer = new _Timer.Timer(this.setting.interval * 60, _Timer.TIMER_SETTINGS.interval);\\n            this.state.timer.setCurrentTimer();\\n            this.state.timer.setCurrentTimerHistory(this.state.history);\\n          }\\n        }\\n      }\\n    }\\n  }, {\\n    key: 'setTaskStatusStyle',\\n    value: function setTaskStatusStyle() {\\n      var styles = this.getTimerStyles();\\n\\n      (0, _jquery2.default)('.main-container').removeClass('waiting-status').removeClass('play-status').removeClass('stop-status').addClass(styles.containerStatus);\\n    }\\n  }, {\\n    key: 'getTimerStyles',\\n    value: function getTimerStyles() {\\n      var styles = {\\n        play: 'circular ui icon button play massive inverted gray',\\n        stop: 'circular ui icon button stop massive inverted gray',\\n        pause: 'circular ui icon button pause massive inverted gray',\\n        progress: 'ui progress',\\n        containerStatus: ''\\n      };\\n\\n      switch (this.state.timer.status) {\\n        case _Timer.TIMERSTATUS.STOPPED:\\n          styles.pause += ' disabled';\\n          break;\\n        case _Timer.TIMERSTATUS.PAUSED:\\n          styles.pause += ' disabled';\\n          break;\\n        case _Timer.TIMERSTATUS.STARTED:\\n          styles.play += ' disabled';\\n          break;\\n      }\\n\\n      switch (this.state.timer.stage) {\\n        case _Timer.TIMERSTAGE.WAITING:\\n          styles.containerStatus = \\\"waiting-status\\\";\\n          styles.progress += ' pink';\\n          break;\\n        case _Timer.TIMERSTAGE.STOPPED:\\n          styles.containerStatus = \\\"stop-status\\\";\\n          styles.progress += ' orange';\\n          break;\\n        default:\\n          styles.containerStatus = \\\"play-status\\\";\\n          styles.progress += ' blue';\\n          break;\\n      }\\n\\n      return styles;\\n    }\\n  }, {\\n    key: 'startTimer',\\n    value: function startTimer(counter) {\\n      if (this.state.timer.status !== _Timer.TIMERSTATUS.STARTED) {\\n        switch (this.state.timer.stage) {\\n          case _Timer.TIMERSTAGE.WAITING:\\n            this.startWait(counter);\\n            break;\\n          default:\\n            this.startNewTimer(counter);\\n            break;\\n        }\\n      }\\n    }\\n  }, {\\n    key: 'startNewTimer',\\n    value: function startNewTimer(counter) {\\n      var _this2 = this;\\n\\n      var isPaused = this.state.timer.status === _Timer.TIMERSTATUS.PAUSED;\\n      var isRecoverStarted = this.state.timer.status === _Timer.TIMERSTATUS.STARTED && this.state.timer.stage === _Timer.TIMERSTAGE.STARTED;\\n      var timerCounter;\\n\\n      if (!isPaused && !isRecoverStarted) {\\n        timerCounter = this.setting.interval * 60;\\n        this.state.timer.initialize(timerCounter);\\n        this.prepareTaskLog();\\n      } else {\\n        timerCounter = this.state.timer.counter;\\n      }\\n\\n      this.state.timer.start({\\n        counter: timerCounter,\\n        done: function done() {\\n          _this2.state.timer.removeCurrentTimer();\\n          _this2.state.timer.removeCurrentTimerHistory(_this2.state.history);\\n          _this2.state.timer.incrementCycleCounter();\\n          _this2.startWait();\\n          _this2.updateState({ timer: _this2.state.timer });\\n          _this2.saveTaskLog();\\n          _this2.state.history = undefined;\\n        },\\n        elapsed: function elapsed(m) {\\n          _this2.updateState({ timer: _this2.state.timer });\\n          _this2.state.timer.setCurrentTimer();\\n          _this2.prepareTaskLog();\\n        }\\n      });\\n\\n      this.updateState({ timer: this.state.timer });\\n\\n      if (!isPaused) {\\n        _Window.WindowHelper.minimize(2);\\n        _Toasty.Toasty.load('start');\\n        _Notify.NotifyHelper.notifyStarted(this.state.timer.toMinutes());\\n      }\\n    }\\n  }, {\\n    key: 'startWait',\\n    value: function startWait() {\\n      var _this3 = this;\\n\\n      var isPaused = this.state.timer.status === _Timer.TIMERSTATUS.PAUSED;\\n\\n      var additionaWaitTime = 1;\\n      var cycleCounter = this.state.timer.getCycleCounter();\\n\\n      if (cycleCounter > 0 && cycleCounter % 3 === 0) {\\n        additionaWaitTime = 3;\\n        this.state.timer.setCycleCounter(0);\\n      }\\n\\n      this.state.timer.wait({\\n        counter: this.setting.wait * 60 * additionaWaitTime,\\n        done: function done() {\\n          _this3.state.timer.counter = _this3.setting.interval * 60;\\n          _this3.state.timer.maxCounter = _this3.setting.interval * 60;\\n          _this3.state.timer.counterValue = 0;\\n\\n          _this3.updateState({ timer: _this3.state.timer });\\n        },\\n        elapsed: function elapsed(m) {\\n          _this3.updateState({ timer: _this3.state.timer });\\n        }\\n      });\\n\\n      this.updateState({ timer: this.state.timer });\\n\\n      if (!isPaused) {\\n        _Window.WindowHelper.restore();\\n        _Notify.NotifyHelper.notifyTimeOver(this.state.timer.toMinutes());\\n        _Toasty.Toasty.load('wait');\\n      }\\n    }\\n  }, {\\n    key: 'stopTimer',\\n    value: function stopTimer() {\\n      if (this.state.timer.status === _Timer.TIMERSTATUS.STARTED) {\\n        this.saveTaskLog();\\n        this.state.timer.stop();\\n        this.state.history = undefined;\\n        this.updateState({ timer: this.state.timer });\\n        _Notify.NotifyHelper.notifyStopped();\\n        this.showCloseTaskModal();\\n      } else {\\n        this.context.router.push('/');\\n      }\\n    }\\n  }, {\\n    key: 'pauseTimer',\\n    value: function pauseTimer() {\\n      if (this.state.timer.status === _Timer.TIMERSTATUS.STARTED) {\\n        this.state.timer.pause();\\n        this.saveTaskLog();\\n        this.updateState({ timer: this.state.timer });\\n      }\\n    }\\n  }, {\\n    key: 'updateState',\\n    value: function updateState(arg) {\\n      arg = arg || {};\\n\\n      this.state.timer = arg.timer || this.state.timer;\\n      this.state.task = arg.task || this.state.task;\\n\\n      this.state.timer.update();\\n\\n      this.setState({\\n        timer: this.state.timer,\\n        task: this.state.task\\n      });\\n\\n      this.updateProgress();\\n    }\\n  }, {\\n    key: 'updateProgress',\\n    value: function updateProgress() {\\n      (0, _jquery2.default)(this.refs.progress).progress({\\n        total: this.state.timer.maxCounter,\\n        value: this.state.timer.counterValue\\n      });\\n    }\\n  }, {\\n    key: 'incrementMaxCounter',\\n    value: function incrementMaxCounter() {\\n      this.state.timer.maxCounter += 60;\\n      this.state.timer.counter = this.state.timer.maxCounter;\\n      this.updateState();\\n    }\\n  }, {\\n    key: 'decrementMaxCounter',\\n    value: function decrementMaxCounter() {\\n      if (this.state.timer.maxCounter - 60 > 0) {\\n        this.state.timer.maxCounter -= 60;\\n        this.state.timer.counter = this.state.timer.maxCounter;\\n        this.updateState();\\n      }\\n    }\\n  }, {\\n    key: 'prepareTaskLog',\\n    value: function prepareTaskLog() {\\n      if (!this.state.history) {\\n        this.state.history = new _TaskLog2.default({\\n          task: this.state.task,\\n          timer: this.state.timer.counterValue\\n        });\\n      } else {\\n        this.state.history.timer = this.state.timer.counterValue;\\n        this.state.history.modified = new Date();\\n      }\\n    }\\n  }, {\\n    key: 'saveTaskLog',\\n    value: function saveTaskLog() {\\n      var _this4 = this;\\n\\n      if (this.state.history.id) {\\n        _StoreContext2.default.stores.taskLog.update({ id: this.state.history.id }, this.state.history).then(function () {\\n          _this4.state.timer.setCurrentTimerHistory(_this4.state.history);\\n        });\\n      } else {\\n        _StoreContext2.default.stores.taskLog.create(this.state.history).then(function (doc) {\\n          _this4.state.history = doc;\\n          _this4.state.timer.setCurrentTimerHistory(_this4.state.history);\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'closeTask',\\n    value: function closeTask() {\\n      var _this5 = this;\\n\\n      this.state.task.modified = new Date();\\n      this.state.task.completed = true;\\n\\n      _StoreContext2.default.stores.task.update(this.state.task).then(function () {\\n        _this5.context.router.push('/');\\n      });\\n    }\\n  }, {\\n    key: 'showCloseTaskModal',\\n    value: function showCloseTaskModal() {\\n      var closeTaskResult = confirm(_lang.CurrentLanguage.closeTask.title);\\n\\n      if (closeTaskResult === true) {\\n        this.closeTask();\\n      }\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      this.setTaskStatusStyle();\\n\\n      var timerStyles = this.getTimerStyles();\\n\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'ui centered aligned grid' },\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fourteen wide' },\\n            _react2.default.createElement(\\n              'h4',\\n              { className: 'ui horizontal inverted divider' },\\n              this.state.task.name\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide counter' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'ui inverted huge statistic' },\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'value' },\\n                this.state.timer.remaing\\n              ),\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'label' },\\n                'Tempo'\\n              )\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column row sixteen counter center' },\\n            _react2.default.createElement(\\n              'button',\\n              { className: 'mini ui circular icon button white', onClick: this.decrementMaxCounter },\\n              _react2.default.createElement('i', { className: 'minus icon' })\\n            ),\\n            _react2.default.createElement(\\n              'button',\\n              { className: 'mini ui circular icon button white', onClick: this.incrementMaxCounter },\\n              _react2.default.createElement('i', { className: 'plus icon' })\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide' },\\n            _react2.default.createElement(\\n              'button',\\n              { className: timerStyles.play, onClick: this.startTimer },\\n              _react2.default.createElement('i', { className: 'play icon' })\\n            ),\\n            ' ',\\n            _react2.default.createElement(\\n              'button',\\n              { className: timerStyles.stop, onClick: this.stopTimer },\\n              _react2.default.createElement('i', { className: 'stop icon' })\\n            ),\\n            ' ',\\n            _react2.default.createElement(\\n              'button',\\n              { className: timerStyles.pause, onClick: this.pauseTimer },\\n              _react2.default.createElement('i', { className: 'pause icon' })\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fourteen wide task-progress' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: timerStyles.progress, ref: 'progress' },\\n              _react2.default.createElement('div', { className: 'bar' })\\n            )\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return TaskSite;\\n}(_BaseSite3.default);\\n\\nTaskSite.defaultProps = {\\n  displayName: 'TaskSite'\\n};\\n;\\n\\nTaskSite.contextTypes = {\\n  router: function router() {\\n    return _react2.default.PropTypes.func.isRequired;\\n  }\\n};\\n\\nexports.default = TaskSite;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/TaskSite.jsx\\n ** module id = 40\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/TaskSite.jsx?\");\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar extend = __webpack_require__(18)._extend;\\n\\nvar TaskLogModel = function TaskLogModel(args) {\\n  _classCallCheck(this, TaskLogModel);\\n\\n  args = args || {};\\n\\n  this.id = undefined;\\n  this.task = undefined;\\n  this.timer = 0;\\n  this.createAt = new Date();\\n  this.modified = null;\\n\\n  extend(this, args);\\n};\\n\\nexports.default = TaskLogModel;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/models/TaskLog.es6.js\\n ** module id = 41\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/models/TaskLog.es6.js?\");\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Timer = exports.TIMERSTATUS = exports.TIMERSTAGE = exports.TIMER_SETTINGS = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _Session = __webpack_require__(16);\\n\\nvar _Task = __webpack_require__(38);\\n\\nvar _Task2 = _interopRequireDefault(_Task);\\n\\nvar _TaskLog = __webpack_require__(41);\\n\\nvar _TaskLog2 = _interopRequireDefault(_TaskLog);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar TIMER_SETTINGS = exports.TIMER_SETTINGS = {\\n  interval: 1000, // 1000 mili\\n  max: 10, // 4 sec\\n  wait: 20 // 2 sec\\n};\\n\\nvar TIMERSTAGE = exports.TIMERSTAGE = {\\n  STARTED: 1,\\n  WAITING: 2,\\n  STOPPED: 3\\n};\\n\\nvar TIMERSTATUS = exports.TIMERSTATUS = {\\n  STARTED: 1,\\n  STOPPED: 3,\\n  PAUSED: 2\\n};\\n\\nvar TIMER_SESSION_KEY = 'tuningtimer.currentTimer';\\nvar TIMER_HISTORY_SESSION_KEY = 'tuningtimer.currentTimerHistory';\\nvar TIMER_CYCLECOUNTER = 'tuningtimer.cycleCounter';\\n\\nvar Timer = function () {\\n  function Timer(counter) {\\n    _classCallCheck(this, Timer);\\n\\n    this.initialize(counter);\\n  }\\n\\n  _createClass(Timer, [{\\n    key: 'initialize',\\n    value: function initialize(counter) {\\n      this.maxCounter = counter;\\n      this.counter = counter;\\n      this.counterValue = 0;\\n      this.status = TIMERSTATUS.STOPPED;\\n      this.stage = TIMERSTAGE.STOPPED;\\n      this.process = null;\\n      this.isWaiting = false;\\n      this.update();\\n    }\\n  }, {\\n    key: 'update',\\n    value: function update() {\\n      this.remaing = this.formatTimer();\\n    }\\n  }, {\\n    key: 'elapsed',\\n    value: function elapsed(done, _elapsed, stage) {\\n      done = done || function () {};\\n\\n      if (_elapsed) {\\n        _elapsed(this);\\n      }\\n\\n      if (this.counter == 0) {\\n        this.stop();\\n        done();\\n        done = function done() {};\\n        return;\\n      }\\n\\n      this.stage = stage;\\n      this.counter--;\\n      this.counterValue = this.maxCounter - this.counter;\\n      this.update();\\n    }\\n  }, {\\n    key: 'start',\\n    value: function start(args) {\\n      this.isWaiting = false;\\n\\n      args = args || {};\\n      args.done = args.done || function () {};\\n      args.elapsed = args.elapsed || function () {};\\n      args.counter = args.counter || TIMER_SETTINGS.max;\\n\\n      this.counter = args.counter;\\n      this.maxCounter = this.counter;\\n      this.counterValue = 0;\\n      this.update();\\n\\n      this.process = setInterval(this.elapsed.bind(this, args.done, args.elapsed, TIMERSTAGE.STARTED), TIMER_SETTINGS.interval);\\n      this.stage = TIMERSTAGE.STARTED;\\n      this.status = TIMERSTATUS.STARTED;\\n\\n      this.listenPlayAudio();\\n    }\\n  }, {\\n    key: 'stop',\\n    value: function stop() {\\n      this.status = TIMERSTATUS.STOPPED;\\n      this.stage = TIMERSTAGE.STOPPED;\\n      clearInterval(this.process);\\n      this.process = null;\\n      this.counter = this.maxCounter;\\n      this.counterValue = 0;\\n      this.update();\\n      this.removeCurrentTimer();\\n    }\\n  }, {\\n    key: 'pause',\\n    value: function pause() {\\n      this.status = TIMERSTATUS.PAUSED;\\n      clearInterval(this.process);\\n      this.process = null;\\n    }\\n  }, {\\n    key: 'wait',\\n    value: function wait(args) {\\n      args = args || {};\\n      args.done = args.done || function () {};\\n      args.elapsed = args.elapsed || function () {};\\n      args.counter = args.counter || TIMER_SETTINGS.wait;\\n\\n      this.counter = args.counter;\\n      this.maxCounter = this.counter;\\n      this.counterValue = 0;\\n      this.update();\\n\\n      this.process = setInterval(this.elapsed.bind(this, args.done, args.elapsed, TIMERSTAGE.WAITING), TIMER_SETTINGS.interval);\\n      this.stage = TIMERSTAGE.WAITING;\\n      this.status = TIMERSTATUS.STARTED;\\n\\n      this.listenWaitAudio();\\n    }\\n  }, {\\n    key: 'setCurrentTimer',\\n    value: function setCurrentTimer() {\\n      _Session.SessionLocalHelper.create(TIMER_SESSION_KEY, this);\\n    }\\n  }, {\\n    key: 'removeCurrentTimer',\\n    value: function removeCurrentTimer() {\\n      _Session.SessionLocalHelper.remove(TIMER_SESSION_KEY);\\n    }\\n  }, {\\n    key: 'getCurrentTimer',\\n    value: function getCurrentTimer() {\\n      var timer;\\n      var timerSession = _Session.SessionLocalHelper.get(TIMER_SESSION_KEY);\\n\\n      if (timerSession) {\\n        timer = new Timer(timerSession.counter);\\n        timer.stage = timerSession.stage;\\n        timer.status = timerSession.status;\\n      }\\n\\n      return timer;\\n    }\\n  }, {\\n    key: 'setCurrentTimerHistory',\\n    value: function setCurrentTimerHistory(model) {\\n      _Session.SessionLocalHelper.create(TIMER_HISTORY_SESSION_KEY, model);\\n    }\\n  }, {\\n    key: 'removeCurrentTimerHistory',\\n    value: function removeCurrentTimerHistory() {\\n      _Session.SessionLocalHelper.remove(TIMER_HISTORY_SESSION_KEY);\\n    }\\n  }, {\\n    key: 'getCurrentTimerHistory',\\n    value: function getCurrentTimerHistory() {\\n      var timerHistory = _Session.SessionLocalHelper.get(TIMER_HISTORY_SESSION_KEY);\\n\\n      if (!timerHistory) {\\n        timerHistory = new _TaskLog2.default();\\n      }\\n\\n      return timerHistory;\\n    }\\n  }, {\\n    key: 'formatTimer',\\n    value: function formatTimer() {\\n      var pad = \\\"00\\\";\\n      var minutes = String(Math.trunc(this.counter / 60));\\n      var seconds = String(Math.round(this.counter % 60, 2));\\n\\n      minutes = pad.substring(0, pad.length - minutes.length) + minutes;\\n      seconds = pad.substring(0, pad.length - seconds.length) + seconds;\\n\\n      return minutes.concat(\\\":\\\", seconds);\\n    }\\n  }, {\\n    key: 'toMinutes',\\n    value: function toMinutes(counter) {\\n      counter = counter || this.maxCounter || this.counter;\\n\\n      var minutes = String(Math.round(counter / 60, 2));\\n      return minutes;\\n    }\\n  }, {\\n    key: 'listenPlayAudio',\\n    value: function listenPlayAudio() {\\n      this.listenAudio('play', 0.2);\\n    }\\n  }, {\\n    key: 'listenWaitAudio',\\n    value: function listenWaitAudio() {\\n      this.listenAudio('wait', 1);\\n    }\\n  }, {\\n    key: 'listenAudio',\\n    value: function listenAudio(audio, vol) {\\n      var audio = new Audio('audio/' + audio + '.mp3');\\n      audio.volume = vol || 0.2;\\n      audio.currentTime = 0;\\n      audio.play();\\n    }\\n  }, {\\n    key: 'getCycleCounter',\\n    value: function getCycleCounter() {\\n      return parseInt(_Session.SessionHelper.get(TIMER_CYCLECOUNTER)) || 0;\\n    }\\n  }, {\\n    key: 'incrementCycleCounter',\\n    value: function incrementCycleCounter() {\\n      var counter = this.getCycleCounter();\\n\\n      counter = counter + 1;\\n\\n      _Session.SessionHelper.create(TIMER_CYCLECOUNTER, String(counter));\\n    }\\n  }, {\\n    key: 'setCycleCounter',\\n    value: function setCycleCounter(counter) {\\n      if (typeof counter === \\\"number\\\") {\\n        console.log(String(counter));\\n\\n        _Session.SessionHelper.create(TIMER_CYCLECOUNTER, String(counter));\\n      }\\n    }\\n  }]);\\n\\n  return Timer;\\n}();\\n\\nexports.Timer = Timer;\\n;\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/helpers/Timer.es6.js\\n ** module id = 42\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/helpers/Timer.es6.js?\");\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.WindowHelper = exports._WindowHelper = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _electron = __webpack_require__(28);\\n\\nvar _electron2 = _interopRequireDefault(_electron);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar window = _electron2.default.remote.getCurrentWindow();\\n\\nvar _WindowHelper = exports._WindowHelper = function () {\\n  function _WindowHelper() {\\n    _classCallCheck(this, _WindowHelper);\\n  }\\n\\n  _createClass(_WindowHelper, [{\\n    key: 'restore',\\n    value: function restore(timeout) {\\n      timeout = timeout || 0;\\n      var timeoutMs = timeout * 1000;\\n\\n      setTimeout(function () {\\n        window.restore();\\n      }, timeoutMs);\\n    }\\n  }, {\\n    key: 'minimize',\\n    value: function minimize(timeout) {\\n      timeout = timeout || 0;\\n      var timeoutMs = timeout * 1000;\\n\\n      setTimeout(function () {\\n        window.minimize();\\n      }, timeoutMs);\\n    }\\n  }]);\\n\\n  return _WindowHelper;\\n}();\\n\\nvar WindowHelper = exports.WindowHelper = new _WindowHelper();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/helpers/Window.es6.js\\n ** module id = 43\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/helpers/Window.es6.js?\");\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.NotifyHelper = exports._NotifyHelper = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _lang = __webpack_require__(11);\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar _NotifyHelper = exports._NotifyHelper = function () {\\n  function _NotifyHelper() {\\n    _classCallCheck(this, _NotifyHelper);\\n  }\\n\\n  _createClass(_NotifyHelper, [{\\n    key: 'notifyTimeOver',\\n    value: function notifyTimeOver(min) {\\n      this.notify(_lang.CurrentLanguage.alert.timeOver.title, _lang.CurrentLanguage.alert.timeOver.message.replace('{{min}}', min));\\n    }\\n  }, {\\n    key: 'notifyStopped',\\n    value: function notifyStopped() {\\n      this.notify(_lang.CurrentLanguage.alert.stopped.title, _lang.CurrentLanguage.alert.stopped.message);\\n    }\\n  }, {\\n    key: 'notifyStarted',\\n    value: function notifyStarted(min) {\\n      this.notify(_lang.CurrentLanguage.alert.started.title, _lang.CurrentLanguage.alert.started.message.replace('{{min}}', min));\\n    }\\n  }, {\\n    key: 'notify',\\n    value: function notify(title, body) {\\n      new Notification(title, {\\n        body: body\\n      });\\n    }\\n  }]);\\n\\n  return _NotifyHelper;\\n}();\\n\\nvar NotifyHelper = exports.NotifyHelper = new _NotifyHelper();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/helpers/Notify.es6.js\\n ** module id = 44\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/helpers/Notify.es6.js?\");\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _ToastySite = __webpack_require__(46);\\n\\nvar _ToastySite2 = _interopRequireDefault(_ToastySite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar ToastyApp = function (_React$Component) {\\n  _inherits(ToastyApp, _React$Component);\\n\\n  function ToastyApp(props, context) {\\n    _classCallCheck(this, ToastyApp);\\n\\n    return _possibleConstructorReturn(this, (ToastyApp.__proto__ || Object.getPrototypeOf(ToastyApp)).call(this, props));\\n  }\\n\\n  _createClass(ToastyApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_ToastySite2.default, { location: this.props.location });\\n    }\\n  }]);\\n\\n  return ToastyApp;\\n}(_react2.default.Component);\\n\\nToastyApp.defaultProps = {\\n  displayName: 'ToastySite'\\n};\\nexports.default = ToastyApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/ToastyApp.jsx\\n ** module id = 45\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/ToastyApp.jsx?\");\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar ToastySite = function (_BaseSite) {\\n  _inherits(ToastySite, _BaseSite);\\n\\n  function ToastySite(props, context) {\\n    _classCallCheck(this, ToastySite);\\n\\n    var _this = _possibleConstructorReturn(this, (ToastySite.__proto__ || Object.getPrototypeOf(ToastySite)).call(this, props));\\n\\n    _this.context = context;\\n    _this.state = {\\n      type: _this.props.location.query.imageType || 'start'\\n    };\\n    return _this;\\n  }\\n\\n  _createClass(ToastySite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      var cssClass = 'toasty ' + this.state.type;\\n      this.bindBodyClass(cssClass);\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {}\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {}\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var template;\\n\\n      if (this.state.type === \\\"start\\\") {\\n        template = _react2.default.createElement('img', { className: 'ui centered fluid image animated slideInRight', src: 'images/start.png' });\\n      } else {\\n        template = _react2.default.createElement('img', { className: 'ui centered fluid image animated bounce', src: 'images/wait.png' });\\n      }\\n\\n      return _react2.default.createElement(\\n        'div',\\n        { className: 'ui basic segment' },\\n        template\\n      );\\n    }\\n  }]);\\n\\n  return ToastySite;\\n}(_BaseSite3.default);\\n\\nToastySite.defaultProps = {\\n  displayName: 'ToastySite'\\n};\\n;\\n\\nToastySite.contextTypes = {\\n  router: function router() {\\n    return _react2.default.PropTypes.func.isRequired;\\n  }\\n};\\n\\nexports.default = ToastySite;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/ToastySite.jsx\\n ** module id = 46\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/ToastySite.jsx?\");\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _ExportSite = __webpack_require__(48);\\n\\nvar _ExportSite2 = _interopRequireDefault(_ExportSite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar ExportApp = function (_React$Component) {\\n  _inherits(ExportApp, _React$Component);\\n\\n  function ExportApp(props, context) {\\n    _classCallCheck(this, ExportApp);\\n\\n    return _possibleConstructorReturn(this, (ExportApp.__proto__ || Object.getPrototypeOf(ExportApp)).call(this, props));\\n  }\\n\\n  _createClass(ExportApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_ExportSite2.default, null);\\n    }\\n  }]);\\n\\n  return ExportApp;\\n}(_react2.default.Component);\\n\\nExportApp.defaultProps = {\\n  displayName: 'ExportApp'\\n};\\nexports.default = ExportApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/ExportApp.jsx\\n ** module id = 47\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/ExportApp.jsx?\");\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nvar _fs = __webpack_require__(49);\\n\\nvar _fs2 = _interopRequireDefault(_fs);\\n\\nvar _js2xmlparser = __webpack_require__(50);\\n\\nvar _js2xmlparser2 = _interopRequireDefault(_js2xmlparser);\\n\\nvar _path = __webpack_require__(30);\\n\\nvar _path2 = _interopRequireDefault(_path);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar os = __webpack_require__(51);\\n\\nvar dialog = __webpack_require__(28).remote.dialog;\\n\\nvar ExportSite = function (_BaseSite) {\\n  _inherits(ExportSite, _BaseSite);\\n\\n  function ExportSite(props, context) {\\n    _classCallCheck(this, ExportSite);\\n\\n    var _this = _possibleConstructorReturn(this, (ExportSite.__proto__ || Object.getPrototypeOf(ExportSite)).call(this, props));\\n\\n    _this.context = context;\\n    _this.state = {};\\n    _this.state = _this.getStoreState();\\n\\n    _this.exportToFile = _this.exportToFile.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(ExportSite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('export');\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(ExportSite.prototype.__proto__ || Object.getPrototypeOf(ExportSite.prototype), 'componentDidMount', this).call(this);\\n\\n      (0, _jquery2.default)('.ui.form').form({\\n        fields: {\\n          startFilter: 'empty',\\n          endFilter: 'empty'\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'getStoreState',\\n    value: function getStoreState() {\\n      return {\\n        startFilter: this.state.startFilter || new Date(),\\n        endFilter: this.state.endFilter || new Date(),\\n        fileType: this.state.fileType || 'xml'\\n      };\\n    }\\n  }, {\\n    key: 'onStoreChange',\\n    value: function onStoreChange() {\\n      var newState = this.getStoreState();\\n      this.setState(newState);\\n    }\\n  }, {\\n    key: 'eventChangeState',\\n    value: function eventChangeState(e, field) {\\n      this.state[field] = e.target.value;\\n      this.onStoreChange();\\n      return true;\\n    }\\n  }, {\\n    key: 'exportToXml',\\n    value: function exportToXml(logsModels, filename) {\\n      var xmlModels = {\\n        tasks: logsModels.map(function (m) {\\n          var model = {\\n            \\\"@\\\": {\\n              id: m.id,\\n              completed: m.completed,\\n              modified: m.modified,\\n              name: m.name,\\n              timer: m.timer\\n            },\\n            logs: m.logs.map(function (lm) {\\n              return {\\n                \\\"@\\\": {\\n                  timer: lm.timer,\\n                  date: lm.date\\n                }\\n              };\\n            })\\n          };\\n\\n          return model;\\n        })\\n      };\\n\\n      var xml = (0, _js2xmlparser2.default)(\\\"tasks\\\", xmlModels);\\n\\n      _fs2.default.writeFileSync(filename, xml, 'utf8');\\n    }\\n  }, {\\n    key: 'exportToJson',\\n    value: function exportToJson(logsModels, filename) {\\n      var model = {\\n        tasks: logsModels.map(function (m) {\\n          return {\\n            id: m.id,\\n            completed: m.completed,\\n            modified: m.modified,\\n            name: m.name,\\n            timer: m.timer,\\n            logs: m.logs.map(function (lm) {\\n              return {\\n                timer: lm.timer,\\n                date: lm.date\\n              };\\n            })\\n          };\\n        })\\n      };\\n\\n      var json = JSON.stringify(model, null, 2);\\n\\n      _fs2.default.writeFileSync(filename, json, 'utf8');\\n    }\\n  }, {\\n    key: 'exportToText',\\n    value: function exportToText(logsModels, filename) {\\n      var textModels = '';\\n\\n      logsModels.forEach(function (m) {\\n        m.logs.forEach(function (l) {\\n          //\\n          // Prepare text content file\\n          //\\n          textModels += [String(m.id), String(m.completed), String(m.modified), m.name, String(m.timer), String(l.timer), String(l.date)].join('|').concat(os.EOL);\\n        });\\n      });\\n\\n      _fs2.default.writeFileSync(filename, textModels, 'utf8');\\n    }\\n  }, {\\n    key: 'exportToFile',\\n    value: function exportToFile() {\\n      var _this2 = this;\\n\\n      this.getModels().then(function (logs) {\\n        dialog.showSaveDialog(null, {\\n          title: 'Exportação', filters: []\\n        }, function (filename) {\\n          if (!filename) {\\n            return;\\n          }\\n\\n          switch (_this2.state.fileType) {\\n            case \\\"txt\\\":\\n              _this2.exportToText(logs, filename);\\n              break;\\n            case \\\"json\\\":\\n              _this2.exportToJson(logs, filename);\\n              break;\\n            default:\\n              _this2.exportToXml(logs, filename);\\n              break;\\n          }\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'getModels',\\n    value: function getModels() {\\n      return _StoreContext2.default.stores.taskLog.filterByDate(new Date(this.state.startFilter), new Date(this.state.endFilter)).then(function (logs) {\\n        var tasks = new Map();\\n\\n        logs.forEach(function (log) {\\n          var task = tasks.get(log.task.id);\\n          var newTaskLog = { timer: log.timer, date: log.createAt };\\n\\n          if (!task) {\\n            task = log.task;\\n            task.logs = [newTaskLog];\\n            task.timer = log.timer;\\n          } else {\\n            task.logs.push(newTaskLog);\\n            task.timer += log.timer;\\n          }\\n\\n          tasks.set(log.task.id, task);\\n        });\\n\\n        var models = [];\\n\\n        tasks.forEach(function (value, key) {\\n          return models.push(value);\\n        });\\n\\n        return models;\\n      });\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _this3 = this;\\n\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(_MenuBar2.default, { ref: 'menuBar', visible: true }),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'ui centered aligned grid' },\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'ui large breadcrumb' },\\n              _react2.default.createElement(\\n                _reactRouter.Link,\\n                { to: '/', className: 'section' },\\n                'Home'\\n              ),\\n              _react2.default.createElement('i', { className: 'right chevron icon divider' }),\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'active section' },\\n                _lang.CurrentLanguage.exportFile.title\\n              )\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide' },\\n            _react2.default.createElement(\\n              'form',\\n              { className: 'ui form' },\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'field' },\\n                _react2.default.createElement(\\n                  'label',\\n                  null,\\n                  'Período'\\n                ),\\n                _react2.default.createElement(\\n                  'div',\\n                  { className: 'two fields' },\\n                  _react2.default.createElement(\\n                    'div',\\n                    { className: 'field' },\\n                    _react2.default.createElement('input', { placeholder: 'Data inicial', type: 'date', ref: 'startFilter', name: 'startFilter', onBlur: function onBlur(e) {\\n                        return _this3.eventChangeState.call(_this3, e, 'startFilter');\\n                      } })\\n                  ),\\n                  _react2.default.createElement(\\n                    'div',\\n                    { className: 'field' },\\n                    _react2.default.createElement('input', { placeholder: 'Data Final', type: 'date', ref: 'endFilter', name: 'endFilter', onBlur: function onBlur(e) {\\n                        return _this3.eventChangeState.call(_this3, e, 'endFilter');\\n                      } })\\n                  )\\n                )\\n              ),\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'grouped fields' },\\n                _react2.default.createElement(\\n                  'label',\\n                  null,\\n                  'Tipo do arquivo?'\\n                ),\\n                _react2.default.createElement(\\n                  'div',\\n                  { className: 'field' },\\n                  _react2.default.createElement(\\n                    'div',\\n                    { className: 'ui radio checkbox' },\\n                    _react2.default.createElement('input', { type: 'radio', name: 'fileType', checked: this.state.fileType == 'xml', value: 'xml', onChange: function onChange(e) {\\n                        return _this3.eventChangeState.call(_this3, e, 'fileType');\\n                      } }),\\n                    _react2.default.createElement(\\n                      'label',\\n                      null,\\n                      'Xml'\\n                    )\\n                  )\\n                ),\\n                _react2.default.createElement(\\n                  'div',\\n                  { className: 'field' },\\n                  _react2.default.createElement(\\n                    'div',\\n                    { className: 'ui radio checkbox' },\\n                    _react2.default.createElement('input', { type: 'radio', name: 'fileType', checked: this.state.fileType == 'json', value: 'json', onChange: function onChange(e) {\\n                        return _this3.eventChangeState.call(_this3, e, 'fileType');\\n                      } }),\\n                    _react2.default.createElement(\\n                      'label',\\n                      null,\\n                      'Json'\\n                    )\\n                  )\\n                ),\\n                _react2.default.createElement(\\n                  'div',\\n                  { className: 'field' },\\n                  _react2.default.createElement(\\n                    'div',\\n                    { className: 'ui radio checkbox' },\\n                    _react2.default.createElement('input', { type: 'radio', name: 'fileType', checked: this.state.fileType == 'txt', value: 'txt', onChange: function onChange(e) {\\n                        return _this3.eventChangeState.call(_this3, e, 'fileType');\\n                      } }),\\n                    _react2.default.createElement(\\n                      'label',\\n                      null,\\n                      'Text'\\n                    )\\n                  )\\n                )\\n              ),\\n              _react2.default.createElement('div', { className: 'ui clearing divider' }),\\n              _react2.default.createElement('br', null),\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'column ten wide' },\\n                _react2.default.createElement(\\n                  'div',\\n                  { className: 'ui grid centered' },\\n                  _react2.default.createElement(\\n                    'button',\\n                    { type: 'submit', className: 'ui circular icon button huge green', onClick: this.exportToFile },\\n                    _react2.default.createElement('i', { className: 'download icon' })\\n                  )\\n                )\\n              )\\n            )\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return ExportSite;\\n}(_BaseSite3.default);\\n\\nExportSite.defaultProps = {\\n  displayName: 'ExportSite'\\n};\\n;\\n\\nExportSite.contextTypes = {\\n  router: function router() {\\n    return _react2.default.PropTypes.func.isRequired;\\n  }\\n};\\n\\nexports.default = ExportSite;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/ExportSite.jsx\\n ** module id = 48\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/ExportSite.jsx?\");\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"fs\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"fs\\\"\\n ** module id = 49\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22fs%22?\");\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"js2xmlparser\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"js2xmlparser\\\"\\n ** module id = 50\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22js2xmlparser%22?\");\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\teval(\"module.exports = require(\\\"os\\\");\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** external \\\"os\\\"\\n ** module id = 51\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///external_%22os%22?\");\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _TaskManagement = __webpack_require__(53);\\n\\nvar _TaskManagement2 = _interopRequireDefault(_TaskManagement);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskManagementApp = function (_React$Component) {\\n  _inherits(TaskManagementApp, _React$Component);\\n\\n  function TaskManagementApp(props, context) {\\n    _classCallCheck(this, TaskManagementApp);\\n\\n    return _possibleConstructorReturn(this, (TaskManagementApp.__proto__ || Object.getPrototypeOf(TaskManagementApp)).call(this, props));\\n  }\\n\\n  _createClass(TaskManagementApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_TaskManagement2.default, { location: this.props.location });\\n    }\\n  }]);\\n\\n  return TaskManagementApp;\\n}(_react2.default.Component);\\n\\nTaskManagementApp.defaultProps = {\\n  displayName: 'TaskManagement'\\n};\\nexports.default = TaskManagementApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/TaskManagementApp.jsx\\n ** module id = 52\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/TaskManagementApp.jsx?\");\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _Task = __webpack_require__(38);\\n\\nvar _Task2 = _interopRequireDefault(_Task);\\n\\nvar _TaskLog = __webpack_require__(41);\\n\\nvar _TaskLog2 = _interopRequireDefault(_TaskLog);\\n\\nvar _TaskList = __webpack_require__(54);\\n\\nvar _TaskList2 = _interopRequireDefault(_TaskList);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskManagement = function (_BaseSite) {\\n  _inherits(TaskManagement, _BaseSite);\\n\\n  function TaskManagement(props, context) {\\n    _classCallCheck(this, TaskManagement);\\n\\n    var _this = _possibleConstructorReturn(this, (TaskManagement.__proto__ || Object.getPrototypeOf(TaskManagement)).call(this, props));\\n\\n    _this.context = context;\\n    _this.state = {};\\n    return _this;\\n  }\\n\\n  _createClass(TaskManagement, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('taskManagement');\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(TaskManagement.prototype.__proto__ || Object.getPrototypeOf(TaskManagement.prototype), 'componentDidMount', this).call(this);\\n    }\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {}\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'ui one column center aligned grid' },\\n          _react2.default.createElement(_MenuBar2.default, { ref: 'menuBar', visible: true }),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'ui large breadcrumb' },\\n              _react2.default.createElement(\\n                _reactRouter.Link,\\n                { to: '/', className: 'section' },\\n                'Home'\\n              ),\\n              _react2.default.createElement('i', { className: 'right chevron icon divider' }),\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'active section' },\\n                _lang.CurrentLanguage.taskManagement.title\\n              )\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column twelve wide' },\\n            _react2.default.createElement(_TaskList2.default, null)\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return TaskManagement;\\n}(_BaseSite3.default);\\n\\nTaskManagement.defaultProps = {\\n  displayName: 'TaskManagement'\\n};\\n;\\n\\nTaskManagement.contextTypes = {\\n  router: function router() {\\n    return _react2.default.PropTypes.func.isRequired;\\n  }\\n};\\n\\nexports.default = TaskManagement;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/TaskManagement.jsx\\n ** module id = 53\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/TaskManagement.jsx?\");\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"/* WEBPACK VAR INJECTION */(function($) {'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _EditTask = __webpack_require__(55);\\n\\nvar _EditTask2 = _interopRequireDefault(_EditTask);\\n\\nvar _griddleReact = __webpack_require__(36);\\n\\nvar _griddleReact2 = _interopRequireDefault(_griddleReact);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar TaskList = function (_React$Component) {\\n  _inherits(TaskList, _React$Component);\\n\\n  function TaskList(props, context) {\\n    _classCallCheck(this, TaskList);\\n\\n    var _this = _possibleConstructorReturn(this, (TaskList.__proto__ || Object.getPrototypeOf(TaskList)).call(this, props));\\n\\n    _this.state = {};\\n    _this.state = _this.getStoreState();\\n    _this.searchTasks = _this.searchTasks.bind(_this);\\n    _this.eventChangeTaskStatus = _this.eventChangeTaskStatus.bind(_this);\\n    _this.eventSearchTasks = _this.eventSearchTasks.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(TaskList, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.prepareComponentState(this.props);\\n      this.bindSearchTasks();\\n\\n      $('.menu .item').tab();\\n    }\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {\\n      this.prepareComponentState(nextProps);\\n    }\\n  }, {\\n    key: 'prepareComponentState',\\n    value: function prepareComponentState(props) {\\n      var state = this.getStoreState();\\n      state.tasks = props.tasks || [];\\n      this.setState(state);\\n    }\\n  }, {\\n    key: 'getStoreState',\\n    value: function getStoreState() {\\n      return {\\n        tasks: this.state.tasks || [],\\n        searchTask: this.state.searchTask || '',\\n        onlyOpenedTask: typeof this.state.onlyOpenedTask === 'boolean' ? this.state.onlyOpenedTask : true\\n      };\\n    }\\n  }, {\\n    key: 'onStoreChange',\\n    value: function onStoreChange() {\\n      var newState = this.getStoreState();\\n      this.setState(newState);\\n    }\\n  }, {\\n    key: 'eventChangeTaskStatus',\\n    value: function eventChangeTaskStatus(e) {\\n      this.state.onlyOpenedTask = e.target.checked;\\n      this.onStoreChange();\\n      this.bindSearchTasks();\\n      return true;\\n    }\\n  }, {\\n    key: 'eventSearchTasks',\\n    value: function eventSearchTasks(e) {\\n      this.state.searchTask = e.target.value;\\n      this.onStoreChange();\\n      this.bindSearchTasks();\\n      return true;\\n    }\\n  }, {\\n    key: 'bindSearchTasks',\\n    value: function bindSearchTasks() {\\n      var _this2 = this;\\n\\n      return this.searchTasks().then(function (source) {\\n        _this2.state.tasks = source;\\n        _this2.onStoreChange();\\n      });\\n    }\\n  }, {\\n    key: 'searchTasks',\\n    value: function searchTasks() {\\n      return _StoreContext2.default.stores.task.findByContent(this.state.searchTask, !this.state.onlyOpenedTask);\\n    }\\n  }, {\\n    key: 'delete',\\n    value: function _delete(task) {\\n      var _this3 = this;\\n\\n      var message = _lang.CurrentLanguage.taskManagement.messages.confirmTaskDelete.replace('{task}', task.name);\\n      var deleteTask = confirm(message);\\n\\n      if (deleteTask === true) {\\n        _StoreContext2.default.stores.task.remove({ id: task.id }).then(function () {\\n          _this3.bindSearchTasks();\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'edit',\\n    value: function edit(task) {\\n      this.state.task = task;\\n      this.setState(this.state);\\n    }\\n  }, {\\n    key: 'closeEdit',\\n    value: function closeEdit() {\\n      this.state.task = undefined;\\n      this.setState(this.state);\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _React$createElement;\\n\\n      var styles = {\\n        filter: 'ui tab segment',\\n        form: 'ui tab segment'\\n      };\\n\\n      if (this.state.task) {\\n        styles.form = +' active';\\n      } else {\\n        styles.filter = +' active';\\n      }\\n\\n      var RowComponent = _react2.default.createClass({\\n        displayName: 'RowComponent',\\n\\n        render: function render() {\\n          var parent = this.props.metadata.customProperties.parent;\\n          var task = this.props.rowData;\\n\\n          return _react2.default.createElement(\\n            'div',\\n            { className: 'ui grid' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'ten wide column' },\\n              _react2.default.createElement(\\n                'label',\\n                null,\\n                this.props.data\\n              )\\n            ),\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'five wide column' },\\n              _react2.default.createElement(\\n                'button',\\n                { className: 'mini ui icon button violet', onClick: function onClick() {\\n                    return parent.edit(task);\\n                  } },\\n                _react2.default.createElement('i', { className: 'edit icon' })\\n              ),\\n              _react2.default.createElement(\\n                'button',\\n                { className: 'mini ui icon button red', onClick: function onClick() {\\n                    return parent.delete(task);\\n                  } },\\n                _react2.default.createElement('i', { className: 'trash icon' })\\n              )\\n            )\\n          );\\n        }\\n      });\\n\\n      var columnMetadata = [{\\n        columnName: 'name',\\n        displayName: _lang.CurrentLanguage.timer.taskList.columns.name.label,\\n        order: 1,\\n        locked: false,\\n        visible: true,\\n        customComponent: RowComponent,\\n        customProperties: {\\n          parent: this\\n        }\\n      }];\\n\\n      return _react2.default.createElement(\\n        'div',\\n        { id: 'taskList' },\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'ui pointing secondary menu' },\\n          _react2.default.createElement(\\n            'a',\\n            { className: 'item active' },\\n            'Filtro'\\n          ),\\n          _react2.default.createElement(\\n            'a',\\n            { className: 'item' },\\n            'Cadastro'\\n          )\\n        ),\\n        _react2.default.createElement(\\n          'div',\\n          { className: styles.filter, 'data-tab': 'filter' },\\n          _react2.default.createElement(_griddleReact2.default, (_React$createElement = { results: this.state.tasks,\\n            tableClassName: 'table',\\n            columnMetadata: columnMetadata,\\n            columns: [\\\"name\\\"],\\n            resultsPerPage: 5,\\n            useGriddleStyles: false\\n          }, _defineProperty(_React$createElement, 'tableClassName', 'ui very basic selectable table small'), _defineProperty(_React$createElement, 'noDataMessage', _lang.CurrentLanguage.grid.empty), _defineProperty(_React$createElement, 'onRowClick', this.selectTask), _React$createElement))\\n        ),\\n        _react2.default.createElement(\\n          'div',\\n          { className: styles.form, 'data-tab': 'form' },\\n          _react2.default.createElement(_EditTask2.default, { task: this.state.task, closeEdit: this.closeEdit.bind(this), updateGrid: this.bindSearchTasks.bind(this) })\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return TaskList;\\n}(_react2.default.Component);\\n\\n;\\n\\nTaskList.contextTypes = {\\n  router: _react2.default.PropTypes.object\\n};\\n\\nexports.default = TaskList;\\nmodule.exports = exports['default'];\\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/taskManagement/TaskList.jsx\\n ** module id = 54\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/taskManagement/TaskList.jsx?\");\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"/* WEBPACK VAR INJECTION */(function($) {'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar EditTask = function (_React$Component) {\\n  _inherits(EditTask, _React$Component);\\n\\n  function EditTask(props, context) {\\n    _classCallCheck(this, EditTask);\\n\\n    var _this = _possibleConstructorReturn(this, (EditTask.__proto__ || Object.getPrototypeOf(EditTask)).call(this, props));\\n\\n    _this.state = {\\n      task: {}\\n    };\\n\\n    _this.state.fields = {\\n      taskName: { value: '', requestChange: function requestChange(newValue) {\\n          _this.changeState('taskName', newValue);\\n        } }\\n    };\\n\\n    _this.saveTask = _this.saveTask.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(EditTask, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.prepareComponentState(this.props);\\n      this.prepareForm();\\n    }\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {\\n      this.prepareComponentState(nextProps);\\n    }\\n  }, {\\n    key: 'prepareComponentState',\\n    value: function prepareComponentState(props) {\\n      var newState = this.state;\\n\\n      newState.task = props.task || {};\\n\\n      this.closeEdit = props.closeEdit;\\n      this.updateGrid = props.updateGrid;\\n\\n      if (props.task) {\\n        newState.fields.taskName.value = props.task.name;\\n      }\\n\\n      this.setState(newState);\\n    }\\n  }, {\\n    key: 'bindState',\\n    value: function bindState(task) {\\n      this.state.task = task;\\n      this.state.fields.taskName.value = task.name;\\n\\n      this.setState(this.state);\\n    }\\n  }, {\\n    key: 'prepareForm',\\n    value: function prepareForm() {\\n      $(this.refs.form).form({\\n        fields: {\\n          taskName: 'empty'\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'saveTask',\\n    value: function saveTask(e) {\\n      var _this2 = this;\\n\\n      this.state.task.name = this.state.fields.taskName.value;\\n      this.setState(this.state);\\n\\n      _StoreContext2.default.stores.task.update(this.state.task).then(_StoreContext2.default.stores.taskLog.updateTask(this.state.task)).then(function () {\\n        alert(_lang.CurrentLanguage.taskManagement.messages.taskUpdated);\\n        _this2.closeEdit();\\n        _this2.updateGrid();\\n      });\\n    }\\n  }, {\\n    key: 'changeState',\\n    value: function changeState(prop, newValue) {\\n      var newState = this.state;\\n\\n      newState.fields[prop].value = newValue;\\n\\n      this.setState(newState);\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(\\n          'form',\\n          { className: 'ui form', ref: 'form' },\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'field' },\\n            _react2.default.createElement(\\n              'label',\\n              null,\\n              _lang.CurrentLanguage.taskManagement.form.taskName\\n            ),\\n            _react2.default.createElement('input', { type: 'text', placeholder: '', valueLink: this.state.fields.taskName })\\n          ),\\n          _react2.default.createElement(\\n            'button',\\n            { type: 'button', className: 'ui approve button green', onClick: this.saveTask },\\n            _react2.default.createElement('i', { className: 'save icon' }),\\n            _lang.CurrentLanguage.buttons.save\\n          ),\\n          _react2.default.createElement(\\n            'button',\\n            { type: 'button', className: 'ui cancel button red', onClick: this.closeEdit },\\n            _react2.default.createElement('i', { className: 'reply icon' }),\\n            _lang.CurrentLanguage.buttons.cancel\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return EditTask;\\n}(_react2.default.Component);\\n\\n;\\n\\nEditTask.contextTypes = {\\n  router: _react2.default.PropTypes.object\\n};\\n\\nexports.default = EditTask;\\nmodule.exports = exports['default'];\\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/taskManagement/EditTask.jsx\\n ** module id = 55\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/taskManagement/EditTask.jsx?\");\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _SettingSite = __webpack_require__(57);\\n\\nvar _SettingSite2 = _interopRequireDefault(_SettingSite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar SettingApp = function (_React$Component) {\\n  _inherits(SettingApp, _React$Component);\\n\\n  function SettingApp(props, context) {\\n    _classCallCheck(this, SettingApp);\\n\\n    return _possibleConstructorReturn(this, (SettingApp.__proto__ || Object.getPrototypeOf(SettingApp)).call(this, props));\\n  }\\n\\n  _createClass(SettingApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_SettingSite2.default, null);\\n    }\\n  }]);\\n\\n  return SettingApp;\\n}(_react2.default.Component);\\n\\nSettingApp.defaultProps = {\\n  displayName: 'SettingApp'\\n};\\nexports.default = SettingApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/SettingApp.jsx\\n ** module id = 56\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/SettingApp.jsx?\");\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _StoreContext = __webpack_require__(12);\\n\\nvar _StoreContext2 = _interopRequireDefault(_StoreContext);\\n\\nvar _Setting = __webpack_require__(17);\\n\\nvar _Setting2 = _interopRequireDefault(_Setting);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar remote = __webpack_require__(28).remote;\\n\\nvar SettingSite = function (_BaseSite) {\\n  _inherits(SettingSite, _BaseSite);\\n\\n  function SettingSite(props) {\\n    _classCallCheck(this, SettingSite);\\n\\n    var _this = _possibleConstructorReturn(this, (SettingSite.__proto__ || Object.getPrototypeOf(SettingSite)).call(this, props));\\n\\n    _this.state = {};\\n\\n    _this.state.fields = {\\n      interval: { value: 25, requestChange: function requestChange(newValue) {\\n          _this.changeState('interval', newValue);\\n        } },\\n      wait: { value: 5, requestChange: function requestChange(newValue) {\\n          _this.changeState('wait', newValue);\\n        } }\\n    };\\n\\n    _this.saveSetting = _this.saveSetting.bind(_this);\\n    _this.loadSetting = _this.loadSetting.bind(_this);\\n    _this.clearDatabase = _this.clearDatabase.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(SettingSite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('setting');\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(SettingSite.prototype.__proto__ || Object.getPrototypeOf(SettingSite.prototype), 'componentDidMount', this).call(this);\\n      this.loadSetting();\\n    }\\n  }, {\\n    key: 'changeState',\\n    value: function changeState(prop, newValue) {\\n      var newState = this.state;\\n\\n      newState.fields[prop].value = newValue;\\n\\n      this.setState(newState);\\n    }\\n  }, {\\n    key: 'loadSetting',\\n    value: function loadSetting() {\\n      var setting = _StoreContext2.default.stores.setting.current();\\n\\n      this.state.fields.interval.value = setting.interval;\\n      this.state.fields.wait.value = setting.wait;\\n\\n      this.setState(this.state);\\n    }\\n  }, {\\n    key: 'saveSetting',\\n    value: function saveSetting() {\\n      var setting = _StoreContext2.default.stores.setting.current();\\n\\n      setting.interval = parseInt(this.state.fields.interval.value);\\n      setting.wait = parseInt(this.state.fields.wait.value);\\n\\n      _StoreContext2.default.stores.setting.update(setting).then(function () {\\n        alert(_lang.CurrentLanguage.setting.message.success);\\n      });\\n    }\\n  }, {\\n    key: 'clearDatabase',\\n    value: function clearDatabase() {\\n      var _this2 = this;\\n\\n      var clearDbResult = confirm(_lang.CurrentLanguage.setting.message.clearDatabaseConfirm);\\n\\n      if (clearDbResult === true) {\\n        _StoreContext2.default.clearDatabase().then(function () {\\n          _this2.loadSetting();\\n          alert(_lang.CurrentLanguage.setting.message.clearDatabase);\\n          remote.getCurrentWindow().reload();\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(_MenuBar2.default, { ref: 'menuBar', visible: true }),\\n        _react2.default.createElement(\\n          'div',\\n          { className: 'ui one column center aligned grid' },\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column ten wide' },\\n            _react2.default.createElement(\\n              'h4',\\n              { className: 'ui horizontal inverted divider' },\\n              _lang.CurrentLanguage.setting.title\\n            )\\n          ),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'column fifteen wide' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'ui mini form' },\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'two fields' },\\n                _react2.default.createElement(\\n                  'div',\\n                  { className: 'field' },\\n                  _react2.default.createElement(\\n                    'label',\\n                    null,\\n                    _lang.CurrentLanguage.setting.interval.default\\n                  ),\\n                  _react2.default.createElement(\\n                    'div',\\n                    { className: 'ui right labeled left icon input' },\\n                    _react2.default.createElement('i', { className: 'wait icon' }),\\n                    _react2.default.createElement('input', { placeholder: '', type: 'number', valueLink: this.state.fields.interval }),\\n                    _react2.default.createElement(\\n                      'div',\\n                      { className: 'ui basic label' },\\n                      'mm'\\n                    )\\n                  )\\n                ),\\n                _react2.default.createElement(\\n                  'div',\\n                  { className: 'field' },\\n                  _react2.default.createElement(\\n                    'label',\\n                    null,\\n                    _lang.CurrentLanguage.setting.interval.wait\\n                  ),\\n                  _react2.default.createElement(\\n                    'div',\\n                    { className: 'ui right labeled left icon input' },\\n                    _react2.default.createElement('i', { className: 'wait icon' }),\\n                    _react2.default.createElement('input', { placeholder: '', type: 'number', valueLink: this.state.fields.wait }),\\n                    _react2.default.createElement(\\n                      'div',\\n                      { className: 'ui basic label' },\\n                      'mm'\\n                    )\\n                  )\\n                )\\n              ),\\n              _react2.default.createElement(\\n                'button',\\n                { className: 'ui labeled icon button red', onClick: this.clearDatabase },\\n                _react2.default.createElement('i', { className: 'trash icon' }),\\n                _lang.CurrentLanguage.setting.buttons.clearDatabase\\n              ),\\n              _react2.default.createElement('div', { className: 'ui divider' }),\\n              _react2.default.createElement(\\n                'button',\\n                { className: 'ui labeled icon button green', onClick: this.saveSetting },\\n                _react2.default.createElement('i', { className: 'save icon' }),\\n                _lang.CurrentLanguage.setting.buttons.save\\n              )\\n            )\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return SettingSite;\\n}(_BaseSite3.default);\\n\\nSettingSite.defaultProps = {\\n  displayName: 'SettingSite'\\n};\\nexports.default = SettingSite;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/SettingSite.jsx\\n ** module id = 57\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/SettingSite.jsx?\");\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _AboutSite = __webpack_require__(59);\\n\\nvar _AboutSite2 = _interopRequireDefault(_AboutSite);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar AboutApp = function (_React$Component) {\\n  _inherits(AboutApp, _React$Component);\\n\\n  function AboutApp(props, context) {\\n    _classCallCheck(this, AboutApp);\\n\\n    return _possibleConstructorReturn(this, (AboutApp.__proto__ || Object.getPrototypeOf(AboutApp)).call(this, props));\\n  }\\n\\n  _createClass(AboutApp, [{\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(_AboutSite2.default, null);\\n    }\\n  }]);\\n\\n  return AboutApp;\\n}(_react2.default.Component);\\n\\nAboutApp.defaultProps = {\\n  displayName: 'AboutSite'\\n};\\nexports.default = AboutApp;\\n;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/app/AboutApp.jsx\\n ** module id = 58\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/app/AboutApp.jsx?\");\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _jquery = __webpack_require__(2);\\n\\nvar _jquery2 = _interopRequireDefault(_jquery);\\n\\nvar _react = __webpack_require__(3);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactRouter = __webpack_require__(5);\\n\\nvar _lang = __webpack_require__(11);\\n\\nvar _BaseSite2 = __webpack_require__(27);\\n\\nvar _BaseSite3 = _interopRequireDefault(_BaseSite2);\\n\\nvar _MenuBar = __webpack_require__(22);\\n\\nvar _MenuBar2 = _interopRequireDefault(_MenuBar);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar AboutSite = function (_BaseSite) {\\n  _inherits(AboutSite, _BaseSite);\\n\\n  function AboutSite(props, context) {\\n    _classCallCheck(this, AboutSite);\\n\\n    var _this = _possibleConstructorReturn(this, (AboutSite.__proto__ || Object.getPrototypeOf(AboutSite)).call(this, props));\\n\\n    _this.context = context;\\n    _this.state = {};\\n    return _this;\\n  }\\n\\n  _createClass(AboutSite, [{\\n    key: 'componentWillMount',\\n    value: function componentWillMount() {\\n      this.bindBodyClass('about');\\n    }\\n  }, {\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      _get(AboutSite.prototype.__proto__ || Object.getPrototypeOf(AboutSite.prototype), 'componentDidMount', this).call(this);\\n    }\\n  }, {\\n    key: 'componentWillReceiveProps',\\n    value: function componentWillReceiveProps(nextProps) {}\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        'div',\\n        null,\\n        _react2.default.createElement(\\n          'div',\\n          null,\\n          _react2.default.createElement(_MenuBar2.default, { ref: 'menuBar', visible: true }),\\n          _react2.default.createElement(\\n            'div',\\n            { className: 'ui one column center aligned grid about-message' },\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'column ten wide' },\\n              _react2.default.createElement(\\n                'h4',\\n                { className: 'ui horizontal inverted divider' },\\n                _lang.CurrentLanguage.about.title\\n              )\\n            ),\\n            _react2.default.createElement(\\n              'div',\\n              { className: 'column fifteen wide' },\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'row' },\\n                _lang.CurrentLanguage.about.message\\n              ),\\n              _react2.default.createElement('br', null),\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'row' },\\n                _react2.default.createElement(\\n                  'strong',\\n                  null,\\n                  'powered by'\\n                ),\\n                ' ',\\n                _react2.default.createElement(\\n                  'a',\\n                  { href: _lang.CurrentLanguage.about.site },\\n                  _lang.CurrentLanguage.about.poweredby\\n                )\\n              ),\\n              _react2.default.createElement(\\n                'div',\\n                { className: 'row' },\\n                _react2.default.createElement('img', { className: 'logo-cpdev', src: 'images/cpdev.png' })\\n              )\\n            )\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return AboutSite;\\n}(_BaseSite3.default);\\n\\nAboutSite.defaultProps = {\\n  displayName: 'AboutSite'\\n};\\n;\\n\\nAboutSite.contextTypes = {\\n  router: function router() {\\n    return _react2.default.PropTypes.func.isRequired;\\n  }\\n};\\n\\nexports.default = AboutSite;\\nmodule.exports = exports['default'];\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/js/components/site/AboutSite.jsx\\n ** module id = 59\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/js/components/site/AboutSite.jsx?\");\n\n/***/ }\n/******/ ]);"],"file":"client.js","sourceRoot":"/source/"}